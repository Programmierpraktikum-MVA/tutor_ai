[
    "Link to module description",
    "Participation:",
    "At most 12 teams, at most 3 members per team.",
    "Everyone who wants to participate has to fill the questionnaires (made available in the first lecture week).",
    "Topics:",
    "In the first lecture we will present to you a few problems from which you can choose one.",
    "Throughout the semester with our guidance you will research possible approaches for solving this problem. You will implement a solver, report on your benchmark results and the tricks you used.",
    "General workflow:",
    "Participants will program and present a solver for one of the problems defined in the first lecture.",
    "In regular intervals (approx. 3 weeks) the participants have to submit\n    their program for testing. Additionally, for each submission the participants\n    will submit a short PDF and present their \nprogram in a short talk followed by a question round (",
    "in presence!",
    ").",
    "Difference to",
    "Algorithm Engineering I",
    ":",
    "In this course, we expect much more independent work. Participants will conduct a proper literature review to find existing algorithms for the problem they are going to solve. It is expected that they understand, implement, and report on such algorithms and come up with their own ideas on how to improve them/fill-in details that may have been left out in research papers.",
    "Required previous knowledge:",
    "Programming \nskills and basic algorithmic understanding are required. Participants \nshould be familiar with data structures (stacks, hashmaps, lists, ...) \nand should be able to select the appropriate data structure for the task\n at hand. Familiarity with basic algorithms like Breadth-First-Search \nare assumed.",
    "The following previous knowledge is not explicitly required, but helpful and recommended:",
    "a solid basic knowledge of topics like",
    "fixed-parameter tractability",
    "NP-hardness and polynomial-time reductions",
    "data reduction",
    "branch&bound",
    "...",
    "experience from the Algorithm Engineering I course",
    "Time and location:",
    "The\n kick-off meeting takes place on Wednesday the 24th of April 14h-16h online (",
    "link",
    ").",
    "Primary slot: Monday 12-16 MAR 0.002 (INET group) or MAR 0.009 (AKT group) for lecture and presentations (not every week)",
    "Aktivität Schedule Block 1 April 19 10-12 am 1st lecture (on... auswählen",
    "Schedule",
    "Block 1",
    "Block 1",
    "April 24",
    "14-16h",
    "kick-off meeting [",
    "orga slides",
    ",",
    "AKT-problem",
    ",",
    "INET-problems",
    "]",
    "April 28",
    "Deadline for registration poll",
    "May 2",
    "Final group assignment",
    "May 7",
    "Deadline to confirm participation",
    "May 13",
    "Algorithm Engineering Basics \"catch-up lecture\"",
    "May 15",
    "Deadline for registration on MOSES",
    "May 25",
    "12h",
    "Handout submission deadline",
    "May 27",
    "12-16h",
    "Milestone 1 Presentations in MAR",
    "Block 2",
    "Block 2",
    "June 3",
    "Lecture:",
    "Code Review Basics",
    "and",
    "C++ Code Smells",
    "June 22",
    "Solver submission deadline",
    "June 22",
    "Handout submission deadline for",
    "Exercise Sheet 2",
    "June 24",
    "12-16h",
    "Milestone 2 Presentations in MAR",
    "Block 3",
    "Block 3",
    "July 4",
    "Deadline for signalling participation in code-reviews",
    "July 5",
    "Distribution of code-review tasks to participating teams",
    "July 8",
    "Guest Lecture: Michel Steuwer (TU Berlin) on Profilers",
    "July 16",
    "Deadline for submitting",
    "code reviews",
    "July 20",
    "Solver submission deadline",
    "July 20",
    "Handout submission deadline",
    "July 22",
    "12-16h",
    "Milestone 3 Presentations in MAR"
]
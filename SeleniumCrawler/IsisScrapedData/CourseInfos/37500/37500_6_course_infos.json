[
    "1.",
    "Roman Schmidtke",
    ", \"Main Content Extraction from Web Pages\" (Defense,",
    "Advisor",
    ": Prof. Dr. Stefan Jähnichen",
    ")",
    "Abstract",
    ".",
    "In order to equip a chatbot with knowledge so that it can answer questions, information is extracted from websites. Using this information, a chatbot generates",
    "answers based on the principle of retrieval augmented generation. This work",
    "presents a combination of main content extraction and chunking that improves the",
    "retrieval of information. In this method, not only plain text but also the structure,",
    "such as the arrangement of the headings of the corpus, is extracted. This is crucial",
    "for the chunking approach, where the extracted text is cut based on the structure",
    "of the web document. The overlaying headings are attached to each chunk, which",
    "improves the context and thus the information retrieval by the bot. The results of",
    "the main content extraction were evaluated by comparing this work’s solution with",
    "two algorithms, namely BoilerNet and DOM-Distiller. The evaluation showed a",
    "better Word Error Rate (WER) on three selected web pages. An average WER",
    "of 0.1 was achieved, compared to the second-best average of 0.67 and the least",
    "favorable average value of 1.22.",
    "2.",
    "Jamy Zhou Hu",
    ", \"Classifying Questions into Information-seeking and Non-information Seeking Questions\" (Defense,",
    "Advisor",
    ": Prof. Dr. Stefan Jähnichen",
    ")",
    "Abstract",
    ".",
    "With the increasing importance of chatbots and their frameworks in businesses,",
    "the significance of their quality and accuracy grow larger as well. Due to in-built",
    "classifiers which need mostly extensive manual training, the performance and usage",
    "is very limited. In order for improvement, this paper proposes a multiclass",
    "message classifier which will be used in Rasa chatbots, that will label incoming",
    "user messages for further processing in the pipeline. The classifier will be trained",
    "and tested on the base of the multilingual model of Bidirectional Encoder Representations",
    "from Transformers (BERT) from huggingface.",
    "3.",
    "Felix Wayß",
    ", \"Investigating efficient co-processing in multi-query stream processing\" (Defense,",
    "Advisor",
    ": Dwi Nugroho",
    ")",
    "Abstract",
    ".",
    "Due to the increasing popularity of the Internet of Things (IoT), there are more and more data streams, and with it the need to process them increases. Since the abolition of Dennard scaling, Central Processing Units (CPUs) are unable to keep up with this increasing need for computational power. Therefore, researchers are exploring alternative processors. One such alternative is the Graphics Processing Unit (GPU), which excels in parallel processing. However, leveraging the computing capabilities of the GPU in stream processing presents certain challenges. This thesis investigates how to efficiently employ the GPU in a stream processing system for multiple concurrent queries. This includes the design of a prototype that allows for the efficient execution of multiple concurrent streaming queries, as well as the scheduling or decomposition of these queries to maximize the system’s throughput. To achieve this, we optimize the query execution for each processor individually and take measures to avoid contention between different queries, allowing for efficient concurrent execution. Furthermore, we evaluate the performance for different co-processing approaches (e.g., CPU-only, GPU-only, Fine-grained, Unified Queue and Query Offloading). We conduct a comprehensive analysis of how certain query characteristics and especially the number of concurrent queries impact the system when executing selected NEXMark streaming benchmark queries. We found that for simpler query types, such as map or filter operations, the GPU-based co-processing approaches have a lower throughput than the CPU. However, for certain query configurations using the GPU, especially in a Unified Queue approach can yield a performance improvement over the naive CPU implementation. This improvement was observed both in scenarios involving multiple eager window hash join queries, where the throughput increased by up to 43%, and when these join queries were executed concurrently with simpler queries (e.g., map queries). In this configuration, the throughput was up to 21% higher. Furthermore, the characteristics that benefit the GPU the most, are a low selectivity and a batch size of around 2.5MB.",
    "4.",
    "Ogün Isik",
    ", \"A Comparative Analysis of State-of-the-Art Federated Query Engines\" (Defense,",
    "Advisor",
    ": Harry Gavriilidis",
    ")",
    "Abstract",
    ". This thesis proposes a framework to build a benchmark for evaluating the performance",
    "of state-of-the-art federated query engines, using the TPC-H benchmark",
    "as a standard dataset.",
    "The focus is on query engines capable of processing queries across multiple data",
    "sources. With the new benchmark, we will have a set of metrics that help us to",
    "evaluate the performance of the query engine and make a comparison between",
    "execution plans to determine possible bottlenecks and areas of improvement. An",
    "interesting aspect of this analysis is uncovering the performance differences among",
    "the engines. This involves a detailed comparison of hardware utilization and query",
    "plans, providing insights into potential bottlenecks and limitations with certain",
    "workloads.",
    "The results of this benchmark aim to identify specific factors contributing to",
    "performance variations, to show how federated query engines are currently performing",
    "compared to others. The engines evaluated include Trino, Presto, Dremio,",
    "and Apache Spark. Some FQEs show varying outcomes, with no single engine consistently",
    "dominating across all queries, although one engine outperforms the others",
    "overall. Some engines failed to complete certain queries, and there were substantial",
    "differences in hardware resource utilization.",
    "5.",
    "Ludwig Voß",
    ",",
    "\"",
    "Tuning/Using Extended Statistics for Better Cardinality Estimations in",
    "PostgreSQL",
    "\"",
    "(Proposal,",
    "Advisor",
    ": Stefan Halfpap",
    ")"
]
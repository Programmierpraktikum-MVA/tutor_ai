[
    "1.",
    "Felix Lang",
    ", \"Continuous Query Execution Under Continuous Infrastructure Evolution\" (Defense,",
    "Advisor",
    ": Ankit Chaudhary",
    ")",
    "Abstract",
    ".",
    "Modern Internet of Things (IoT) applications\nproduce vast amounts of real-time sensory data. Distributed Stream Processing\nEngines (DSPEs) face the challenge of handling these high-volume data streams\nwhile maintaining low latency requirements. Deploying operators to the edge or\nthe fog can reduce data transfer costs and latency compared to processing data\nexclusively in the cloud. However, the movement of mobile devices in IoT\ndeployments poses a challenge to continuous query execution at the network\nedge. Mobile devices will repeatedly drop existing network connections and\nestablish new ones, leading to continuous changes in the network\ninfrastructure. These volatile conditions can lead to data loss and query failure\nas network paths between deployed operators become unavailable. This thesis\npresents a solution for network-aware adaptation of running queries to\ncontinuous infrastructure evolution. Existing approaches are limited to edge-only\ndeployments, rely on deploying operator replicas, or perform only device-local redeployment\ndecisions. We propose a solution to incrementally adapt global operator placements\nto evolving network topologies. Based on these incremental placement decisions\nwe redeploy operators in a unified edge-fog-cloud environment. Furthermore, we\nallow proactive operator redeployment based on predicted mobile device\nmovement. We integrate our solution into the NebulaStream (NES) platform. Our\nevaluations show that the proposed solution improves latency by up to 56x over\na naive baseline approach. Furthermore, our solution is able to handle a higher\nrate of mobile device reconnects compared to the baseline approach.",
    "2.",
    "Joris Gabrisch",
    ", \"Concept Drift Detection in Business Process Event Streams\" (Defense,",
    "Advisor",
    ": Ariane Ziehn",
    ")",
    "Abstract",
    ". In Process Mining, Petri-nets are used to model the workflow of activities within business processes in an organization. These processes underlie continuous changes due to the",
    "environment in which the organization operates. These changes may lead to variations in the characteristics of the data, so-called concept drifts, which are contained in the",
    "logged execution data. Detecting and reacting to these concept drifts in near real-time is crucial for efficient operations and can provide not only process improvement but",
    "also cost reduction. Current methods that predict remaining times for still-running process instances assume a general stationary concept in the time perspective of the",
    "process to make accurate predictions. Not detected concept drifts in the data can lead to tremendous negative effects on the prediction accuracy from said approaches.",
    "In this work, we propose a novel online detection algorithm to detect such drifts in the time perspective of a business process. Our online algorithm extends the method of process histories, a drift detection method developed for the control-flow and data perspective of a business process but incapable of detecting concept drift in the time perspective. In order to extend process histories for concept drift from the time perspective, we introduce a time model that holds distribution estimators to model activity execution times using information from the directly-follows graph of the business process. Additionally, we develop discovery and conformance-checking methods for this specific time model to effectively detect concept drifts in the time perspective. We implemented a proof-of-concept prototype of our online algorithm using pyBeamline as a framework. We evaluate our algorithm using synthetic and real-world datasets using the Google Cloud Run Service for container hosting. Our evaluation shows that our algorithm detects three out of four concept drift types with an average accuracy of 80% within a broader range of parameters. In sum, our work shows that concept drift detection in the time perspective of a business process is conceptually possible and enables organizations to react to those concept drifts in a timely manner.",
    "3.",
    "John",
    "Nguyen",
    ",",
    "\"",
    "Evaluating relational joins with SIMD instructions in",
    "Intel SGX enclaves",
    "\" (Proposal,",
    "Advisor",
    ": Kajetan Maliszewski",
    ")",
    "4.",
    "Jan Meller",
    ", \"Post Query Processing Privacy Quality Assurance\" (Proposal,",
    "A",
    "dvisor",
    ": Rudi Poepsel Lemaitre",
    ")"
]
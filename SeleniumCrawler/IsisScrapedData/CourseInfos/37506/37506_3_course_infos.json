[
    "1. Lukas Schwerdtfege",
    "r",
    ", \"Towards Unikernel-based Stream Processing\" (Defense,",
    "Advisor",
    ": Dimitrios Giouroukis",
    ")",
    "Abstract",
    ". The Internet of Things (IoT) presents a novel computing architecture for data management:",
    "Databases and Stream Processing Engines (SPE) need to perform query",
    "processing in distributed, heterogeneous, mobile, and potentially hostile environments.",
    "To avoid expensive dynamic lookups for query and schema information",
    "during query execution, databases and SPEs use query compilation to generate",
    "optimized machine code.",
    "Traditionally, SPEs depend on an operating system such as Linux to provide networking",
    "and memory management primitives, making them impractical for use in",
    "small IoT devices. Additionally, conventional query compilation methods only address",
    "the query execution and not the I/O operations, where the operating system",
    "is a boundary that cannot be optimized.",
    "Unikernels eliminate the boundary between the application and the operating system,",
    "which makes them an ideal candidate for low-latency network applications.",
    "Unikernels allow aggressive query compilation across syscall boundaries by configuring",
    "typical runtime parameters at compile time. In addition, unikernels have a",
    "fast boot time, a small footprint, and promise a high degree of security, making",
    "them an excellent fit for the IoT.",
    "The initial prototype implementation hides the complexity from the user by lowering",
    "a textual query into a highly specialized operating system solely designed for",
    "query execution. We evaluate the prototype implementation, which reuses components",
    "of an existing stream processing engine, NebulaStream, and show how",
    "unikernel-based stream processing can improve throughput by 40% and decrease",
    "tail latencies by 35% compared to the traditional approach."
]
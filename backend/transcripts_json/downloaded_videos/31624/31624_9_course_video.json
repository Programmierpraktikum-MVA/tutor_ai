[{"lecture": "31624_9_course_video", "Timestamps": [{"text": "  In diesem Video schauen wir uns kurz das Prinzip von heuristischen und approximativen Algorithmen an.  Heuristische Algorithmen benutzen, wie der Name schon sagt, eine Heuristik zur Loesung des Problems.  Eine Heuristik ist eine Abschaetzung einer unbekannten Groesse.  Man schaetzt eine bestimmte Groesse ab, um ein Problem effizienter loesen zu koennen.", "start": 0.0, "end": 31.0}, {"text": "  Hierbei haengt es vom Algorithmus und vom Problem ab, ob eine optimale Loesung gefunden wird oder nicht.  Bei den approximativen Algorithmen schaetzen wir die Loesung lediglich ab.  Hierbei nehmen wir in Kauf, dass die Loesung nicht optimal ist, sondern ein wenig von der Optimalloesung abweicht.  Fuer diese Abweichung kann man eine Schranke definieren.", "start": 31.0, "end": 57.0}, {"text": "  Ein P-Aproximationsalgorithmus garantiert dann, dass die gefundene Loesung hoechstens um diesen Faktor P von der Optimalloesung abweicht.  Was unterscheidet diese beiden Algorithmentypen also nun voneinander?  Heuristische Algorithmen verwenden eine Heuristik basierend auf Vorwissen und Erfahrung.  Diese Heuristik wird verwendet, um den Suchraum, in dem wir unsere Loesungen suchen, einzuschraenken.", "start": 57.0, "end": 79.0}, {"text": "  Wir suchen unsere Loesung also zuerst in eine Richtung, die uns von der Heuristik vorgegeben wird.  Je nach Problem kann es sein, dass wir so sehr schnell zur optimalen Loesung kommen.  Approximate Algorithmen hingegen verwenden keine Heuristik.  Sie versuchen hingegen, die Loesung so genau wie moeglich abzuschaetzen, finden in den meisten Faellen allerdings nicht die optimalen Loesung.", "start": 79.0, "end": 103.0}, {"text": "  Je nach Approximierbarkeit des Problems, kann man die Loesung unterschiedlich genau abschaetzen.  Wie bereits erwaehnt, koennen heuristische Algorithmen je nach Problem und Heuristik entweder eine sehr gute oder sogar die optimale Loesung finden, allerdings auch eine sehr suboptimale Loesung.", "start": 103.0, "end": 122.0}, {"text": "  Bei approximativen Algorithmen hingegen, weicht die Loesung hoechstens um einen gewissen Faktor von der optimalen Loesung ab.  Die Approximierbarkeit von Problemen laesst sich nun in drei Kategorien einteilen.  Zum einen gibt es die Probleme, die beliebig gut approximierbar sind.  Wir kommen also beliebig nah an die optimale Loesung ran, wenn wir ein approximativen Algorithmus verwenden.", "start": 122.0, "end": 144.0}, {"text": "  Die zweite Klasse von Problemen sind die Probleme, die approximierbar sind, aber nur bis zu einer bestimmten Grenze.  Das heisst, wir kommen auch durch Approximieren immer dichter an die optimalen Loesung ran, allerdings nur bis zu einer bestimmten Grenze.  Eine bessere Abschaetzung als bis zu dieser Grenze finden wir fuer diese Probleme nicht.", "start": 144.0, "end": 163.0}, {"text": "  Die dritte Kategorie von Problemen sind die nicht approximierbaren Probleme.  Hier ist es uns gar nicht moeglich, eine gute Approximation fuer die Loesung zu finden.  Wollt ihr zu diesen Themen mehr Details wissen, so schaut doch einmal ins Skript unter Kapitel 14 fuer die heuristischen Algorithmen und Kapitel 15 fuer die approximativen Algorithmen.", "start": 163.0, "end": 187.0}, {"text": "  Das ist der erste Punkt, der uns die Probleme verwendet hat.  Wir haben uns die Probleme verwendet, die wir uns in der Technik verwendet haben.  Wir haben uns die Probleme verwendet, die wir uns in der Technik verwendet haben.  Wir haben uns die Probleme verwendet, die wir uns in der Technik verwendet haben.  Wir haben uns die Probleme verwendet, die wir uns in der Technik verwendet haben.", "start": 187.0, "end": 207.0}]}]
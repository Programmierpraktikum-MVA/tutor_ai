[{"lecture": "31624_72_course_video", "Timestamps": [{"text": "  In diesem Video geht es um eine weitere Strategie, wie man mit Kollisionen umgeht.  Wenn ein Schluessel eine Hesch-Adresse-Zubot gewiesen bekommt, die schon besetzt ist, nennt  man ihn Ueberlaeufer.  Bei der Sondierung ist die Heschterwelle ein Erre von Schluessel.  Fuer Ueberlaeufer werden freie Plaetze an anderer Stelle innerhalb der Heschterwelle gesucht.", "start": 0.0, "end": 31.0}, {"text": "  Wichtig dabei ist, dass dieser Ueberlaeufer auch spaeter wiedergefunden wird.  Dafuer wird die Strategie zur Suche freier Plaetze als eine Funktion definiert, der sogenannten  Sondierungsfunktion.  Fuer die lineare Sondierung ist S von N pl. N definiert.  Die Sondierungsfolge ist die Summe aus Hesch-Adresse und dem Offset, der durch die Sondierungsfunktion  festgelegt ist.", "start": 31.0, "end": 60.0}, {"text": "  Sowohl in der Suche nach einem freien Platz beim Einfuegen als auch bei der Suche nach  einem Schluessel werden die Hesch-Adressen gemaess der Sondierungsfolge mit steigendem  Wert fuer N abgesucht.  Auf diese Weise ist sichergestellt, dass ein Schluessel, der aufgrund einer Kollision  an einer anderen Adresse gespeichert wird, was seine Hesch-Funktion angeht, auch wiedergefunden  werden kann.", "start": 60.0, "end": 84.0}, {"text": "  Wir betrachten dasselbe Beispiel wie bei der Kollisionsaufloesung mit Verkettung.  Der Schluessel 9 wird unter seiner Hesch-Adresse 2 in der Hesch-Tabelle gespeichert.  Ebenso der Schluessel 3 mit Hesch-Adresse 3.  Der Schluessel 16 hat auch die Hesch-Adresse 2, genau wie der Schluessel 9.  Daher ist an dieser Stelle in der Hesch-Tabelle der Platz schon belegt.", "start": 84.0, "end": 110.0}, {"text": "  Wir muessen also einen neuen freien Platz gemaess der Sondierungsfolge suchen.  Wir gehen zunaechst einen Schritt weiter, erst von 1 ist 1, hier ist aber auch besetzt.  Deswegen gehen wir noch einen weiteren Schritt in der Sondierungsfolge und finden nun einen  freien Platz unter der Hesch-Adresse 4.  Der Schluessel 16 wird also hier ersatzweise unter der Adresse 4 gespeichert.", "start": 110.0, "end": 136.0}, {"text": "  Der Schluessel 7 findet wieder einen freien Platz unter der Adresse 0.  Dann folgt der Schluessel 2, wo es wieder eine Kollision gibt.  Der Platz in der Hesch-Tabelle ist besetzt.  Fuer diesen Ueberlaeufer suchen wir einen freien Platz gemaess der Sondierungsfolge 1 Schritt, 2 Schritt  und nach 3 Schritten finden wir einen freien Platz und speichern den Schluessel 2 unter der Hesch-Adresse 5.", "start": 136.0, "end": 163.0}, {"text": "  Nun kommt der Schluessel 18 an die Reihe mit Hesch-Adresse 4.  Es gab zwar vorher keinen anderen Schluessel, der diese Hesch-Adresse hat, aber trotzdem ist der Platz unter der Hesch-Adresse 4 belegt,  da hier ein Ueberlaeufer gespeichert wurde, der eigentlich auf Adresse 2 gespeichert werden sollte.  Daher muss auch fuer den Schluessel 18 eine Sondierungsfolge durchlaufen werden.", "start": 163.0, "end": 191.0}, {"text": "  Hier finden wir den freien Platz unter der Hesch-Adresse 6.  Die Operationen funktionieren also folgendermassen.  Beim Suchen laeuft man entlang der Sondierungsfolge und prueft den Schluessel, den man dort vorfindet.  Ist der gleich dem gesuchten Schluessel, ist die Suche erfolgreich beendet.  Ist der gleich 0, weil die Suche erfolglos.", "start": 191.0, "end": 216.0}, {"text": "  In anderen Faellen wird die Suche entlang der Sondierungsfolge weiter fortgesetzt.  Beim Einfuegen sucht man einen freien Platz, also einen Schluessel 0 entlang der Sondierungsfolge und puegt den Schluessel dort ein.  Das Loeschen bei der Kulissenaufloesung mit Sondierung ist etwas komplizierter.  Gehen wir zu unserem Beispiel zurueck und versuchen den Schluessel 16 zu loeschen.", "start": 216.0, "end": 243.0}, {"text": "  Dazu wird der Schluessel entlang der Sondierungsfolge gesucht.  Er wird in der Hesch-Adresse 4 gefunden.  Dann leeren wir das entsprechende Feld, in der der Schluessel gespeichert war.  Nun haben wir allerdings das Problem, dass die Schluessel, die spaeter eingefuegt und als Ueberlaeufer ueber diese Hesch-Adresse hinaus verschoben wurden, nicht mehr wiedergefunden werden.", "start": 243.0, "end": 273.0}, {"text": "  Eine Suche nach dem Schluessel 18 wuerde erfolglos zurueckkehren, da die Tabelle in der zugehoerigen Hesch-Adresse 4 leer ist.  Eine Suche nach dem Schluessel 2 wuerde gemaess der Sondierungsfolge auch die Suche bei der Hesch-Adresse 4 aufhoeren.", "start": 273.0, "end": 295.0}, {"text": "  Hier scheint es auf den ersten Blick so, dass das Problem dadurch einfach zu loesen ist, dass man die Suche bei einem freien Feld nicht beendet, sondern einfach in der Sondierungsfolge weiter vorangeht.  Diese Strategie funktioniert auch, hat aber katastrophale Folgen fuer die Effizienz.  Bei der Suche nach einem nicht vorhandenen Schluessel wuerde dann die ganze Hesch-Tabelle abgesucht werden.", "start": 295.0, "end": 315.0}, {"text": "  Damit waeren wir bei einer Laufzeit, die Linie in der Laenge der Hesch-Tabelle ist. Daher muss dem Problem anders begegnet werden.  Die Loesung ist, nach dem Loeschen in der Sondierungsfolge weiterzugehen und jedes der Elemente an der entsprechenden Stelle zu loeschen und neu einzufuegen.", "start": 315.0, "end": 339.0}, {"text": "  Wir loeschen also hier den Schluessel 2 und fuegen ihn neu nach dem bekannten Verfahren ein. Er findet nun einen Platz in der jetzt frei gewordenen Adresse 4.  Dies machen wir fuer alle Eintraege bis zu einer leeren Feldgelange. Die 18 wird geloescht und neu eingefuegt.", "start": 339.0, "end": 358.0}, {"text": "  Bei dem Schluessel 7 sehen wir nun eine Besonderheit. Er wird nach dem Loeschen wieder an derselben Stelle eingefuegt, an der er vorher war.  Und rutscht nicht wie die anderen Schluessel eine Position hoch. Das liegt daran, dass er schon unter seiner richtigen Adresse gespeichert war.", "start": 358.0, "end": 378.0}, {"text": "  Zusammenfassend ist die Strategie fuer das Loeschen also. Suche den zu loeschenden Schluessel entlang der Sondierungsfolge und setze den Eintrag auf 0.  Gehe dann weiter entlang der Sondierungsfolge, setze die jeweiligen Eintraege auf 0 und fuege sie neu in die Hesch-Tabelle ein.  Iteriere dies bis die naechste 0 erreicht wird.", "start": 378.0, "end": 397.0}, {"text": "  Es gibt allerdings auch eine andere Loesung fuer das Loeschen, die einfacher zu implementieren ist.  Sie ist allerdings weniger effizient. Diese Methode wird auch Lazy-Dilician genannt.  Dabei wird der zu Loeschendeintrag durch einen speziellen Wert als geloescht markiert.", "start": 397.0, "end": 416.0}, {"text": "  Bei der Suche nach Schluessel laeuft man ueber diesen Marker einfach hinweg, damit man auch die weiter hinten angehaengten Schluessel findet.  Beim Einfuegen stoppt man bei den Marker sowie bei dem leeren Eintrag und fuegt einen neuen Schluessel dort ein.  Die Laufzeitbetrachtung bei der Kollisionsaufloesung mit Sondierung ist schwieriger als bei der Verkettung.", "start": 416.0, "end": 439.0}, {"text": "  Wie wir in dem kleinen Beispiel gesehen haben, kann es passieren, dass ein Schluessel, fuer den es keine direkte Kollision per Heschfunktion gab, trotzdem zum Ueberlaeufer werden kann.  Die Heschadresse kann mit einem anderen Ueberlaeufer schon besetzt sein.  Wie beim Hesching mit Verkettung sind die Schluesselvergleiche des zeitkritischen Element.", "start": 439.0, "end": 454.0}, {"text": "  Ein Schluesselvergleich muss bei jedem Sondierungsschritt durchgefuehrt werden.  Unter der Annahme, dass die benutzten Heschadressen durch die Heschfunktion gleichmaessig verteilt sind,  ist die Anzahl der zu erwartenden Sondierungsschritte ein halbmal 1 plus 1 durch 1 minus alpha Quadrat fuer Einfuegen und erfolglose Suche.  Fuer erfolgreiche Suche bekommt man denselben Wert ohne das Quadrat.", "start": 454.0, "end": 485.0}, {"text": "  Fuer groessere Belegungsfaktoren alpha steigt die Anzahl der Sondierungsschritte und damit die Laufzeit immer schneller an.  Daher sollte man die Belegung moeglichst nicht ueber ein halb anwachsen lassen, sondern die Heschtabelle, wenn noetig, dynamisch vergroessern.", "start": 485.0, "end": 494.0}]}]
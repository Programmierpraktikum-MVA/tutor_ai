[{"lecture": "31624_47_course_video", "Timestamps": [{"text": "  Welcome back. In this video, we'll talk about the sessions. Why to use them, how to use them, and why are they so damn important to use.  As you've seen already in my previous videos, that sometimes I make mistakes. And that is normal while you program. We are human, we do mistakes.  And it's fine to learn from these mistakes and correct them. We can use debugging, as you may see in other videos.", "start": 0.0, "end": 38.0}, {"text": "  But sometimes we draw assumptions and we can anticipate if those are not fulfilled, then the code will fail.  And in those cases, we can use assertions.  Assertions will basically check a statement, whether it's true or false, and if it's false, then it can throw an error message.  This message is dedicated not for the user, but for the developer. And it helps you to find where your code failed.", "start": 39.0, "end": 68.0}, {"text": "  What functionality was not fulfilled, what assumptions were not met.  Let's have a look on a practical example.  Here we have our code that computes your average point that you get for your assignments.  Let's make this a method to be nicer.  It's over. It will be a static method that returns your average score or your grade.  Let's call it my grade.", "start": 69.0, "end": 109.0}, {"text": "  The input will be the array of points that you get for this subject.  And let's move this part of the code that was in the main here.  So we take and create an average with some of all the points that we get as an argument from my points.  And we return the average.  You can insert here any function that describes how your grade is calculated.", "start": 110.0, "end": 163.0}, {"text": "  And then in the main, we will now call this function my grade and input my points.  So let's run this.  And as you can see, my average is 87.  What are my assumptions?  My assumptions are that all my points are positive.  You cannot get negative points on a homework.  Either you get zero because you didn't submit it, or you get a positive value.", "start": 168.0, "end": 212.0}, {"text": "  So to compute the correct grade or correct average, I have the assumption that all of them are positive.  So now in this four function, I can add an assertion, insert.  My points i is greater than zero.  And I had the second expression where I want to tell the index of the negative value and value at that location.", "start": 213.0, "end": 282.0}, {"text": " So let's call now nothing that happens, right?  But by mistake, let's enter minus 50 to the third location and let's run the code this time.  Nothing happens.  My assertion is there, right? It should be evaluated and it should throw an error.  In order to use assertions, we need to enable the IDE to evaluate those assertions.  Otherwise, they are not considered to be evaluated.", "start": 283.0, "end": 323.0}, {"text": " How to do that?  We need to enable the check of assertions because assertions are not part of the functionality of the code itself.  So basically everything should work fine if they are inserted and disabled.  So avoid adding any functionality to assertions because those should not be there.  So let's see how to enable that.  We go to run edit configurations, modify options and add VM options.", "start": 323.0, "end": 356.0}, {"text": "  And there we add a flag minus the A standing for enable assertions.  We can add DA to disable assertions.  And now let's run our code.  And as you can see, exception in thread main, Java, assertion error.  And this is our message, index to, this is our message, index to value minus 50.  And that is exactly what we expected to see.  So now we can go back and correct our input.", "start": 356.0, "end": 394.0}, {"text": "  And we can also disable.  If we disable and we don't correct it, as you can see, the behavior is as before.  And now the computation is correct and the assertion is disabled.  In the official documentation, you can find good examples what kind of assertions one should use,  like what I presented is about internal variables.", "start": 399.0, "end": 434.0}, {"text": "  But there are also assertions that you should use for control flow and for pre-condition, post-condition and class variants.  I invite you to read this through and try out a few examples from here too.  And toward the end of this documentation, there are also discussions why you should use,  why you should get familiar with assertions in more details.  See you next time.", "start": 435.0, "end": 454.0}]}]
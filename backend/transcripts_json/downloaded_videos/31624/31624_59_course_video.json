[{"lecture": "31624_59_course_video", "Timestamps": [{"text": "  Dieses Video zeigt an einem einfachen Beispiel, wie man mit dem Debugger auf vieler Suche  in Java-Programmen gehen kann.  Dazu schreibe ich zunaechst ein kleines Programm, das die Brueche 1 durch N fuer Englals 1 bis  Englals 10 aufsummieren soll.  Zunaechst wird eine Variable Samm, deklariert und mit dem Wert Null initialisiert und dann  kommt eine Schleife fuer N gleich 1 bis 10.", "start": 0.0, "end": 42.16}, {"text": "  In der Schleife wird jeweils die Summe um den Wert 1 durch N erhoeht.  Nach der Schleife wird dann das Ergebnis ausgegeben.  Nun fuehrt das Programm aus mit Steuerungsschiftef10.  Hier steht das Ergebnis, die Summe ist 1,0.  1,0 ist natuerlich nicht das erwartete Ergebnis.  Wenn wir die Brueche aufsummieren, da schon 1 durch 1 ist, sollte etwas groesseres rauskommen.", "start": 42.16, "end": 72.56}, {"text": "  Das ist also der Fall fuer den Debugger.  Dafuer setze ich zunaechst ein Breakpoint, den durchklicken neben der Zeilennummer, der  entsprechenden Zeile.  Dann starte ich den Debugger hier durchklicken auf der Schaltflaeche mit dem guten Kaefer.  Die Programmausfuehrung haelt dann an, wenn das erste Mal die Zeile mit dem Breakpoint  erreicht wird.", "start": 73.56, "end": 101.80000000000001}, {"text": "  Und hier unten in dem Debuggerfenster mit den Variablen sehe ich die Belegung der aktuell  definierten Variablen.  Vor der Ausfuehrung der Schleife ist das nur die Summe.  Jetzt kann ich das Programm schrittweise ausfuehren, entweder durch diese Schaltflaechen  hier oder durch den entsprechenden Shortcut.  Hier benutze ich jetzt nur das Stepover, also F8, womit man immer eine Zeile ausfuehrt.", "start": 101.8, "end": 128.76}, {"text": "  Wenn ich das mache, erscheint jetzt hier unten die Variable N mit dem Anfangswert 1.  Und wenn ich jetzt nochmal F8 druecke, wird die Erhoehung der Summe ausgefuehrt.  Dann sollten wir also hier eine Aenderung sehen.  Bei der Summe und in der Tat hier ist jetzt die Summe auf 1 gewachsen.  Ich fuehr die naechste Zeile aus, jetzt ist klein N gleich 2, das heisst hier wird jetzt  ein halb addiert.", "start": 129.32, "end": 154.28}, {"text": "  Wenn ich nochmal F8 druecke, sollte also die Summe auf 1,5 ansteigen.  Das ist aber nicht der Fall, ist bei 1,0 geblieben.  Obwohl ja hier 1 durch N radiert wurde, da koennen wir jetzt hier um der Sache auf  den Grund zu gehen, einen sogenannten Watch-Ausdruck einfuegen durch das Plus hier in dem Variabeln-Fenster.  Hier typ ich jetzt 1 durch N, das ist ja der Ausdruck, der uns hier interessiert.", "start": 154.28, "end": 184.08}, {"text": "  Und in der Tat sehen wir, dass das hier zu 0 evaluiert wird.  Wie kann das sein?  Die Variable N hat den Typ Integer, die Konstante 1 erstmal auch, das heisst hier steht Integer  durch Integer und das bewegt ja aber dazu hier eine Integer Division durchzufuehren,  das heisst es wird nur der ganz zahlige Anteil genommen, deswegen kommt bei 1 durch N immer  0 raus, wenn N groesser als 1 ist.", "start": 184.4, "end": 212.60000000000002}, {"text": "  Um das zu vermeiden, muessen wir ja aber dazu bringen hier eine Double Division durchzufuehren,  dafuer koennten wir entweder das N-Kasten auf Double oder wir machen das fuer die Konstante.  Fuer die 1 und da gibt es leichter, da typ ich naemlich einfach statt 1,1.0 und hier sehen  wir gleich in dem Watch-Ausdruck, das ist jetzt auch funktioniert, hier steht jetzt 0,5.", "start": 212.64, "end": 240.07999999999998}, {"text": "  Ich weiss also jetzt, wie ich das Programm korrigieren kann.  Ich fahre hier 1,0 durch N, bin jetzt zuversichtlich, dass das der einzige Fehler war, deswegen  praegliert das den Debakt-Durchlauf ab und starte jetzt einen normalen Durchlauf und  wir sehen das Ergebnis ist, wie erwartet deutlich ueber 1, 2,2.  So konnte also der Fehler mit dem Debagger schnell gefunden und korrigiert werden.", "start": 240.4, "end": 264.08000000000004}]}]
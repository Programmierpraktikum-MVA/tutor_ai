[{"lecture": "31624_100_course_video", "Timestamps": [{"text": "  Ja, hallo und herzlich willkommen, ich bin der Janis und ich will gerne heute mit euch  die Aufgaben der zwei Gespraechen und davon die erste Aufgabe  an das Druckerdilament, da ging es nochmal so ein bisschen um Vererbung, Cues und Stacks  und wir sprechen jetzt einfach Aufgabe fuer Aufgabe durch.", "start": 0.0, "end": 27.560000000000002}, {"text": " Ihr seht schon, ich habe hier Intelligent mal aufgemacht, also machen wir uns  bei Esfanoes Projekt  und dann klicken wir uns da durch und sagen ja, ja das ist alles schoen, jetzt geben wir  mit einem schoenen Namen.  So anschliessend dann aber dann hier in diesem Fenster  und jetzt koennen wir hier neue Klassen erstellen im Source Order, das kennt ihr ja schon.", "start": 27.56, "end": 41.56}, {"text": "  Jetzt gucken wir uns erstmal an was wir ueberhaupt machen sollen.  Das heisst, wir sollen Mitarbeiterklasse erstellen und die sollen haben Name, eine Nummer  und auch eine Methode GetName, das ist relativ easy.  Also das Minus bedeutet, dass die Attribute hier private sein sollen  und es plus bedeutet, dass diese Methode GetName das Partik ist.", "start": 41.56, "end": 68.56}, {"text": " Machen wir eine Java Klasse und Mitarbeiter  und die kriege ich jetzt eine Name.  So, dann braucht die Klasse natuerlich noch ein Konstruktor.  Okay, anschliessend, wie das immer so ist, wird dann halt von der Klasse, das heisst ja immer  okay, wir beziehen uns auf Attribute aus dieser Klasse  und dann nuetzen wir halt den Namen und die Nummer auf die Nummer, soweit so bekannt.", "start": 68.56, "end": 94.56}, {"text": "  Anschliessend wollten wir noch eine Methode haben  und jetzt kann man hier einfach Get eingeben, dann wird dann das schon vorgeschlagen,  dann kann man tappen und dann ist es schon da.  Als naechstes, solltchen wir eine Klasse Elektrogeraet machen  und die soll abstract sein.", "start": 94.56, "end": 118.56}, {"text": " Abstract, was hiess das nochmal?  Gut, das heisst, diese Klasse, da kann man keine Objekte von erzeugen,  aber von dieser Klasse koennen halt andere Erben  und da kann man halt schon Methoden definieren  und auch Attribute festlegen,  im Vergleich zum Interface, im Interface kann man ja immer nur sagen,  hey, diese Methoden, alle Klassen, die irgendwie dieses Interface implementieren,", "start": 118.56, "end": 134.56}, {"text": " muessen diese Methoden auf jeden Fall haben  und die kann man aber im Interface selber noch nicht beschreiben,  also noch nicht implementieren, kann man halt in so einer abstracten Klasse,  kann man tatsaechlich die Methoden dann auch implementieren in der Klasse schon  und davon muss dann geerbt werden.  Okay, wir machen das jetzt mal.  Das ist der Elektrogeraet, das ist eine abstracte Klasse.", "start": 134.56, "end": 160.56}, {"text": "  Jetzt fuegen wir da die Attribute hinzu.  Und die Tage bis Pruefdatum,  wenn es zu Beginn immer 63 Tage sein,  das soll einfach so ein bisschen simulieren,  dass Elektrogeraete halt jedes Jahr mal geprueft werden muessen  und um das zu tun, machen wir halt noch eine Methode  und diese Methode nennen wir Pruefen.  Und die setzt einfach nur die Tage bis zum Pruefdatum wieder auf 365.", "start": 164.56, "end": 193.56}, {"text": "  Genau, und das ist hier mit unserer abstracte Klasse.  Gut, als naechstes beschaeftigen wir uns mit dem Drucker.  Der Drucker soll von der Klasse Elektrogeraet erben von der abstracten Klasse,  denn der Drucker ist ein Elektrogeraet,  das Ganze wird hier durch den Fall symbolisiert,  dann wollen wir das jetzt mal eben schnell machen hier.  Also gibt es jetzt ein Drucker.", "start": 193.56, "end": 220.56}, {"text": "  Okay, der Drucker hat ein Netzwerkname,  dann kriegt er noch einen Fuellstand, genannt Tinte,  anschiessen machen wir noch einen Konstruktor.  Konstruktor darf man einen Namen ergeben  und der Name wird dann als Netzwerkname uebernommen.  Okay, anschiessen wird noch der Fuellstand auf den Fuellstand gesetzt,  auf 100 in unserem Fall.  Und jetzt ist das ja ein Elektrogeraet bzw.", "start": 220.56, "end": 256.56}, {"text": "noch nicht,  sondern erst jetzt, wir lassen die Klasse Drucker vom Elektrogeraet erben  und als Elektrogeraet braucht der Drucker auch einen Kaufpreis  und deswegen setzen wir nochmal den Kaufpreis  und der soll jetzt 1000 betragen, also ganz schoen teuer.  Dann wollen wir uns mal um die Methoden kuemmern.", "start": 256.56, "end": 278.56}, {"text": " Als erstes machen wir mal GetTinte,  machen wir uns wieder leicht, wie ihr mit der Get einseht,  schon GetTinte wird uns vorgeschlagen, wir druecken Tapp und zack,  GetTinte ist fertig.  Anschiessen machen wir die Funktion Fuell,  die soll einfach die Drucker-Tinte wieder auffuellen,  das heisst, die Tinte wird wieder auf den Fuellstand,  in unserem Fall 100 gesetzt.", "start": 278.56, "end": 299.56}, {"text": "  Danach solltet man noch eine Methode GetInfo implementieren  und die sollte einfach nur Information ueber den Drucker  auf der Kommandezahl ausgeben, und zwar den Drucker-Namen,  anschliessend auf den Fuellstand und die Tage bis zum Pruefdatum,  die sind natuerlich auch noch interessant.  Dann fehlt noch eine letzte Klasse und das ist der Druckauftrag,  also machen wir mal mit dem Druckauftrag weiter.", "start": 299.56, "end": 336.56}, {"text": "  Ein Druckauftrag bekommt ein Auftraggeber  und eine Seitenzahl, also die Anzahl der Seiten, die gedruckt werden soll,  dann machen wir wieder ein Konstruktor.  Dann kommt ein Auftraggeber und eine Seitenzahl angeben.", "start": 340.56, "end": 385.56}, {"text": " Dann solltet man noch zwei Methoden geben,  einmal GetSeitenzahl, das ist so bekannt,  und die Methode Report, und da soll einfach nur ausgegeben werden,  wer der Auftraggeber ist von diesem Druckauftrag  und die Seitenzahl soll ausgegeben werden von dem Druckauftrag.  Okay, und damit haetten wir die Aufgabe 1.1 dann auch schon gelungen.", "start": 385.56, "end": 394.56}]}]
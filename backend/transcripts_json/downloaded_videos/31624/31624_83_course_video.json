[{"lecture": "31624_83_course_video", "Timestamps": [{"text": "  Der Kruskalalgorithmus zur Bestimmung eines minimalen Spannbaumes basiert auf der folgenden  Charakterisierung von Spannbaumen. Ein Teilgraf T eines Grafen ist genau dann ein Spannbaum von  G, wenn er maximal erzueglich ist. Maximal erzueglich heisst, dass durch das Hinzufuegen  einer weiteren Kante von G ein Zugloes entsteht.", "start": 0.0, "end": 33.2}, {"text": "Wir beginnen mit der Konstruktion eines beliebigen  Spannbaums, unabhaengig von seinem Gewicht.", "start": 33.2, "end": 52.44}, {"text": "Man kann gemaess obniger Charakterisierung einen  Spannbaum eines Grafen konstruieren, indem man mit einem leeren Teilbaum anfaengt,  die Kanten in beliebiger Reihenfolge durchlaeuft und eine Kante auswaehlt, falls dadurch kein  Zyklus entsteht. Bei dieser Konstruktion erhaelt man offensichtlich einen maximal erzueglichen  Grafen. Es werden nur Kanten ausgelassen, die zu einem Zyklus fuehren.", "start": 52.44, "end": 66.36}, {"text": "Nach oberiger  Charakterisierung haben wir also einen Spannbaum konstruiert. Nun wollen wir aber nicht irgendeinen  Spannbaum, sondern einen minimalen. Dies bekommen wir durch eine ganz kleine Aenderung an dem Algorithmus.  Die Kanten werden in der Reihenfolge nach aufsteigendem Gewicht durchlaufen.", "start": 66.36, "end": 87.67999999999999}, {"text": "Dann bekommen wir immer  noch einen Spannbaum. Es ist ja ein Spezialfall von unserem urspruenglichen Algorithmus und durch  die Sortierung der Kanten muss es ein Spannbaum mit geringstem Gewicht sein. Hier oben ist der  Algorithmus wieder kurz zusammengefasst.", "start": 87.67999999999999, "end": 106.84}, {"text": "Man beginnt mit einem leeren Teilbaum, durchlaeuft die  Kanten nach aufsteigendem Gewicht und waehlt dann eine Kante aus, falls kein Zyklus entsteht.  Die Kante mit geringstem Gewicht ist die Kante mit Gewicht 1. Danach mit Gewicht 2 gibt es zwei  verschiedene Kanten. Oben links und unten rechts. Hier entscheiden wir uns jetzt fuer unten rechts.", "start": 107.84, "end": 130.88}, {"text": "  Hier sehen wir auch schon den starken Unterschied zum Primalgorithmus. Hier entsteht der minimale  Spannbaum nicht als Baum, sondern es koennen zunaechst unzusammenhaengende Kanten der Strukturen  zugefuegt werden. Danach kommt die andere Kante mit Gewicht 2 an die Reihe. Danach kommen die  Kanten mit Gewicht 3. Wir nehmen zunaechst die hier unten.", "start": 130.88, "end": 161.76000000000002}, {"text": "Nun habe ich bisher immer die Pruefung  verschwiegen, ob durch das Hinzufuegen einer Kante ein Zyklus entsteht. Das habe ich immer  stillschweigend gemacht und wir sehen, dass bisher auch noch keiner entstanden ist.", "start": 161.76000000000002, "end": 180.12}, {"text": "Aber nun wird  als naechste Kante diese Kante hier, die auch das Gewicht 3 hat, untersucht und durch das Hinzufuegen  dieser Kante entsteht tatsaechlich dieser Zyklus her. Sie darf also nicht hinzugefuegt werden.", "start": 181.08, "end": 195.0}, {"text": " Es geht weiter nach der Reihenfolge des Gewichtes, also als naechstes diese Kante mit Gewicht 5 und auch  sie wuerde ein Zyklus entstehen lassen und darf nicht ausgewaehlt werden. Als naechstes haben wir  die Kante mit Gewicht 6, die ist tatsaechlich wieder auswaehlbar. Damit sind alle Knoten verbunden  und wir sind bei minimalen Spannbaum angelangt.", "start": 195.0, "end": 221.56}, {"text": "Auch hier koennen wir uns wieder die selbe Aufgabe  angucken wie in dem Video von dem Prim Video. Unter welchen Bedingungen kann bzw. muss eine  Kante UV mit dem unbekannten Gewicht X Teil des minimalen Spannbaum sein? Die Loesung muss natuerlich  dieselbe sein wie beim Prim Video.", "start": 221.56, "end": 243.39999999999998}, {"text": "Allerdings bietet sich hier ein anderer Weg an, der auch fuer  diese Aufgabe meiner Meinung nach einfacher ist. Wir fuegen jetzt hier einfach die Kante UV mal dem  Teilgraf hinzu, da es vorher ein Spannbaum war und damit ein maximal artzyklischer Teilgraf entsteht  durch diese Hinzufuegung ein Zyklus, wie wir hier auch gleich sehen koennen.", "start": 243.39999999999998, "end": 271.28}, {"text": "Damit diese Kante UV  Teil des Spannbaums sein darf, muss also eine andere Kante aus diesem Zyklus wegfallen.", "start": 271.28, "end": 294.2}, {"text": "Der  Kurskallalgorithmus waehlt ja die Kanten der Reih nach aufsteigendem Gewicht aus, das heisst diese  Kante UV mit dem unbekannten Gewicht X muesste vor einer der anderen drei Kanten aus diesem Zyklus an  die Reihe kommen und dann ausgewaehlt werden. Dies ist der Fall, wenn das Gewicht X kleiner oder  gleich einem Gewicht der anderen am Zyklus beteiligten Kanten ist.", "start": 294.2, "end": 308.6}, {"text": "Die Kante mit dem  groessten Gewicht ist hier 6, das ist also der leichteste Gegner sozusagen der neuen Kante und so  kommen wir auf die Bedingungen fuer das Gewicht X, dass es kleiner gleich 6 sein muss.", "start": 308.6, "end": 333.72}, {"text": "Wenn das Gewicht  X echt kleiner als 6 ist, geben wir die Kante UV vor dieser Kante mit dem Gewicht 6 an die Reihe und  wuerde dann ausgewaehlt werden und dann geben wuerde die Kante mit dem Gewicht 6 eben nicht mehr  ausgewaehlt, weil dadurch ja ein Zyklus entsteht.", "start": 333.72, "end": 349.32}, {"text": "Wenn X gleich 6 ist, ist Gleichstand zwischen den  beiden Kanten und eine der beiden Kanten koennte ausgewaehlt werden. Nun beschaeftigen wir uns mit  der Implementierung des Kurskallalgorithmus. Hier ist eine direkte Umsetzung des Verfahrens  als Pseudocode.", "start": 349.32, "end": 369.23999999999995}, {"text": "Man startet mit einem leeren Baum, durchlaeuft die Kanten aufsteigend nach Gewicht  und fuegt eine Kante genau dann hinzu, wenn durch das Hinzufuegen kein Zyklus entsteht. Mit dieser  direkten Implementierung ist allerdings die Laufzeit nicht besonders gut.", "start": 369.23999999999995, "end": 390.4}, {"text": "Die Schleife ueber alle  Kanten laeuft ehemal und die Ueberpruefung, ob eine neue Kante einen Zyklus entstehen laesst,  kann mit der Tiefensuche durchgefuehrt werden. Dies hat dann eine Laufzeit in E von V plus E.", "start": 390.4, "end": 409.48}, {"text": " Insgesamt haetten wir also fuer die Schleife eine Laufzeit in E mal V plus E Quadrat, also nicht  besonders effizient. Eine effizientere Implementierung erhaelt man dadurch, dass man diesen Test, ob  durch eine neue Kante ein Zyklus entsteht, auf andere Weise macht, naemlich mit der Datenstruktur  Union-Find, die in dem Skript erlaeutert wird.", "start": 409.48, "end": 430.16}, {"text": "Sie dient der Verwaltung von dynamischen  Zusammenhangskomponenten. Bei der Initialisierung bildet jeder Knoten seine eigene Zusammenhangskomponente.  Im Laufe des Algorithmuses legt man immer, wenn eine Kante hinzugefuegt wird, die Zusammenhangskomponente,  in der sich V befindet und die Zusammenhangskomponente, in der sich V befindet, zusammen.", "start": 431.12, "end": 453.20000000000005}, {"text": "Durch die Kante  werden sie verbunden und zu einer Zusammenhangskomponente. Nun kann man die Pruefung, ob durch eine  Kante VW ein Zyklus entsteht, auch ueber die Union-Feind-Struktur ausfuehren. Man schaut naemlich, ob V und  W sich in derselben Zusammenhangskomponente befinden.", "start": 453.28, "end": 474.91999999999996}, {"text": "Ist dies der Fall oder ein Zyklus  entstehen? Ist dies nicht der Fall? Kann durch das hinzufuegen der Kante kein Zyklus entstehen. Die  Operationen Feind und Union der Union-Feind-Struktur sind sehr effizient. Hier ist die Laufzeit mit  O von logV abgeschaetzt. Die tatsaechliche Laufzeit ist sogar noch schneller.", "start": 474.91999999999996, "end": 497.92}, {"text": "So erhaelt man also fuer die  Schleife eine Gesamtlaufzeit von e mal logV. Allerdings die Sortierung der Kanten nach Gewicht  an der Laufzeit von e mal logE haben ist auch die Gesamtlaufzeit in O von e logE.  Nun gibt es noch eine Java-Simulation von dem Grosskoll-Algorithmus.", "start": 497.92, "end": 525.68}, {"text": "Hier gibt es keinen  Startknoten und die Kanten werden unzusammenhaengend zunaechst ausgewaehlt und fuegen sich erst  unter Umstaenden am ganz am Ende zu einem spannen Baum zusammen.  Die in den Simulationen verwendeten Grafen sind sogenannte oalklitische Grafen. Das heisst,  das Gewicht einer Kante entspricht der oalklitischen Laenge.", "start": 535.64, "end": 546.96}]}]
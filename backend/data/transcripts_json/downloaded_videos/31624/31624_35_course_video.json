[{"lecture": "31624_35_course_video", "Timestamps": [{"text": "  In diesem Video wollen wir uns das Prinzip der greedy-Algorithmen genauer anschauen.  greedy-Algorithmen funktioniert nach dem folgenden Prinzip.  In jedem Schritt fuehren wir genau einen Loesungsschritt aus.  Diesen Schritt waehlen wir nach bestimmten Kriterien aus, mit denen wir bestimmen koennen, welcher Schritt der beste bzw. der vielversprechendste ist.", "start": 0.0, "end": 26.0}, {"text": "  Wichtig hierbei ist, dass diese Schritte nicht mehr rueckgaengig gemacht werden koennen.  Zumindest ist das in dem Konzept von greedy-Algorithmen nicht vorgesehen.  Deshalb findet ein greedy-Algorithmus auch nicht fuer jedes Problem eine optimale Loesung.  Schauen wir uns das Ganze allerdings einmal an diesem Beispiel an.", "start": 26.0, "end": 49.0}, {"text": "  In diesem Beispiel soll auf einem Handy mit 1 GB freien Speicher moeglichst viele Apps unterschiedlicher Groesse installiert werden.  Nun ist die Frage, in welcher Reihenfolge wir diese Apps installieren, um moeglichst viele Apps installieren zu koennen.  Wie wuerde ein greedy-Algorithmus hier vorgehen?  Ein greedy-Algorithmus wuerde hier in jedem Schritt immer die zurzeit optimale Loesung auswaehlen.", "start": 49.0, "end": 67.0}, {"text": "  Was wuerde das fuer unser Beispiel bedeuten?  Denkt einmal selbst kurz darueber nach und anschliessend werde ich die Loesung zeigen.  Das Beispiel wollen wir nun einmal in einer Handsimulation durchspielen.  Der greedy-Algorithmus immer die zurzeit bestmoegliche Loesung waehlt, wuerde in unserem Beispiel immer die App mit dem kleinsten Speicherverbrauch auswaehlen.", "start": 67.0, "end": 104.0}, {"text": "  Das bedeutet im ersten Schritt wuerden wir die App 5 installieren.  Nun haben wir noch 900 MB Speicher frei.  Anschliessend wird wieder die App mit dem nix kleinsten Speicherverbrauch ausgewaehlt, also hier.  Das Ganze machen wir nun so lange, bis kein Speicher mehr verfuegbar ist.  Das heisst wir waehlen die nix groesste App, in dem Fall App 3.  Haben danach noch 650 MB Speicher frei.", "start": 104.0, "end": 129.0}, {"text": "  Anschliessend waehlen wir App 4.  Nun bleiben noch 490 MB Speicher frei.  Und dann waehlen wir wieder die nix kleinste App, in dem Falle App 2 mit 200 MB Speicher.  Nun haben wir nun noch App 1 mit einem Speicherbedarf von 400 MB uebrig, haben allerdings nur noch 290 MB verfuegbaren Speicher.  Daher koennen wir die App nicht mehr installieren und der Algorithmus terminiert.", "start": 129.0, "end": 162.0}, {"text": "  Der Algorithmus wuerde die Apps also in der Reihenfolge App 5, App 6, App 3, App 4, App 2 installieren.  Nun koennen wir uns allerdings auch die Frage stellen, ob hier unser Speicherplatz optimal ausgenutzt wurde.  Schaut euch dazu noch einmal die Apps an und wieviel Speicherplatz wir noch verfuegbar haben.", "start": 163.0, "end": 201.0}, {"text": " Faellt euch hier eine bessere Ausnutzung unseres Speicherplatzes ein?  Eine Moeglichkeit den Speicherplatz mehr auszunutzen waere es, die App 2 nicht zu installieren und dafuer App 1 zu installieren.  Dadurch belegen wir 200 MB mehr Speicherplatz.  Eine weitere Moeglichkeit waere, App 6 nicht zu installieren und dafuer App 1 und App 2 noch mit zu installieren.", "start": 201.0, "end": 217.0}, {"text": "  Mit dieser Variante nutzen wir unseren Speicherplatz voll aus.  Wir sehen also fuer die Problemstellung den Speicherplatz optimal auszunutzen, liefert der greedy Algorithmus nicht die optimale Loesung.", "start": 217.0, "end": 239.0}, {"text": " Damit stellt sich nun allerdings auch die Frage, ob der greedy Algorithmus denn die optimale Loesung fuer unser vorheriges Beispiel liefert,  wo wir die maximale Anzahl an Programme installieren wollen.  Und in diesem Beispiel findet unser greedy Algorithmus tatsaechlich die optimale Loesung.  Das Ganze moechte ich euch einmal kurz beweisen.", "start": 239.0, "end": 256.0}, {"text": "  Unser greedy Algorithmus waehlt in unserem Beispiel die Apps immer so, dass die App mit dem niedrigsten Speicherplatz als erstes installiert wird.  Fuer die Apps A, B und C gilt also auch, dass wenn der Speicherplatz von A kleiner gleich Speicherplatz von B,  kleiner gleich Speicherplatz von C ist, dass die Apps in der Reihenfolge A, B, C installiert werden.", "start": 256.0, "end": 281.0}, {"text": "  Nun nehmen wir einmal an, App A ist noch Teil der Loesung. App B und C ist aber nicht Teil der Loesung des greedy Algorithmus.  Nun gehen wir allerdings auch einmal davon aus, wenn wir App A durch die Apps B und C ersetzen,  finden wir eine Loesung, die noch besser ist als unsere aktuelle Loesung.", "start": 281.0, "end": 297.0}, {"text": "  In dem Fall wuerde dann gelten, dass die Apps B und C zusammen auf alle Faelle weniger Speicherplatz brauchen,  als die Apps A und C zusammen.  Nun kann ich auf beiden Seiten das C kuerzen und somit erhalte ich, der Speicherplatz von B ist kleiner als der Speicherplatz von A.  Waere das allerdings der Fall, denn haetten wir hier oben B auch vor A installiert.", "start": 297.0, "end": 320.0}, {"text": "  Somit waere App B schon Teil der Loesung gewesen und nicht App A.  Durch diesen Widerspruchbeweis haben wir also gezeigt, dass speziell in diesem Beispiel ein greedy Algorithmus immer die optimale Loesung findet.  Anhand des Beispiels davor, wo wir den Speicherplatz optimal ausnutzen wollten, haben wir allerdings auch gesehen,  dass ein greedy Algorithmus nicht immer die optimale Loesung findet.", "start": 321.0, "end": 345.0}, {"text": "  Das muesst ihr bei der Wahloris Algorithmus also immer im Hinterkopf behalten.", "start": null, "end": 345.0}]}]
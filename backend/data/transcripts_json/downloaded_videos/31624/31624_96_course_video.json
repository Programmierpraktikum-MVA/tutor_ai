[{"lecture": "31624_96_course_video", "Timestamps": [{"text": "  Dieses Video gibt eine kurze Einfuehrung in das Backtracking-Verfahren.  Es ist ein Verfahren, bei dem die Loesung einer gegebenen Aufgabe schrittweise erzeugt wird.  Um den gesamten Loesungsraum zu durchsuchen, werden in jedem Ausfallschritt alle Moeglichkeiten in Betracht gezogen und der Reihe nach erkundet.", "start": 0.0, "end": 23.0}, {"text": "  Dabei geht die Erkundung zunaechst in die Tiefe und erst zweitrangig in die Breite des Suchbaums.  Dieser Art der Suche nennt man Tiefensuche und sie wird gleich in einem Beispiel veranschaulicht.  Da der Suchbaum mindestens exponentiell waechst, gilt dies auch fuer die Laufzeit.", "start": 23.0, "end": 42.0}, {"text": "  Backtracking ist also nicht effizient und wird daher eigentlich nur in solchen Faellen benutzt, in denen man keinen effizienteren Weg kennt.  Wir betrachten als Beispiel die Erzeugung aller Permutationen einer gegebenen Zahlenfolge.  Die Anzahl der Permutationen einer N-elementigen Folge ist N-Fokultaet.", "start": 42.0, "end": 63.0}, {"text": "  Sie waechst also schneller als 2 auch N und wir koennen ohne Laufzeitbedenken Backtracking verwenden, zumindest insofern, dass er einen effizienteren Weg sowieso nicht existieren kann.  Schauen wir uns ein kleines Beispiel an. Die Permutationen der Zahlen 0,1,2.  Wir schreiben die Permutationen als Dreiertupel in runden Klammern und verwenden einen Punkt als Platzhalter in Teilloesung.", "start": 63.0, "end": 89.0}, {"text": "  Das Tupel 1 Punkt Punkt steht also fuer die Teilloesung mit der Zahl 1 an der ersten Stelle, wobei die anderen Zahlen die anderen Stellen noch nicht festgelegt sind.  Diese Teilloesung kann durch zwei Schritte zu den Loesungen 1,0,2 und 1,2,0 vervollstaendigt werden.  Nun zu dem Ablauf des Backtracking.", "start": 89.0, "end": 110.0}, {"text": "  Wir starten mit der leeren Loesung und legen im ersten Schritt die erste Stelle fest. Dazu gibt es drei Moeglichkeiten, die Zahlen 0,1 und 2.  Wir starten mit der ersten Moeglichkeit der 0 und setzen sie an die erste Stelle. Wir fuehren also einen Schritt auf dem Weg zur Loesung aus.  Dadurch erhalten wir die Teilloesung 0 Punkt Punkt.", "start": 111.0, "end": 132.0}, {"text": "  An dieser Stelle gibt es zwei Moeglichkeiten weiterzumachen, da in einer Permutation jede Zahl nur einmal vorkommen darf.  Wir waehlen die erste Moeglichkeit und setzen die 1 an die zweite Stelle.  Und gelangen so zur naechsten Teilloesung 0,1 Punkt.  An dieser Stelle gibt es nur noch eine Moeglichkeit, nur die Zahl 2 an die dritte Stelle gesetzt zu werden.", "start": 133.0, "end": 153.0}, {"text": "  So erhalten wir die erste vollstaendige Loesung.  An dieser Stelle setzt das Backtracking ein.  Das heisst, wir machen einen Schritt rueckgaengig und kehren zu der vorletzten Teilloesung zurueck.  Und erkunden dort weitere Moeglichkeiten, da es hier nur eine Moeglichkeit gab, gibt es keine weiteren Moeglichkeiten.  Und wir gehen noch einen Teil Schritt zurueck.  An dieser Stelle gab es zwei Moeglichkeiten.", "start": 155.0, "end": 187.0}, {"text": "  Wir erkunden also jetzt die zweite Moeglichkeit und setzen die Zahl 2 an die zweite Stelle.  So halten wir die Teilloesung 0,2 Punkt.  Fuer die dritte Stelle gibt es wieder nur eine Moeglichkeit und wir erhalten die zweite vollstaendige Loesung 0,2,1.  An dieser Stelle setzt wieder das Backtracking ein.  Wir gehen einen Schritt zurueck, wir gehen noch einen Schritt zurueck.", "start": 188.0, "end": 211.0}, {"text": "  Da hier schon die beiden Auswahlmoeglichkeiten erkundet wurden, geht es einen weiteren Schritt zurueck.  Wir sind bei der leeren Loesung und waehlen hier nun die naechste Moeglichkeit.  Das ist die Ziffer 1 an die erste Stelle zu setzen.  Hier wiederholt sich das selbe Spiel vorhin wie in dem linken Spike.  Auf die selbe Weise erhalten wir die naechsten zwei vollstaendigen Loesungen 1,0,2 und 1,2,0.", "start": 212.0, "end": 234.0}, {"text": "  Setz wieder das Backtracking ein.  Es geht zurueck nach ganz oben, wo dann die dritte Moeglichkeit in Betracht gezogen wird und die Zahl 2 an die erste Stelle gesetzt wird.  Auf diese Weise erhalten wir die letzten zwei der sechs Permutationsmoeglichkeiten.  Anhand dieses Beispiels koennen wir die Elemente des Backtracking besprechen.", "start": 235.0, "end": 263.0}, {"text": "  Am Anfang steht die Frage, durch welchen schrittweisen Prozess Loesungen generiert werden koennen.  Bei den Permutationen hat dies, dass in dem Kartenschritt die Zahl der Kartenstelle in dem Tupel festgelegt wird.  Sobald diese Vorueberlegung getaetigt wurde, kann die Implementation beginnen mit den folgenden vier wesentlichen Grundelementen des Backtracking.", "start": 264.0, "end": 295.0}, {"text": "  Kandidaten fuer den naechsten Schritt generieren, dies heisst auch Branching, weil hier die Verzweigungen an einer Teilloesung erzeugt werden.  Im Fall der Permutationen waren dies alle Zahlen, die bisher noch nicht in dem Tupel angetragen wurden.  Das zweite Schritt ausfuehren, dies war das Einsetzen der gewaehlten Zahl an die Stelle in dem Tupel.", "start": 296.0, "end": 320.0}, {"text": "  Drittens, einen Schritt rueckgaengig machen, dass die Zahl wieder aus dem Tupel rausloeschen.  Und viertens, feststellen, ob eine Loesung erreicht wurde.  In dem Beispiel der Permutationen war dies, wenn alle Stellen des Tupels gefuellt wurden.  Die Grundelemente des Backtracking sind also sehr einfach und entsprechend ist auch meist die Implementation des Backtracking-Verfahrens recht einfach.", "start": 320.0, "end": 346.0}, {"text": "  Das Beispiel der Permutationen finden Sie im Skript.  Nun kann man sich fragen, welche Relevanz das Backtracking-Verfahren hat, da ja in der Einleitung die Mangel der Effizienz erwaehnt wurde.  Nun, das Backtracking ist dennoch ein sehr wichtiges Verfahren aus den folgenden Gruenden.  Es ist einfach zu implementieren und es findet immer alle Loesungen.", "start": 346.0, "end": 371.0}, {"text": "  Fuer kleine Probleme kann die Laufzeit trotz exponentiellen Wachstums ausreichend sein.  Und durch die Abwandlung oder als Teileliment in komplexeren Verfahren kann man effiziente Verfahren aus Backtracking gewinnen.", "start": 371.0, "end": 381.0}]}]
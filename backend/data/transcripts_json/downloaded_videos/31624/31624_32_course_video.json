[{"lecture": "31624_32_course_video", "Timestamps": [{"text": "  Hallo, schon wieder sind wir unterwegs auf unserer Suche nach Methoden, Algorithmen und  Datenstrukturen um Probleme in der echten Welt zu loesen. Heute reden wir ueber Suche  und Suche ist ein sehr breites Feld, das auf ganz ganz viele Probleme in der echten Welt  anwendbar ist.", "start": 0.0, "end": 36.64}, {"text": "In dieser Vorlesung moechte ich euch dafuer ein Beispiel geben und so ein paar  der Grundzuege der Suche beschreiben, bevor ihr dann in den darauf folgenden Videos in die  Vielzahl von Algorithmen, die damit was zu tun haben, einsteigt. Ich sage nur tiefen Suche,  breiten Suche, Backtracking und so weiter.", "start": 36.64, "end": 57.239999999999995}, {"text": "Es gibt unendlich viele Suchalgorithmen,  ganze Felder beschaeftigen sich damit. Aber heute wollen wir uns ein Beispiel angucken und  easy einsteigen. Das erste was wir wissen muessen ist, dass die Suche tatsaechlich sehr eng  verbunden ist mit der kuenstlichen Intelligenz.", "start": 57.24, "end": 79.92}, {"text": "Die kuenstliche Intelligenz formuliert viele  Probleme so, dass man im Grunde genommen moegliche Antworten generiert, schrittweise diese Antworten  generiert und dann testet, ob die Loesung, die man gefunden hat, eine gute ist.  Was bedeutet das? Ganz konkret, wir haben hier zwei Bilder einmal 1997.", "start": 79.92, "end": 109.64}, {"text": "Das war das Jahr,  in dem ein Computerprogramm, das Deep Blue heisst, von IBM, den damals den damaligen  Schachtschampion Gary Kasparov im Schacht geschlagen hat. Das war ein Meilenstein in der  kuenstlichen Intelligenz. Wir haben das andere Bild 2016 im Grunde genommen genau das gleiche,  nur das Spiel hat sich geaendert.", "start": 109.64, "end": 130.64}, {"text": "Das Spiel ist nicht mehr schaff, es ist Go und aber die Idee ist  die gleiche, dass ein Computer im Jahr 2016 den amtierenden Go-Weltmeister im Go geschlagen hat.", "start": 130.64, "end": 151.88}, {"text": " Zwischen diesen beiden Ereignissen liegen ungefaehr 20 Jahre und jetzt muss man sich natuerlich fragen,  war das wirklich jetzt ein Fortschritt, der es wert war, 20 Jahre? Denn im Grunde genommen haben wir  beides mal Brettspiele und in beiden Faellen hat ein Computer den Weltmeister geschlagen.  Muss man dazu sagen, dass tatsaechlich Go ein komplizierteres Spiel ist als Schach.", "start": 151.88, "end": 168.2}, {"text": "Kompliziert  in dem Sinne, dass man sich angucken kann, wie viele moegliche Spiele gibt es, die man spielen kann.  Im Schach gibt es 10 hoch 132 verschiedene Spiele ungefaehr und in Go gibt es 10 hoch 360. Also natuerlich  ist sowohl 10 hoch 123 als auch 10 hoch 360.", "start": 168.95999999999998, "end": 201.79999999999998}, {"text": "Es sind unglaublich riesige Zahlen, um das in  der Perspektive zu tun, dass das alte des Universums seit dem Urknall ist ungefaehr 4,3 mal 10 hoch 17 Sekunden.  Also das heisst 10 hoch 17 im Vergleich zu 10 hoch 123 fuer Schach. Das ist voellig, voellig  andere Groessenordnungen.", "start": 201.79999999999998, "end": 226.0}, {"text": "Andere Zahl zum Vergleich, man geht davon aus, dass es im beobachtbaren  Universum ungefaehr 10 hoch 97 verschiedene Elementarteilchen gibt. Das bezeichnet nicht nur das, was wir in Sonnen  und Planeten sehen, sondern alle anderen Elementarteilchen, die staendig durch eine Weltraumrasen  und im Vakuum am Entstehen und wieder verschwinden sind.", "start": 226.0, "end": 246.96}, {"text": "All das sind 10 hoch 97 Teilchen und es ist  immer noch verschwinden gering im Vergleich zu der Anzahl der moeglichen Schachspiele, die man spielen  kann.", "start": 246.96, "end": 268.64}, {"text": "Also das heisst, wenn wir in irgendeiner Weise hier von Suche reden, dann durchsuchen wir einen  unglaublich enormen grossen Suchraum und es ist von vornherein klar, dass dem vollstaendig zu  durchsuchen absolut unmoeglich ist. Das heisst in der Suche kommt es immer darauf an zu wissen,  wo man suchen muss. Das ist fast offensichtlich.", "start": 268.64, "end": 281.15999999999997}, {"text": "Ihr werdet natuerlich am Anfang erst mal Suchmethoden  lernen, die alles durchsuchen und wir werden dann stueckchenweise uns daran arbeiten, dass wir Suchmethoden  lernen, die cleverer sind.", "start": 281.15999999999997, "end": 304.96}, {"text": "Warum ist jetzt Schach vor Go als Disziplin der Menschen gefallen? Gut,  das Argument, das die meisten Leute anwenden, ist, dass 10 hoch 360 eben eine viel groessere Zahl ist,  als 10 hoch 123. Ich glaube, beide diese Zahlen sind so absurd hoch, dass eigentlich das, das ist meine  persoenliche Meinung, nicht der Unterschied ist.", "start": 304.96, "end": 315.79999999999995}, {"text": "Und der Unterschied ist, dass Schach ein viel besser  strukturiertes Spiel ist. Im Schach gibt es die Eroeffnung, es gibt das Mittelspiel, es gibt das Endspiel.  Die Figuren im Schach haben bestimmte Rollen und diese Rollen sind natuerlich eigentlich eine  Schlacht auf dem Schlachtfeld nachempfunden.", "start": 315.79999999999995, "end": 332.88}, {"text": "Das heisst, es gibt eine gewisse Intuition darueber,  wie sich Figuren zu verhalten haben, die einprogrammiert ist in die Regeln des Schachs. Beim Go gibt es viel  weniger Regeln, die Regeln sind ganz einfach. Und deswegen gibt es viel weniger Struktur, die wir  ausnutzen koennen, um unsere Suche in die relevanten Suchunterraeume zu lenken.", "start": 332.88, "end": 352.08}, {"text": "Dann, wenn man da jetzt  beruecksichtigt, wie gross diese Suchraeume sind, dann wuerde es auch euch nicht ueberraschen,  dass sowohl beim Schachspiel als auch beim Go-Spiel die gesamte Schach- und Go-Welt absolut aus dem  Haeuschen war, weil die Computer voellig neue Arten zu Spielen entdeckt haben.", "start": 352.08, "end": 375.16}, {"text": "Das liegt natuerlich  daran, dass der Mensch nicht gut daran ist, 10, 123-dimensionale Raeume zu durchsuchen. Das heisst,  also der Computer, der diesen Raum anders durchsucht als der Mensch, hat auch ganz andere Loesungsmoeglichkeiten  gefunden.", "start": 375.16, "end": 392.28000000000003}, {"text": "Ich denke, dass wir trotzdem auch mit den Computern, also ich denke nicht, ich weiss,  dass selbst die Computer, die wir heute verwenden, nicht mal ansatzweise den gesamten Suchraum  durchsuchen koennen, aber trotzdem koennen wir mit Computern mittlerweile die Suche so effizient  gestalten, dass wir den Menschen schlagen koennen.", "start": 392.28000000000003, "end": 412.52000000000004}, {"text": "Aber ihr seht, bei der Suche kommt es darauf an,  dass man weiss, wo man suchen muss. Wir muessen also, weil wir nicht bei den meisten Problemen  den gesamten Suchraum durchsuchen koennen, muessen wir verstehen, welche Eigenschaften das Problem hat,  um diese Eigenschaften zu verwenden, um den Suchraum einzuschraenken.", "start": 412.52, "end": 435.47999999999996}, {"text": "Das ist vielleicht die Hauptlektion  bei Suche insgesamt. Okay, ich bin Robotiker, wie ihr vielleicht wisst. Mein Forschungsgebiet ist die  Robotik und deswegen moechte ich hier eine kleine Detour machen, die auch was mit Suchern  irgendwie zu tun hat.", "start": 435.47999999999996, "end": 455.84000000000003}, {"text": "Ich moechte darauf hinweisen, dass hier zwei Leute sitzen, die mit dem Ganzen  eigentlich nicht zu tun haben und nur dafuer da sind, die Steine zu bewegen.", "start": 455.84000000000003, "end": 478.56}, {"text": "Das heisst also,  dass diese beiden Firmen, im ersten Fall was IBM, im zweiten Fall was Google, unglaublich viel Geld  investiert haben, um diese Dinge zu entwickeln, wahrscheinlich aus Marketinggruenden, aber dass  dieses Geld nicht ausgereicht haette, ein Roboter zu bauen, der die Steine bewegen kann.", "start": 478.56, "end": 488.24}, {"text": "Diese Einsicht,  dass die menschliche Intelligenz zu replizieren, was Suchprobleme angeht, dass das eigentlich relativ  einfach ist im Vergleich dazu die menschlichen Faehigkeiten zu replizieren, was alle anderen  Dinge angeht, was Manipulation zum Beispiel von Gegenstaenden in der Umwelt angeht, diese Einsicht,", "start": 488.24, "end": 508.8}, {"text": " dass unsere Intuition widerspricht, die Dinge, die uns schwer fallen, sind einfach auf dem Computer  zu implementieren und die Dinge, die uns leicht fallen, wie mit den Haenden irgendwas machen,  das sind Dinge, die wir nur sehr schwer auf Computer umsetzen koennen. Das ist ja in 80er Jahren bekannt  und nach einem KI-Wissenschaftler, dem Hans Moraweck benannt, als Morawecks Paradox.", "start": 508.8, "end": 535.6}, {"text": "Das wollte  ich euch noch mal sagen, weil wir oft konfrontiert sind mit einer herangehensweise an Probleme,  die vermutet, dass wir mit Such eigentlich alles loesen koennen. Das stimmt aber nicht, es gibt  ganze Arten von Problemen, wo Suche nicht so relevant ist.", "start": 535.6, "end": 558.8000000000001}, {"text": "Dennoch ist Suche fuer den Informatiker  und fuer die Informatikerin ein unglaublich wichtiges Werkzeug, mit dem man ganz, ganz viele  Probleme auf beeindruckende Art und Weise loesen kann. Wir schauen uns das mal bei dem Damenproblem an.", "start": 558.8000000000001, "end": 574.68}, {"text": " Hier ist die Aufgabe auf einem Schachbrett, acht Damen so zu platzieren, dass sie sich gegenseitig  nicht schlagen koennen. Eine Dame kann entlang der zwei Achsen in beide Richtungen und entlang  aller Diagonalen schlagen, und zwar so weit wie sie moechte. Das heisst entlang dieser gruenen Pfeile  darf keine andere Dame positioniert sein, sonst wuerde die eine Dame die andere schlagen.", "start": 574.68, "end": 593.32}, {"text": "Wir sehen  hier, wenn wir das uns kurz angucken, dass das tatsaechlich eine Loesung ist, wie man acht Damen  auf einem Schachfeld platziert, das Schachfeld ist acht mal acht, acht mal acht Felder, ohne dass  eine Dame die andere Dame schlagen kann. Das ist also eine Loesung des Problems.", "start": 593.32, "end": 616.08}, {"text": "Das ist die Loesung  fuer ein acht mal acht Problem. Ich glaube, es gibt immer noch einen Preis, der ausgelobt ist, wenn  man es schafft, das Damenproblem fuer N gleich 100 oder fuer beliebige Ns zu loesen. Ich glaube,  dass dieser Preis immer noch mit einer Million Dollar belegt ist.", "start": 616.12, "end": 651.32}, {"text": "Also wenn es euch gelingt,  das Damenproblem fuer N gleich irgendeine Zahl effizient zu loesen, dann habt ihr eine Million  Dollar verdient. In dieser Situation, also auf einem acht mal acht Schachbrett, wie viele  Moeglichkeiten gibt es, die Damen dort anzuordnen? Also das koennen wir mal gucken.", "start": 651.32, "end": 665.24}, {"text": "Wir haben fuer die  erste Dame haben wir 64 Moeglichkeiten, dann fuer die zweite Dame haben wir 63 Moeglichkeiten und  so weiter, insgesamt acht Mal und diese Zahl ist ungefaehr oder ganz genau so gross. Ich schreibe  das ab, das habe ich nicht im Kopf. 6, 3, 7, 7, 6, 0. Also das sind Millionen, Milliarden, Billionen.", "start": 665.24, "end": 692.44}, {"text": "  Also ist eine sehr grosse Zahl. Schon fuer acht mal acht sind das die verschiedenen Moeglichkeiten,  acht Damen zu platzieren. Die erste Dame koennen wir auf jedem beliebigen Feld platzieren, die zweite  Dame koennen wir auf allen verbleibenden Feldern und so weiter bis, was ist das dann, 75, irgendwie so.  Weiss nicht genau. Also das ist das Problem, was wir gerne loesen wollen, durchsuche.", "start": 693.0400000000001, "end": 723.1999999999999}, {"text": "Wir moechten  gerne eine oder alle Moeglichkeiten finden, acht Damen so zu platzieren, dass keine Dame sich  gegenseitig schlaegt. Wir koennen ja mal anfangen mit der ersten Dame ganz oben, mit dieser hier.  Sobald wir die platziert haben, sind alle rot gekreuzten Felder ausgeschlossen. Also auf den duerfen  wir schon mal keine weitere Dame platzieren.", "start": 723.1999999999999, "end": 754.64}, {"text": "Das heisst, unsere Berechnung hier ist eine grosse  Ueberschaetzung, weil sobald wir eine Dame platziert haben, fallen viele von diesen Feldern weg. Aber  indem wir das beruecksichtigen, benutzen wir schon Informationen ueber das Problem, um unsere Suche  einfacher zu machen. Koennen wir mal ein paar Sachen uns angucken.", "start": 754.64, "end": 778.12}, {"text": "Also wir wissen, wenn wir die erste  Dame platzieren und nehmen mal an, wir platzieren die jetzt hier, dann wissen wir, es sind alle diese  Felder, alle diese Felder und die gesamte Diagonale ist verboten. Also wir wissen im Grunde genommen,  dass wir nur eine Dame pro Reihe platzieren duerfen.", "start": 778.12, "end": 804.2800000000001}, {"text": "Das macht es uns ja schon irgendwie wesentlich  einfacher, denn dann haben wir in der ersten Reihe, wir koennen jetzt sozusagen Reihe fuer Reihe vorgehen.  Wir platzieren die erste Dame in der ersten Reihe und versuchen dann die zweiten Dame in der zweiten  und so weiter zu platzieren. Das koennen wir ja mal durch exerzieren.", "start": 804.2800000000001, "end": 824.6}, {"text": "Ich platziere also jetzt die  erste Dame hier. Die zweite Dame darf ich nicht hier platzieren und ich darf sie auch nicht hier  platzieren. Ich platziere sie einfach mal hier. Okay, die dritte Dame darf ich nicht hier, dann waere sie  von der geschlagen.", "start": 824.6, "end": 842.32}, {"text": "Ich darf sie nicht hier, dann waere sie von der geschlagen, nicht hier auch von  der, also diesen auch alle verboten. Ich kann sie fruehestens hier platzieren. Okay, gehen wir zur  naechsten Reihe. Das Feld ist verboten, dieses Feld ist erlaubt, dann tun wir es doch mal die naechste Dame  hierhin. Alles klar, wir gehen zur naechsten Reihe verboten, verboten, verboten.", "start": 842.32, "end": 870.4000000000001}, {"text": "Hier ist es jetzt  erlaubt. Richtig, gehen wir zur naechsten Reihe verboten, verboten, verboten, verboten, verboten,  verboten, verboten, weil die Dame ganz oben links. Hier ist es auch verboten wegen der Dame da und  hier ist es auch verboten wegen der Dame hier. Okay, also das heisst, wir sind am Ende.", "start": 870.4000000000001, "end": 898.6}, {"text": "Es gibt in der  sechsten Reihe keine Moeglichkeit mehr eine weitere Dame zu platzieren. Okay, das ist natuerlich aergerlich.  Unser Suche ist fehlgeschlagen. Wir haben versucht, im Grunde genommen haben wir eine Strategie angewandt,  die heisst, die koennte man greedy nennen.", "start": 898.6, "end": 921.4000000000001}, {"text": "Wir hatten ein bisschen Vorwissen, naemlich dass wir die Dame  immer nur in jeder, also immer nur eine Dame pro Zeile platzieren duerfen und dann haben wir jedes  mal das erste, das erste freie Feld genommen, auf dem wir eine Dame noch platzieren duerfen. Sind aber  damit in eine Wand gerannt. Hier ist das Ende.", "start": 921.4000000000001, "end": 950.32}, {"text": "Okay, also diese Strategie greedy an sich funktioniert  nicht. Also das muesste ich eigentlich informed greedy nennen, weil wir diese kleine Regel uns  ausgedacht hatten, dass wir nur eine Dame pro Zeile versuchen.", "start": 950.32, "end": 973.24}, {"text": "Ja, wie koennen wir das jetzt loesen?  Natuerlich koennen wir das versuchen zu loesen, indem wir jetzt zurueckgehen und sagen, okay, wir haetten ja  diese Dame eigentlich nicht hier platzieren muessen, sondern hier haetten wir sie auch nicht platzieren koennen.", "start": 973.24, "end": 988.6800000000001}, {"text": " Hier haetten wir sie nicht platzieren koennen, hier haetten wir sie nicht platzieren, aber wir  haetten sie hier platzieren koennen. Hier kollidiert sie mit Karakein.", "start": 988.6800000000001, "end": 998.6}, {"text": "Okay, wenn wir das getan haetten,  haetten wir denn dann in der naechsten Zeile mehr Glueck gehabt? Nein, das ist verboten, das ist verboten,  das ist verboten, das ist verboten, das ist verboten, das ist verboten, das ist verboten wegen der Diagonale  von ganz oben. Das waere verboten wegen dieser Dame und das ist verboten wegen dieser Dame.", "start": 998.6, "end": 1015.48}, {"text": "  Also das heisst auch, wenn wir hier diese andere Wahl gehabt haetten, waeren wir hier am Ende gewesen.  Das heisst, wir muessen jetzt irgendwie noch weiter zurueckgehen und uns fragen, haben wir denn hier  die richtige Wahl getroffen, denn wir haetten die Dame ja auch, sagen wir mal, hier platzieren koennen  oder hier.", "start": 1015.48, "end": 1049.84}, {"text": "Das heisst, wir hatten noch andere Moeglichkeiten davor, dass dieses zurueckgehen und  einmal getroffene Entscheidungen in Frage stellen, das nennt man Backtracking.", "start": 1049.84, "end": 1069.3999999999999}, {"text": "Wir koennen also in einer  Suche, in der wir so vollfuehren, dass wir successive Entscheidungen treffen, wieder zurueckgehen und  eine vorher getroffene Entscheidung zuruecknehmen, um zu gucken, ob es vielleicht noch eine andere  Moeglichkeit gibt.", "start": 1069.3999999999999, "end": 1077.04}, {"text": "Okay, das sind jetzt alle so Begriffe, die so ein bisschen die Intuition dafuer  vermitteln sollen, wie Suche tatsaechlich funktioniert. Aber natuerlich als Informatiker und Informatikerinnen  muessen wir das ein bisschen besser formalisieren. Und das wird formalisiert im Sinne eines sogenannten  Suchbaums. Wie der Name schon sagt, handelt es sich dabei um ein Baum und ein Baum hat eine Wurzel.", "start": 1077.08, "end": 1105.56}, {"text": "  Beim Schachbrett ist das die Ausgangsstellung der Schachfiguren, beim Go ist das das leere  Brett. Und aus dieser Ausgangsstellung, also wir nennen das mal Ausgangsstellung, kann man  bestimmte Handlungen machen, bestimmte Moves. Also zum Beispiel, dass ihr koennt ihr beim Schach,  dass ihr koennt ihr beim Schach E4 sein, also den Bauern von E2 auf E4 zu bewegen.", "start": 1105.56, "end": 1140.4}, {"text": "Und es gibt  noch eine ganze Reihe von anderen Moves, jeder von denen fuehrt zu einem anderen Zustand, wir  nennen das Zustand. Jeder dieser Knoten in unserem Baum ist ein Zustand. Also wir durchsuchen den  Zustandsraum nach Loesung.", "start": 1140.4, "end": 1170.52}, {"text": "Und natuerlich geht dieser Baum weiter, wir wissen, dass es unglaublich viel  moegliche Schachpartien gibt. Dieser Zug ist zum Beispiel hier von Player 1. Die naechste Schicht  in diesem Baum waere beim Schach von Player 2, aber es muss ja nicht bei allen Spielen verschiedene  Player geben. Dann waere wieder die naechste Ebene, wuerde wieder von Player 1 erstellt werden.", "start": 1170.52, "end": 1196.8000000000002}, {"text": "Und  jedes Mal kommen wir in einen neuen Zustand angezeigt durch diese Kringel. Wir sehen schon, dass die Groesse  des Baums abhaengt von dem Verzweigungsfaktor des Baums und von der Tiefe des Baums. Und es ist klar,  dass mit dem Verzweigungsfaktor und der Tiefe der Baum exponentiell waechst.", "start": 1196.8000000000002, "end": 1236.56}, {"text": "Wenn wir uns also ganz  unten anschauen, wie viele Blaetter hat der Baum, dann ist das eine exponentielle Funktion in  Abhaengigkeit des Verzweigungsfaktors und der Tiefe. Also zum Beispiel koennen wir sagen, die Anzahl der Blaetter ist  in Ordnung von Verzweigungsfaktoren, entweder mal B fuer Branching und T fuer Tiefe.", "start": 1236.56, "end": 1266.84}, {"text": "Dann haben wir also B  hoch T. Und das ist exponentiell in Abhaengigkeit der Spielzuege oder der Tiefe T. Und genau diese Anzahl  der Blaetter, dieses N von B, dann darf ich hier, muss ich das Gross B nennen fuer Blaetter, sonst  kollidiert das mit unserem Verzweigungsfaktor.", "start": 1266.84, "end": 1286.12}, {"text": "Also die Anzahl der Blaetter ist genau das, was ich  vorhin mit der Komplexitaet des Spielbaums gemeint habe, was bei Schach des 10 hoch 123 war. Das heisst,  wir haben im Schach hier die unglaubliche Zahl von 10 hoch 123 Blaettern.", "start": 1286.12, "end": 1311.6799999999998}, {"text": "Das kann natuerlich kein  Computer der Welt wirklich irgendwie iterieren oder aufschreiben oder abspeichern, weil es eben nur  knapp 10 hoch 100 Partikel im gesamten Universum gibt. Also wir muessten uns irgendwo aus dem anderen  Universum Partikel leihen, um das repraesentieren zu koennen. Das ist das Problem von Suche.", "start": 1311.68, "end": 1328.6000000000001}, {"text": "Such der  Suchbaum waechst exponentiell. Das geht, wenn wir den Suchbaum beschraenken koennen, also zum Beispiel,  wenn wir bestimmte Grafen durchsuchen, wie zum Beispiel bei der Tiefensuche, dann ist die Anzahl der  Schritte begrenzt durch die Anzahl der Knoten, die wir in den Grafen haben.", "start": 1328.6000000000001, "end": 1353.44}, {"text": "Aber insgesamt ist bei  der Suche der Suchraum exponentiell in Abhaengigkeit des Verzweigungsfaktors und der Tiefe. Das ist  eine grosse Herausforderung fuer die Informatik und fuer dich und fuer uns alle. Und es gibt zum  Glueck eine ganze Reihe von sehr cleveren Werkzeugen, die man verwenden kann, um diese Probleme zu loesen.", "start": 1353.44, "end": 1376.3200000000002}, {"text": "  Und jetzt sind wir an einem Punkt, wo das, was ich hinter aller Ersten vorlesen gesagt habe,  Realitaet wird, naemlich dass es Probleme gibt, die wir nicht optimal loesen koennen. Und viele Suchprobleme,  damit muessen wir uns begnuegen, kann man nur approximativ loesen.", "start": 1376.3200000000002, "end": 1407.7600000000002}, {"text": "Da werden wir also nie die  exakten Loesungen finden, sondern koennen immer nur hoffen, eine halbwegs gute Loesung zu finden,  die uns das Problem in der Praxis tatsaechlich auch loest.", "start": 1407.7600000000002, "end": 1420.5600000000002}, {"text": "Okay, also das war eine kleine Einfuehrung  in die Suche, in der ich euch hoffentlich auch vermitteln konnte, dass dies, obwohl es ein so  einfach formulierbares Problem ist, einfach ein Suchbau mit einem Verzweigungsfaktor und der Tiefe  unglaublich viel drin steckt, was die Informatik und damit uns alle herausfordert. Wir fassen zusammen.  Suche in einem Zustandsraum.", "start": 1420.5600000000002, "end": 1460.8}, {"text": "  Der Zustandsraum kann exponentiell wachsen. Der waechst oft. Also, was hatten wir hier?  Der Branching Faktor hoch die Tiefe, also exponentiell.", "start": 1460.8, "end": 1497.4}, {"text": "Das heisst, wir sind in einer Situation,  wo wir wissen, wir koennen nicht den gesamten Suchraum durchsuchen innerhalb von Algodat,  wenn wir hauptsaechlich mit Problemen zu tun haben, wo das nicht der Fall ist, aber ihr sollt ja ueber  die Suche insgesamt auch nachdenken koennen.", "start": 1497.4, "end": 1513.0}, {"text": "Das heisst, wir wissen, wir muessen in irgendeiner  Weise die Suche einschraenken und das machen wir mit Wissen. Also, wir benutzen Wissen ueber das Problem,  um den Suchraum einzuschraenken. Und jetzt sind wir, in dem wir das gesagt haben, tatsaechlich in dem  Kern von KI-Problemen angekommen.", "start": 1513.0, "end": 1552.96}, {"text": "Es gibt viele KI-Probleme, also kuenstliche Probleme in der  kuenstlichen Intelligenz und in der Robotik, was manchmal sehr ueberlappend ist, wo genau hier  das Hauptproblem steht. Wie verstehe ich genug von Problemen, um meinen Suchraum derartig einzuschraenken,  dass wir es schaffen, ihnen so zu durchsuchen, dass wir eine gute Loesung finden koennen.", "start": 1552.96, "end": 1575.88}, {"text": "Das heisst,  wir sind hier wirklich ganz nah an der Grenze zu forschen. Und wenn ihr weiter Informatik studiert,  werdet ihr ganz viele Kursen kommen, wo ihr sagt, ah, okay, hier haben wir ein Suchproblem und das  koennen wir nicht ganz loesen.", "start": 1575.88, "end": 1596.8799999999999}, {"text": "Ich gebe euch mal ein Wort, das man dann oft fallen hoert und das ist  das Wort der Heuristik. Heuristik ist im Grunde genommen so eine Art Kniff, aber ein cleverer Kniff.  Und Heuristik, manche Leute finden, das ist ein Schimpfwort und das zieht sich nicht fuer die  Informatik, sich auf Heuristik zu berufen.", "start": 1596.8799999999999, "end": 1615.9599999999998}, {"text": "Ich wuerde sagen, als Informatiker, ich persoenlich, moechte  gerne Probleme loesen, mit denen ich konfrontiert bin.", "start": 1616.28, "end": 1631.3600000000001}, {"text": "Wenn diese Probleme so schwierig sind, dass man  nachweisbar sie nicht loesen kann, dann ist es meine Aufgabe als Informatiker, er werde zu sagen,  ich wechseln den Beruf, weil die Probleme sind mir zu kompliziert, oder zu sagen, ich muss mich  auf Heuristiken verlassen koennen, ich muss mich auf Heuristiken berufen, um dieses Problem dann", "start": 1631.3600000000001, "end": 1637.8400000000001}, {"text": " noch loesen zu koennen. Also wenn ihr den Griff Heuristik hoert, nicht gleich verteufeln, Heuristiken  sind der Schluessel zu viel.", "start": 1637.84, "end": 1666.3999999999999}, {"text": "Und wenn wir bei dem Ach-Damen-Problem uns gesagt haben, wir verwenden  nur eine Dame pro Zeile, dann ist das ganz genau eine Heuristik, erschien ja damals, als wir das  zwoelf Minuten, als wir darueber gesprochen haben, als eine gute Idee und genauso sind Heuristiken oft  eine gute Idee, die ein Problem loesen kann.", "start": 1666.4, "end": 1672.3600000000001}, {"text": "Okay, also Suche ist ein riesiges Feld, viele wichtige  Probleme lassen sich mit Suche loesen, es ist echt spannend, das wird viel geforscht auf dem Feld  und ja, freut euch auf die verschiedenen Suche-Algorithmen, die wir in diesem Kurs noch besprechen  werden. Ciao!", "start": 1672.3600000000001, "end": 1679.8000000000002}]}]
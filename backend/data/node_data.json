[{"node_index": 0, "embedding": [-30.822141647338867, 51.61225891113281, 84.42105102539062, 3.722066879272461, -36.888336181640625, -13.542476654052734], "text": "  ", "type": "Satz", "module_number": 31070}, {"node_index": 1, "embedding": [-33.56772232055664, 53.60940933227539, 94.20372009277344, 4.666365623474121, -41.84937286376953, -15.993167877197266], "text": "Ich begruesse Sie recht herzlich zur 43. und zugleich letzten Vorlesung im  Kurs Analysis 1 und Linaere Algebra fuer Ingenieurwissenschaften.", "type": "Satz", "module_number": 31070}, {"node_index": 2, "embedding": [-13.79588794708252, 13.09827995300293, 46.65496826171875, 1.6516637802124023, -18.803112030029297, -11.857884407043457], "text": "Wir hatten uns  in den letzten drei Vorlesungen jetzt ausfuehrlich mit Reihen beschaeftigt und  am Ende auch noch die Potenz rein kennengelernt.", "type": "Satz", "module_number": 31070}, {"node_index": 3, "embedding": [-4.636329174041748, -10.222402572631836, 28.36505699157715, -1.8261446952819824, -5.845769882202148, -13.693649291992188], "text": "Und jetzt in der letzten  Vorlesung, da machen wir so eine kleine Kombination aus Analysis und  Linaere Algebra und da starten wir noch mal ein kompletter neues Gebiet, die  sogenannten linearen Differenzialgleichung.", "type": "Satz", "module_number": 31070}, {"node_index": 4, "embedding": [-5.475532054901123, -8.73048210144043, 30.78063201904297, -2.2939090728759766, -9.254377365112305, -14.357008934020996], "text": "Das ist ja so ein bisschen  Crashkurs in dieser letzten Vorlesung und Sie werden dann spaeter in anderen  Vorlesungen auch vertiefend dann noch die Theorie naeher kennenlernen, zum Beispiel  in dem Kurs Differenzialgleichung fuer Ingenieurwissenschaften oder auch in dem  Kurs ITP-TG.", "type": "Satz", "module_number": 31070}, {"node_index": 5, "embedding": [-6.879192352294922, -7.8605427742004395, 36.33987045288086, -2.6217949390411377, -13.50362777709961, -16.215253829956055], "text": "Wir wollen jetzt hier so einen kleinen Einblick bringen in  dieser Vorlesung, also in dieser letzten Vorlesung und grob wollen wir erst mal  klaeren, was sind Differenzialgleichung und dann wollen wir  Loesungstheorien entwickeln fuer lineare Differenzialgleichung.", "type": "Satz", "module_number": 31070}, {"node_index": 6, "embedding": [-5.602771759033203, -4.6850104331970215, 27.477291107177734, -1.4970088005065918, -12.025760650634766, -11.750272750854492], "text": "Erste Ordnung und  auch Systeme erster Ordnung und am Ende wollen wir Differenzialgleichung  zweiter Ordnung loesen.", "type": "Satz", "module_number": 31070}, {"node_index": 7, "embedding": [-5.34552001953125, -11.711799621582031, 30.18410301208496, -0.5602149367332458, -7.424916744232178, -15.07087516784668], "text": "Wir fangen mal an mit der Frage, was ist eigentlich  eine Differenzialgleichung?", "type": "Satz", "module_number": 31070}, {"node_index": 8, "embedding": [-6.322414875030518, -20.399417877197266, 39.930240631103516, 0.2558754086494446, -6.146332263946533, -21.595937728881836], "text": "Was ist eine Differenzialgleichung?  ", "type": "Satz", "module_number": 31070}, {"node_index": 9, "embedding": [-3.9696590900421143, -16.43507194519043, 30.411897659301758, 0.11913686245679855, -5.2820143699646, -16.584997177124023], "text": "Differenzialgleichung sind im Endeffekt einfach nur Gleichungen, deren  Loesung eine Funktion ist.", "type": "Satz", "module_number": 31070}, {"node_index": 10, "embedding": [-4.179011821746826, -15.247629165649414, 32.46767807006836, -2.0736587047576904, -6.958457946777344, -17.493877410888672], "text": "Wenn wir da so eine Gleichung haben,  dann koennen wir uns einfach vorstellen, da taucht eine Funktion auf und es koennen  aber eben auch Ableitungen von der Funktion selbst in dieser Gleichung  auftauchen.", "type": "Satz", "module_number": 31070}, {"node_index": 11, "embedding": [-5.4253997802734375, -16.231399536132812, 36.29278564453125, -3.634162425994873, -6.659104824066162, -19.822208404541016], "text": "In dieser Vorlesung wollen wir uns speziell mit zwei  Gleichungen oder Typen von Gleichungen beschaeftigen und das sehen Sie hier.", "type": "Satz", "module_number": 31070}, {"node_index": 12, "embedding": [-30.41996192932129, 37.23468017578125, 93.54360961914062, 2.1227073669433594, -36.253578186035156, -22.291048049926758], "text": "  ", "type": "Satz", "module_number": 31070}, {"node_index": 13, "embedding": [-20.4146785736084, 23.635379791259766, 63.735042572021484, 2.143383026123047, -24.405513763427734, -15.440443992614746], "text": "Das Ganze ist hier immer so zu verstehen.", "type": "Satz", "module_number": 31070}, {"node_index": 14, "embedding": [-9.77045726776123, -2.2094178199768066, 44.287330627441406, -0.8993701338768005, -11.777503967285156, -17.238439559936523], "text": "Y ist eine Funktion in T,  d.h. also was hier steht, bedeutet einfach nur Y Strich.", "type": "Satz", "module_number": 31070}, {"node_index": 15, "embedding": [-5.081991672515869, -12.146602630615234, 35.52463150024414, -3.8143701553344727, -10.230724334716797, -17.800615310668945], "text": "An der Stelle T ist gleich A  mal Y von T fuer alle T aus R und das gleiche auch hier.", "type": "Satz", "module_number": 31070}, {"node_index": 16, "embedding": [-6.40822172164917, -11.005399703979492, 38.72958755493164, -4.753726005554199, -12.173104286193848, -19.208070755004883], "text": "Und A ist jetzt  irgendein Skalar aus dem Koerper K, das kann jetzt also R oder C sein.", "type": "Satz", "module_number": 31070}, {"node_index": 17, "embedding": [-35.20637893676758, 45.154319763183594, 107.67813873291016, 2.427332878112793, -43.27549362182617, -25.04011344909668], "text": " ", "type": "Satz", "module_number": 31070}, {"node_index": 18, "embedding": [-16.784177780151367, 15.342182159423828, 56.1655158996582, 0.7838335633277893, -23.5384521484375, -15.548028945922852], "text": "Das erste, was man macht, ist, man unterteilt diese Differenzialgleichung  anhand ihrer Ordnung und die Ordnung ergibt sich anhand der hoechsten  auftretenden Ableitung.", "type": "Satz", "module_number": 31070}, {"node_index": 19, "embedding": [-8.354875564575195, 1.2401902675628662, 31.65962028503418, 2.2771353721618652, -13.546757698059082, -10.65031623840332], "text": "D.h.", "type": "Satz", "module_number": 31070}, {"node_index": 20, "embedding": [-5.407027244567871, -12.848011016845703, 26.531858444213867, 5.983969211578369, -5.716047763824463, -13.190601348876953], "text": "man sieht also hier taucht eine erste Ableitung auf.", "type": "Satz", "module_number": 31070}, {"node_index": 21, "embedding": [-38.72277069091797, 50.324798583984375, 113.83583068847656, 7.267212867736816, -45.58649826049805, -24.79065704345703], "text": " ", "type": "Satz", "module_number": 31070}, {"node_index": 22, "embedding": [-19.635812759399414, 25.95000457763672, 58.514408111572266, 1.5227723121643066, -29.925012588500977, -12.820621490478516], "text": "Hier sieht man sogar eine zweite Ableitung und deswegen die erste  Differenzialgleichung Y Strich gleich A, Y hat die Ordnung 1, weil die hoechste  auftretende Ableitung, das ist die erste Ableitung, deswegen wegen erster Ableitung  Ordnung 1.", "type": "Satz", "module_number": 31070}, {"node_index": 23, "embedding": [-9.446802139282227, 2.5494468212127686, 37.24781036376953, -2.400448799133301, -16.947372436523438, -13.594782829284668], "text": "Und ja, Sie ahnen schon, so geht das eben weiter.", "type": "Satz", "module_number": 31070}, {"node_index": 24, "embedding": [-10.294323921203613, -2.003814458847046, 44.825618743896484, -3.4290971755981445, -17.95517349243164, -18.30769157409668], "text": "Bei der zweiten  Differenzialgleichung ist die hoechste Ableitung, die auftritt die zweite  Ableitung, deswegen die Ordnung 2.", "type": "Satz", "module_number": 31070}, {"node_index": 25, "embedding": [-13.734786987304688, 9.270255088806152, 49.45143508911133, -2.1397485733032227, -27.19526481628418, -15.888336181640625], "text": "Und so verstehen wir jetzt auch die Titel, wenn  wir sagen, lineare Differenzialgleichung erste Ordnung, dann bedeutet das also  dort taucht hoechstens die erste Ableitung auf, aber nicht die zweite oder noch  hoehere.", "type": "Satz", "module_number": 31070}, {"node_index": 26, "embedding": [-6.6547322273254395, -2.7247512340545654, 29.168487548828125, -2.0918197631835938, -14.265835762023926, -12.226993560791016], "text": "Ja, jetzt habe ich schon gesagt, linear, wir wollen hier uns erst mal auf  den linearen Fall beschraenken.", "type": "Satz", "module_number": 31070}, {"node_index": 27, "embedding": [-5.001188278198242, -13.01014518737793, 30.848751068115234, -1.830655574798584, -6.116379261016846, -16.047832489013672], "text": "Die schlimmen Differenzialgleichung, die  koennen Sie dann spaeter in Ihrem Studium behandeln.", "type": "Satz", "module_number": 31070}, {"node_index": 28, "embedding": [-3.990452289581299, -12.49734115600586, 30.17928123474121, -2.5520827770233154, -6.148254871368408, -15.302558898925781], "text": "Lineare Differenzialgleichung  bedeutet nur, wenn quasi im Endeffekt nur linear Kombination von Y oder eben der  Ableitung auftreten.", "type": "Satz", "module_number": 31070}, {"node_index": 29, "embedding": [-4.864177227020264, -16.40696144104004, 35.99506759643555, -2.8661253452301025, -7.321206569671631, -19.044240951538086], "text": "Und wenn wir noch mal die beiden anschauen, die wir jetzt hier  betrachten wollen, die sind offensichtlich linear.", "type": "Satz", "module_number": 31070}, {"node_index": 30, "embedding": [-5.337173938751221, -15.124382019042969, 34.09517288208008, -2.9230263233184814, -6.441191673278809, -18.30594825744629], "text": "Das A ist  ein Koalitionent und hier davor steht gedanklich fuer uns eine 1.", "type": "Satz", "module_number": 31070}, {"node_index": 31, "embedding": [-6.563910007476807, -19.27910614013672, 45.92466735839844, -4.639260292053223, -9.517030715942383, -24.273006439208984], "text": "Das sind also  Lineare Kombinationen, deswegen sind diese beiden linear, aber wenn wir jetzt zum  Beispiel mal das hier schauen, das ist dann nicht mehr linear, da taucht dann auf  einmal in Y\u00b2 auf.", "type": "Satz", "module_number": 31070}, {"node_index": 32, "embedding": [-5.564999580383301, -14.003253936767578, 35.258487701416016, -4.0562334060668945, -7.179193019866943, -18.644580841064453], "text": "Aber keine Sorge, diese Differenzialgleichung, die wollen  wir jetzt hier gar nicht behandeln.", "type": "Satz", "module_number": 31070}, {"node_index": 33, "embedding": [-6.9698357582092285, -14.813732147216797, 39.42978286743164, -3.312814712524414, -7.653356552124023, -20.326345443725586], "text": "So, das ist erst mal grob die Einfuehrung.  ", "type": "Satz", "module_number": 31070}, {"node_index": 34, "embedding": [-7.21724796295166, -12.998799324035645, 38.62131881713867, -1.5255792140960693, -9.044710159301758, -19.073143005371094], "text": "Differenzialgleichung beschreiben viele Phaenomene quasi Vorgaenge.", "type": "Satz", "module_number": 31070}, {"node_index": 35, "embedding": [-5.632292747497559, -12.62044620513916, 32.12001419067383, 0.6267878413200378, -7.952670097351074, -16.03700828552246], "text": "Darauf wollen  wir jetzt im Detail hier nicht eingehen.", "type": "Satz", "module_number": 31070}, {"node_index": 36, "embedding": [-5.141062259674072, -16.49260711669922, 30.82094955444336, 1.6165931224822998, -5.241258144378662, -16.61989402770996], "text": "Wir wollen uns erst mal nur mit der  Mathematik beschaeftigen.", "type": "Satz", "module_number": 31070}, {"node_index": 37, "embedding": [-7.5398406982421875, -10.285311698913574, 37.030391693115234, -1.1876552104949951, -12.591270446777344, -17.57939910888672], "text": "Und wir starten also mit linearen Differenzialgleichung  in erster Ordnung und benehmen einfach mal diese Differenzialgleichung.  ", "type": "Satz", "module_number": 31070}, {"node_index": 38, "embedding": [-3.7504611015319824, -14.349624633789062, 27.928909301757812, -1.9060425758361816, -3.3601388931274414, -15.276830673217773], "text": "Und wollen uns ueberlegen, wie kann man das loesen?  ", "type": "Satz", "module_number": 31070}, {"node_index": 39, "embedding": [-5.380199432373047, -21.201725006103516, 40.481441497802734, -2.546462059020996, -5.5029377937316895, -22.48917579650879], "text": "Also wir betrachten also die lineare Differenzialgleichung.", "type": "Satz", "module_number": 31070}, {"node_index": 40, "embedding": [-7.04536771774292, -16.897918701171875, 43.25064468383789, -3.564720630645752, -7.804840087890625, -22.741376876831055], "text": "Ach so, genau.", "type": "Satz", "module_number": 31070}, {"node_index": 41, "embedding": [-42.39213180541992, 57.173065185546875, 126.20641326904297, 4.329380035400391, -50.70231628417969, -27.69293785095215], "text": " ", "type": "Satz", "module_number": 31070}, {"node_index": 42, "embedding": [-16.537935256958008, 20.291748046875, 51.81840133666992, 1.5809478759765625, -19.263994216918945, -12.024381637573242], "text": "Diese Abkuerzung werde ich jetzt hier immer verwenden, DGL, das ist einfach  umgangssprachlich und auch wesentlich kuerzer.", "type": "Satz", "module_number": 31070}, {"node_index": 43, "embedding": [-8.521388053894043, 0.9645514488220215, 35.30482864379883, -0.8661434054374695, -12.854950904846191, -12.672307968139648], "text": "So, erste Ordnung und das heisst, wir  schauen uns jetzt diese Gleichung an, Y, A, Y mit A aus dem Koerper K und die nenne  ich jetzt schon mal Sternen, weil wir das nochmal benoetigen werden.", "type": "Satz", "module_number": 31070}, {"node_index": 44, "embedding": [-45.06196975708008, 64.39225769042969, 131.6915740966797, 4.683531761169434, -55.99468994140625, -27.146020889282227], "text": "  ", "type": "Satz", "module_number": 31070}, {"node_index": 45, "embedding": [-17.032825469970703, 20.42279815673828, 51.93757247924805, 1.705883502960205, -21.394983291625977, -12.200931549072266], "text": "So, ja hier kann man nochmal anmerken, dass also jetzt hier die Loesung eine Funktion ist.  ", "type": "Satz", "module_number": 31070}, {"node_index": 46, "embedding": [-9.12402057647705, -4.345714092254639, 39.52437210083008, -0.6002020239830017, -11.486791610717773, -16.459688186645508], "text": "Das heisst, wir suchen so ein Y, was von R nach K abbildet.  ", "type": "Satz", "module_number": 31070}, {"node_index": 47, "embedding": [-6.531497478485107, -15.770303726196289, 41.95243453979492, -3.048798084259033, -11.045116424560547, -21.542631149291992], "text": "Das heisst, man schreibt dann manchmal auch kurz einfach Y,  gleich Y von T, um zu verdeutlichen, dass es wirklich eine Funktion ist in der  variablen T.", "type": "Satz", "module_number": 31070}, {"node_index": 48, "embedding": [-7.023535251617432, -19.46617317199707, 43.93551254272461, -0.7034725546836853, -10.01453971862793, -23.092086791992188], "text": "Ja, was ist jetzt eine Loesung von dieser Differenzialgleichung?  ", "type": "Satz", "module_number": 31070}, {"node_index": 49, "embedding": [-4.897136211395264, -15.08194637298584, 30.10540771484375, 0.07467179745435715, -5.078786373138428, -16.211088180541992], "text": "Wir tasten uns da mal vorsichtig heran.", "type": "Satz", "module_number": 31070}, {"node_index": 50, "embedding": [-6.003334999084473, -15.334238052368164, 32.915069580078125, 0.19116860628128052, -5.603246212005615, -17.299211502075195], "text": "Ich behaupte jetzt, dass eine Loesung auf jeden Fall  die Gestalt hat E hoch A T.", "type": "Satz", "module_number": 31070}, {"node_index": 51, "embedding": [-6.532462120056152, -11.72278118133545, 34.30725860595703, -1.0669798851013184, -9.663928031921387, -16.946863174438477], "text": "E ist die eulerische Zahl, das heisst also das Ganze, was hier steht,  ist dann einfach die Exponenzialfunktion exp von A T und warum ist das jetzt eine Loesung?  ", "type": "Satz", "module_number": 31070}, {"node_index": 52, "embedding": [-5.911123752593994, -15.99118423461914, 38.78268814086914, -2.6134157180786133, -8.215044975280762, -20.293649673461914], "text": "Das wollen wir uns mal kurz ueberlegen.", "type": "Satz", "module_number": 31070}, {"node_index": 53, "embedding": [-7.4206414222717285, -9.893479347229004, 39.2365608215332, -2.947977066040039, -14.164213180541992, -18.770891189575195], "text": "Na ja, leiten wir das Ganze mal ab, wenn wir das ableiten,  Y' von T, jetzt muss ich das T aber dazuschreiben, dann wissen wir,  dieser Ausdruck bleibt immer stehen, multipliziert also mit der Kettenregel,  mit der inneren Ableitung von dieser Funktion nach T, da entsteht A. Also kann ich das A  schon mal davor schreiben, E hoch A T.", "type": "Satz", "module_number": 31070}, {"node_index": 54, "embedding": [-9.137057304382324, 2.4158380031585693, 36.0770378112793, -4.570643424987793, -22.165332794189453, -13.998323440551758], "text": "Und jetzt sehen wir, das ist doch nichts anderes als Y von T  und dann steht hier da A mal Y von T und siehe da, das ist gleich diesen und das ist genau das,  was hier oben steht.", "type": "Satz", "module_number": 31070}, {"node_index": 55, "embedding": [-8.855525970458984, -4.869947910308838, 42.175758361816406, -5.962182521820068, -18.773229598999023, -19.053226470947266], "text": "Das was hier oben steht, wie gesagt, ist immer angewandt auf T zu verstehen.  ", "type": "Satz", "module_number": 31070}, {"node_index": 56, "embedding": [-7.9150824546813965, -15.472135543823242, 48.33572769165039, -5.592489719390869, -13.286759376525879, -24.612112045288086], "text": "So und das gilt jetzt hier fuer alle T aus R.", "type": "Satz", "module_number": 31070}, {"node_index": 57, "embedding": [-6.968590259552002, -14.633485794067383, 38.938297271728516, -2.119034767150879, -7.4289870262146, -20.1984806060791], "text": "Ja, gibt es jetzt noch andere?", "type": "Satz", "module_number": 31070}, {"node_index": 58, "embedding": [-9.525896072387695, -8.662542343139648, 44.47256088256836, -3.137345314025879, -15.276683807373047, -20.670320510864258], "text": "Ich behaupte, es gibt  auch noch weitere, und zwar indem wir hier einfach eine Konstante davor schreiben,  ich nenne das auch wieder Y von T, und zwar C mal E hoch A T fuer ein C aus K, das ist eine Loesung.  ", "type": "Satz", "module_number": 31070}, {"node_index": 59, "embedding": [-7.5463056564331055, -7.9858317375183105, 38.48136520385742, -4.0081682205200195, -10.868268013000488, -18.19188690185547], "text": "Warum ist es so?", "type": "Satz", "module_number": 31070}, {"node_index": 60, "embedding": [-10.088937759399414, -13.315940856933594, 52.267234802246094, -2.1180214881896973, -10.46139144897461, -24.885637283325195], "text": "Auch hier einfach mal die Ableitung hinschreiben.", "type": "Satz", "module_number": 31070}, {"node_index": 61, "embedding": [-4.519196033477783, -16.020679473876953, 31.74200439453125, -1.8656408786773682, -3.7913498878479004, -17.69317054748535], "text": "So, die Konstante C bleibt stehen und  im Endeffekt unterscheiden sich die beiden ja nur durch die Konstante.", "type": "Satz", "module_number": 31070}, {"node_index": 62, "embedding": [-10.156551361083984, -4.8162970542907715, 46.911495208740234, -5.151578426361084, -21.265151977539062, -20.511707305908203], "text": "Das ist also irgendwie eine  Verallgemeinerung, das heisst also das, was hier steht, ist sozusagen das Gleiche, was hier steht fuer  C gleich eins und wenn ich jetzt hier wieder die Ableitung nehme, wieder die innere Ableitung mal  E hoch A T. So, jetzt mache ich es mal ganz korrekt und sortiere noch.", "type": "Satz", "module_number": 31070}, {"node_index": 63, "embedding": [-11.394454002380371, 12.62959098815918, 38.947383880615234, -5.822854042053223, -31.663558959960938, -11.736547470092773], "text": "Ich habe jetzt einfach mal A  und C vertauscht, einfach damit wird es besser sehen und hier steht wieder Y von T, also A mal Y  von T und auch das wieder geht dann fuer alle T aus R. Ja und tatsaechlich ist es jetzt so, dass dies  bereits alle Loesungen sind der Differenzialgleichung, das muessen wir uns aber nochmal kurz ueberlegen.  ", "type": "Satz", "module_number": 31070}, {"node_index": 64, "embedding": [-8.192072868347168, 8.56932544708252, 30.785940170288086, -3.9021224975585938, -21.66063117980957, -9.09196949005127], "text": "Der Differenzialgleichung Stern.", "type": "Satz", "module_number": 31070}, {"node_index": 65, "embedding": [-6.5194501876831055, -2.091256618499756, 33.77558898925781, -2.8137173652648926, -12.378877639770508, -13.166508674621582], "text": "Ich schreibe sie nochmal kurz auf,  nochmal mit dem T, damit das ein bisschen klarer wird.", "type": "Satz", "module_number": 31070}, {"node_index": 66, "embedding": [-6.775370121002197, -10.473506927490234, 36.262962341308594, -1.5756947994232178, -9.012380599975586, -17.181028366088867], "text": "Das heisst also von dieser,  das ist jetzt Stern ausgeschrieben.", "type": "Satz", "module_number": 31070}, {"node_index": 67, "embedding": [-6.781064987182617, -17.273231506347656, 37.62211608886719, -0.2869037985801697, -6.1583170890808105, -20.2652530670166], "text": "So und wie kann man sich das jetzt ueberlegen,  dass das so ist?", "type": "Satz", "module_number": 31070}, {"node_index": 68, "embedding": [-5.339707374572754, -20.445655822753906, 35.76175308227539, -0.16882413625717163, -2.3986830711364746, -20.72481918334961], "text": "Einfach so hinschreiben, dass es jetzt kein Beweis ist.", "type": "Satz", "module_number": 31070}, {"node_index": 69, "embedding": [-5.765610694885254, -12.3668794631958, 33.454532623291016, -1.1384384632110596, -8.234273910522461, -17.165870666503906], "text": "Ideen ist,  wir betrachten folgende Funktion und zwar definiere ich mir eine Hilfsfunktion F von T  und F von T ist nichts anderes als Y von T. Moment, ich muss noch kurz was, ich bin jetzt zu schnell,  Moment, Moment, Moment.", "type": "Satz", "module_number": 31070}, {"node_index": 70, "embedding": [-7.336732864379883, -7.570537567138672, 37.147216796875, -2.6516504287719727, -13.930329322814941, -17.1010684967041], "text": "Wir machen das mal anders.", "type": "Satz", "module_number": 31070}, {"node_index": 71, "embedding": [-7.096626281738281, -21.56450843811035, 48.16852569580078, -3.577516555786133, -7.259812355041504, -26.130352020263672], "text": "Wir machen das so, wir geben uns mal eine Loesung,  wir geben uns mal noch eine Loesung vor und zwar eine beliebige.", "type": "Satz", "module_number": 31070}, {"node_index": 72, "embedding": [-5.4761271476745605, -13.842305183410645, 32.905216217041016, -2.2647199630737305, -5.180376052856445, -17.534059524536133], "text": "Und zwar sage ich jetzt mal Y,  das sei jetzt eine beliebige Loesung, die ich jetzt von der Struktur noch nicht kenne.  ", "type": "Satz", "module_number": 31070}, {"node_index": 73, "embedding": [-6.320544719696045, -10.826187133789062, 34.78974914550781, -3.2571024894714355, -8.047608375549316, -17.272550582885742], "text": "Der Differenzialgleichung Stern und das heisst ja dann,  nenne ich das jetzt mal, ist Spass hier, Stern, Schlange, dass das also erfuellt ist.  ", "type": "Satz", "module_number": 31070}, {"node_index": 74, "embedding": [-6.510138988494873, -13.230657577514648, 39.10835266113281, -4.21098518371582, -6.762410640716553, -19.980703353881836], "text": "So und jetzt betrachten wir mal die Hilfsfunktion.", "type": "Satz", "module_number": 31070}, {"node_index": 75, "embedding": [-6.8910813331604, -14.663622856140137, 39.16200637817383, -1.9796154499053955, -6.759703159332275, -20.00820541381836], "text": "Ich war jetzt hier in einem Schritt zu schnell.", "type": "Satz", "module_number": 31070}, {"node_index": 76, "embedding": [-47.627750396728516, 66.01860046386719, 139.20680236816406, 5.935026168823242, -57.50032043457031, -29.242929458618164], "text": "  ", "type": "Satz", "module_number": 31070}, {"node_index": 77, "embedding": [-13.559345245361328, 7.90741491317749, 51.099422454833984, -0.013778157532215118, -18.673606872558594, -16.194889068603516], "text": "Und zwar betrachte ich eine Funktion F von T und die definiere ich mir jetzt durch diese  Loesung Y von T. Wie gesagt, wie die jetzt aussieht weiss ich nicht.", "type": "Satz", "module_number": 31070}, {"node_index": 78, "embedding": [-7.42257833480835, 2.3315742015838623, 30.682601928710938, -2.1315832138061523, -16.11852264404297, -10.844316482543945], "text": "Ich weiss nur,  dass ihr diese Gleichung loest und teilt das Ganze durch E hoch A T. Und klar, wenn ich das mal  anders aufschreibe, ist das einfach Y T mal E hoch minus A T.", "type": "Satz", "module_number": 31070}, {"node_index": 79, "embedding": [-7.3392839431762695, -11.256647109985352, 39.813785552978516, -3.301114082336426, -12.62216567993164, -19.460784912109375], "text": "So und jetzt waere die Idee,  jetzt leiten wir mal ab.", "type": "Satz", "module_number": 31070}, {"node_index": 80, "embedding": [-6.257917881011963, -13.61435604095459, 35.54749298095703, -2.7875328063964844, -7.1621222496032715, -18.545087814331055], "text": "Und jetzt haben wir hier zwei Funktionen als Produkt, also wenden wir die  Produktregel an.", "type": "Satz", "module_number": 31070}, {"node_index": 81, "embedding": [-5.861865997314453, -16.144670486450195, 37.53635787963867, -3.3109946250915527, -4.614773273468018, -20.26548194885254], "text": "Und deswegen ist diese schreibweise ja auch etwas guenstiger.", "type": "Satz", "module_number": 31070}, {"node_index": 82, "embedding": [-9.160358428955078, -8.662023544311523, 46.6092643737793, -4.746422290802002, -17.950559616088867, -21.588762283325195], "text": "Das heisst also hier  haben wir Y Strich mal E hoch minus A T plus dann steht da Y mal und jetzt kommt die Ableitung von  E hoch minus A T.", "type": "Satz", "module_number": 31070}, {"node_index": 83, "embedding": [-7.717763423919678, -6.030086994171143, 37.85102844238281, -4.027229309082031, -18.073251724243164, -17.132200241088867], "text": "Da ist jetzt die innere Ableitung minus A und dann haben wir E hoch minus A T.  Okay, was koennen wir tun?", "type": "Satz", "module_number": 31070}, {"node_index": 84, "embedding": [-8.749030113220215, -4.593519687652588, 39.63640213012695, -3.4576854705810547, -22.667085647583008, -17.200796127319336], "text": "Wir koennen also offensichtlich E hoch minus A T ausklammern.", "type": "Satz", "module_number": 31070}, {"node_index": 85, "embedding": [-49.25675964355469, 72.52975463867188, 141.1342010498047, 5.956860542297363, -61.821834564208984, -27.78278160095215], "text": "  ", "type": "Satz", "module_number": 31070}, {"node_index": 86, "embedding": [-14.874818801879883, 15.75191879272461, 47.58146667480469, 1.8022327423095703, -16.397064208984375, -12.33057689666748], "text": "Und was steht da?", "type": "Satz", "module_number": 31070}, {"node_index": 87, "embedding": [-9.321842193603516, -8.768196105957031, 46.1522331237793, -2.7092666625976562, -15.867578506469727, -21.119625091552734], "text": "Dann steht da Y Strich von T minus A Y von T E hoch minus A T. Jetzt wissen wir aber,  das Ganze ist ja null.", "type": "Satz", "module_number": 31070}, {"node_index": 88, "embedding": [-5.098998546600342, -16.817752838134766, 37.59120559692383, -2.695192337036133, -9.413436889648438, -20.059837341308594], "text": "Da ja Y eine beliebige Loesung von Y Strich gleich A Y ist.", "type": "Satz", "module_number": 31070}, {"node_index": 89, "embedding": [-6.982964992523193, -13.08173942565918, 41.218441009521484, -3.3847522735595703, -14.970705032348633, -20.574872970581055], "text": "Also bekommen wir  hier, dass das gleich null ist und zwar fuer alle T aus R. Ja und jetzt erinnern wir uns noch mal  zurueck einiger Foliesung her.", "type": "Satz", "module_number": 31070}, {"node_index": 90, "embedding": [-5.811422824859619, -14.799850463867188, 35.700313568115234, -2.0213851928710938, -8.259203910827637, -18.758472442626953], "text": "Das Konstanzkriterum koennen wir jetzt hier anwenden.", "type": "Satz", "module_number": 31070}, {"node_index": 91, "embedding": [-50.595359802246094, 73.12557983398438, 146.3839874267578, 6.227956771850586, -61.00579071044922, -29.48564338684082], "text": "  ", "type": "Satz", "module_number": 31070}, {"node_index": 92, "embedding": [-14.434793472290039, 16.485267639160156, 46.39904022216797, 1.3957219123840332, -16.319496154785156, -11.402032852172852], "text": "Ja und was besagt das?", "type": "Satz", "module_number": 31070}, {"node_index": 93, "embedding": [-7.468907356262207, -7.04861307144165, 38.65102767944336, 0.09967523068189621, -8.452020645141602, -16.65955924987793], "text": "Das besagt F ist konstant.", "type": "Satz", "module_number": 31070}, {"node_index": 94, "embedding": [-6.414337635040283, -20.418659210205078, 45.84384536743164, -0.01543397456407547, -9.31937026977539, -23.967546463012695], "text": "Okay, wenn jetzt F aber konstant ist,  also hier ist ja nochmal unser F.", "type": "Satz", "module_number": 31070}, {"node_index": 95, "embedding": [-8.064345359802246, -7.961456775665283, 41.11967849731445, -3.0375497341156006, -17.08676528930664, -18.793758392333984], "text": "Das ist jetzt also gleich einer konstanten C. Ich schreib das mal  so auf.", "type": "Satz", "module_number": 31070}, {"node_index": 96, "embedding": [-7.450294017791748, -20.435218811035156, 49.0129508972168, -1.0180933475494385, -11.510092735290527, -25.49198341369629], "text": "Also F ist konstant.", "type": "Satz", "module_number": 31070}, {"node_index": 97, "embedding": [-6.935305118560791, -16.412776947021484, 44.82792282104492, -2.8323025703430176, -13.124019622802734, -22.77689552307129], "text": "Aber F ist nach Definition Y von T mal E hoch minus A T.", "type": "Satz", "module_number": 31070}, {"node_index": 98, "embedding": [-4.581815242767334, -12.468595504760742, 29.105016708374023, -1.5654478073120117, -8.2373046875, -15.273534774780273], "text": "So und wenn wir das  jetzt mal umstellen nach Y von T, dann bekommen wir was.", "type": "Satz", "module_number": 31070}, {"node_index": 99, "embedding": [-7.157357692718506, -20.747095108032227, 46.04990768432617, -3.749471664428711, -7.607095718383789, -25.33888816833496], "text": "Also wir muessen nur das auf die andere  Seite hier bringen.", "type": "Satz", "module_number": 31070}, {"node_index": 100, "embedding": [-9.83830451965332, -15.338455200195312, 53.19498062133789, -4.385988235473633, -19.290164947509766, -26.38716697692871], "text": "Dann steht einfach da C mal E hoch A T und das ist klar, weil wir wissen, dass E hoch  minus A T mal E hoch A T.", "type": "Satz", "module_number": 31070}, {"node_index": 101, "embedding": [-8.146149635314941, -13.435850143432617, 44.77118682861328, -3.568638324737549, -16.98032569885254, -22.267549514770508], "text": "Das ist ja E hoch null und das ist 1. Ja und siehe da Y eine beliebige  Loesung, die ich mir herausgenommen habe, hat also doch wieder die gleiche gestalt.", "type": "Satz", "module_number": 31070}, {"node_index": 102, "embedding": [-5.759571075439453, -7.290511608123779, 29.101200103759766, -2.590899705886841, -10.44864273071289, -13.959492683410645], "text": "Also tatsaechlich  haben wir alle Loesungen schon gefunden, indem wir hier schon gesagt haben, das ist sozusagen die  Loesung und wir bekommen jetzt hier also und endlich viele Loesungen.", "type": "Satz", "module_number": 31070}, {"node_index": 103, "embedding": [-10.03757095336914, -7.07513952255249, 48.6849250793457, -5.552633285522461, -20.24858283996582, -22.136816024780273], "text": "Das haengt eben von dieser  Konstant C ab und das heisst also hier koennen wir also die Loesungsmenge angeben.  ", "type": "Satz", "module_number": 31070}, {"node_index": 104, "embedding": [-8.295815467834473, -9.316971778869629, 42.47602844238281, -4.206549644470215, -12.970325469970703, -20.099811553955078], "text": "Der Differenz ja gleich um Stern gegeben durch.", "type": "Satz", "module_number": 31070}, {"node_index": 105, "embedding": [-9.016546249389648, -3.1572487354278564, 38.83223342895508, -3.582216262817383, -14.54588794708252, -16.76363182067871], "text": "Ja wenn wir die mal angeben, dann ist das also  einfach, das sind also alle Funktionen F von R nach K und zwar mit der Vorschrift, dass T bildet ab  auf C E hoch A T und C ist aus K.", "type": "Satz", "module_number": 31070}, {"node_index": 106, "embedding": [-11.215470314025879, 4.415287017822266, 42.173213958740234, -4.5396528244018555, -24.327068328857422, -15.813898086547852], "text": "Das ist jetzt also eine Menge von Funktionen und C aus K wird  durchlaufen und das ist dann tatsaechlich ein Vektoraum der Dimension 1.  Genau und zwar als Teilraum der differenzierbaren Funktion.", "type": "Satz", "module_number": 31070}, {"node_index": 107, "embedding": [-53.79653549194336, 80.85782623291016, 153.91519165039062, 5.504128456115723, -68.59344482421875, -30.007883071899414], "text": "  ", "type": "Satz", "module_number": 31070}, {"node_index": 108, "embedding": [-12.496251106262207, -1.2840111255645752, 51.07606887817383, -0.2398499846458435, -13.931816101074219, -19.705570220947266], "text": "Und den koennen wir auch nochmal kurz angeben.", "type": "Satz", "module_number": 31070}, {"node_index": 109, "embedding": [-6.198944568634033, -9.170279502868652, 31.056318283081055, -0.9259650111198425, -6.446786403656006, -14.99746322631836], "text": "Das heisst also von,  was ist der Raum der differenzierbaren Funktionen?", "type": "Satz", "module_number": 31070}, {"node_index": 110, "embedding": [-9.499669075012207, -9.268062591552734, 46.46976852416992, -4.411403179168701, -15.3064546585083, -21.931650161743164], "text": "Ja, dann nehmen wir einfach alle Funktionen von  R nach K mit der Eigenschaft F ist differenzierbar.", "type": "Satz", "module_number": 31070}, {"node_index": 111, "embedding": [-5.794158935546875, -12.705224990844727, 36.38182067871094, -4.570562362670898, -8.975152015686035, -18.88173484802246], "text": "So und das Ganze, was wir jetzt hier gemacht haben,  das liefert sozusagen den Beweis von Satz 1 auf Folie 3 und das schauen wir uns gleich direkt an.", "type": "Satz", "module_number": 31070}, {"node_index": 112, "embedding": [-53.798057556152344, 78.33063507080078, 156.42124938964844, 5.787092208862305, -65.26592254638672, -31.634462356567383], "text": "  ", "type": "Satz", "module_number": 31070}, {"node_index": 113, "embedding": [-13.891139030456543, 16.68850326538086, 43.91114807128906, 0.569331705570221, -16.93465232849121, -10.534027099609375], "text": "Eine Sache noch, ich glaube das Label hier, was ich hier gesetzt habe, das haben wir eigentlich gar nicht  benoetigt.", "type": "Satz", "module_number": 31070}, {"node_index": 114, "embedding": [-10.805140495300293, -12.216459274291992, 55.034061431884766, -3.9664368629455566, -12.31064224243164, -25.891067504882812], "text": "Ja doch, doch, doch, doch, ja hier steht es nochmal.", "type": "Satz", "module_number": 31070}, {"node_index": 115, "embedding": [-7.1854071617126465, -13.06263542175293, 37.19677734375, -0.9981436133384705, -6.5092339515686035, -18.862634658813477], "text": "Ja, Schlange oder Sternenschlange.", "type": "Satz", "module_number": 31070}, {"node_index": 116, "embedding": [-8.147279739379883, -19.714427947998047, 46.34572219848633, -1.22920560836792, -7.736989974975586, -24.59037208557129], "text": "Okay,  lassen wir das so.", "type": "Satz", "module_number": 31070}, {"node_index": 117, "embedding": [-5.279235363006592, -15.840840339660645, 32.912715911865234, -0.7840144038200378, -3.647556781768799, -17.988996505737305], "text": "Gut Satz 1, schauen wir uns hier an.", "type": "Satz", "module_number": 31070}, {"node_index": 118, "embedding": [-6.847781181335449, -15.128480911254883, 39.2553596496582, -1.8594639301300049, -6.2519378662109375, -20.375511169433594], "text": "Den unteren Teil brauchen wir noch nicht  schon.", "type": "Satz", "module_number": 31070}, {"node_index": 119, "embedding": [-10.3453950881958, -2.143760919570923, 44.11555099487305, -4.2201642990112305, -20.141820907592773, -18.365137100219727], "text": "Also was wir jetzt gesehen haben, ist also jede Loesung dieser Differenzialgleichung Y  gleich AY mit A aus K hat eben genau diese Form.", "type": "Satz", "module_number": 31070}, {"node_index": 120, "embedding": [-6.193045139312744, -12.025253295898438, 35.01552963256836, -2.8832550048828125, -8.76400375366211, -17.79875373840332], "text": "Das haben wir jetzt eben auch bewiesen und zwar hier  mit einer Konstantin C aus K.", "type": "Satz", "module_number": 31070}, {"node_index": 121, "embedding": [-6.748176574707031, -18.032466888427734, 41.91172409057617, -2.6844067573547363, -8.062026977539062, -22.53102684020996], "text": "Ja und dann steht es auch nochmal dabei, dass wir dann so dann wissen,  dass die Loesungsmenge dieser Differenzialgleichung eben ein eindimensionaler Teilraum der  differenzierbaren Funktion ist und ja als Basis koennen wir jetzt einfach sagen, dass als Funktion  betrachtet in T, ja das habe ich ja im Endeffekt hier auch geschrieben und wie gesagt das C ist dann", "type": "Satz", "module_number": 31070}, {"node_index": 122, "embedding": [-55.4038200378418, 81.04774475097656, 160.41627502441406, 6.284955978393555, -67.3254165649414, -32.176719665527344], "text": " ", "type": "Satz", "module_number": 31070}, {"node_index": 123, "embedding": [-14.009872436523438, 16.77710723876953, 43.79954147338867, 0.17587381601333618, -17.96863555908203, -10.67483901977539], "text": "eben, wenn Sie sich nochmal als Basis erinnern, dann sollen ja alle Vielfachen davon und deswegen ist  das einfach das Basis-Element und das Ganze hier mit den geschweifen Klammern ist eine Basis dieses  Teilraums.", "type": "Satz", "module_number": 31070}, {"node_index": 124, "embedding": [-9.002768516540527, -2.2605762481689453, 39.96250534057617, -3.729217529296875, -13.359955787658691, -16.598299026489258], "text": "Das heisst also, wenn Sie diese Funktion haben, dann ist also jedes Vielfache mit jeder  Konstantin davor gehoert halt dazu.", "type": "Satz", "module_number": 31070}, {"node_index": 125, "embedding": [-6.909222602844238, -11.56847095489502, 40.39335250854492, -5.023103713989258, -10.678351402282715, -20.121694564819336], "text": "Das heisst, wir haben unendlich viel Loesung, aber der Teilraum,  die Loesungsmenge ist eindimensional.", "type": "Satz", "module_number": 31070}, {"node_index": 126, "embedding": [-5.717716217041016, -13.745257377624512, 36.842491149902344, -3.3201847076416016, -8.125749588012695, -19.128273010253906], "text": "So, was uns jetzt noch ein bisschen stoert ist, wir haben  unendlich viele Loesungen, aber eigentlich moechte man Differenzialgleichung ja auch gerne eindeutig  loesen.", "type": "Satz", "module_number": 31070}, {"node_index": 127, "embedding": [-6.379055976867676, -10.410797119140625, 35.37726974487305, -2.9002633094787598, -10.337668418884277, -17.44279670715332], "text": "Das klappt so erstmal nicht, aber die Idee ist, dass man hier einen Anfangswert vorgibt und  das fuehrt uns dann auf den naechsten Begriff des sogenannten Anfangswertproblems und das sehen  wir hier im zweiten Teil nochmal.", "type": "Satz", "module_number": 31070}, {"node_index": 128, "embedding": [-8.220895767211914, -6.163313388824463, 39.01482009887695, -3.5120840072631836, -16.54701042175293, -17.575769424438477], "text": "Das heisst, wir wollen es ueberlegen, wie koennen wir dieses C hier  eigentlich bestimmen.", "type": "Satz", "module_number": 31070}, {"node_index": 129, "embedding": [-6.386224746704102, -4.28842830657959, 30.10256576538086, -2.8103084564208984, -13.25343132019043, -13.208250045776367], "text": "Und das kann man im Endeffekt so machen, wenn ich also eine Loesung hier habe  oder so eine Differenzialgleichung, dann kann ich einen Anfangszeitpunkt und einen Anfangswert der  Funktion vorgeben.", "type": "Satz", "module_number": 31070}, {"node_index": 130, "embedding": [-7.039625644683838, -13.459236145019531, 40.72230911254883, -4.042684078216553, -11.870782852172852, -20.6487979888916], "text": "Das heisst also, wir geben so etwas hier vor und zwar sagen wir y hat zu  der Zeit t0 den Wert y0.", "type": "Satz", "module_number": 31070}, {"node_index": 131, "embedding": [-6.554615020751953, -6.847976207733154, 35.50249099731445, -4.471566200256348, -14.338737487792969, -16.54132652282715], "text": "Hier steht es nochmal, das Ganze t0 ist der Anfangszeitpunkt und y  ist der Anfangswert der Funktion.", "type": "Satz", "module_number": 31070}, {"node_index": 132, "embedding": [-8.409550666809082, -7.374728679656982, 43.77680969238281, -5.353592395782471, -17.837697982788086, -20.091617584228516], "text": "Und wenn wir das haben, also wir haben sozusagen die Differenzialgleichung  und das hier dazu, dann nennt man das Ganze ein Anfangswertproblem.", "type": "Satz", "module_number": 31070}, {"node_index": 133, "embedding": [-6.360813617706299, -10.975870132446289, 37.68191909790039, -5.529550552368164, -10.28559684753418, -18.86294174194336], "text": "So, und jetzt stellt sich  natuerlich die Frage, ja, versuchen wir doch mal diese Differenzialgleichung jetzt nochmal aufzugreifen  und schauen uns jetzt mal die Eindeutigkeit an, die wir gerne haetten.", "type": "Satz", "module_number": 31070}, {"node_index": 134, "embedding": [-7.219210147857666, -19.465457916259766, 45.361698150634766, -3.4876203536987305, -7.626300811767578, -24.300098419189453], "text": "So, das heisst also,  jetzt wollen wir uns die Eindeutigkeit der Loesung anschauen.  ", "type": "Satz", "module_number": 31070}, {"node_index": 135, "embedding": [-7.856512069702148, -21.456043243408203, 47.9895133972168, -2.3184666633605957, -7.887977600097656, -25.850568771362305], "text": "So, und das heisst jetzt, wir nehmen uns so eine Loesung yt gleich c mal e hoch at.", "type": "Satz", "module_number": 31070}, {"node_index": 136, "embedding": [-56.484867095947266, 83.93038177490234, 162.0832977294922, 6.851631164550781, -68.3061294555664, -31.701175689697266], "text": "  ", "type": "Satz", "module_number": 31070}, {"node_index": 137, "embedding": [-13.484478950500488, 10.672383308410645, 47.42917251586914, -1.4081711769104004, -23.713134765625, -14.579383850097656], "text": "Das ist jetzt eine Loesung, sieht ein bisschen weiter aus hier, ist eine Loesung von unserer  Differenzialgleichung y' gleich a y, ich schreibe mal noch dazu a aus k, aber ich denke,  das ist jetzt mittlerweile klar.", "type": "Satz", "module_number": 31070}, {"node_index": 138, "embedding": [-8.505073547363281, -1.24027681350708, 37.54244613647461, -3.8617501258850098, -17.600419998168945, -15.304727554321289], "text": "Und jetzt geben wir uns eben einen Anfangszeitpunkt und einen  Anfangswert der Funktion zu diesem Zeitpunkt vor und dann sage ich jetzt einfach hier genau,  wie es auf der Folie steht, das geben wir uns vor.", "type": "Satz", "module_number": 31070}, {"node_index": 139, "embedding": [-9.613555908203125, -6.205917835235596, 44.42372512817383, -2.209916591644287, -13.484724044799805, -19.590085983276367], "text": "So, was sagt das jetzt aus?", "type": "Satz", "module_number": 31070}, {"node_index": 140, "embedding": [-7.210880756378174, -17.813167572021484, 41.36893081665039, -1.709949254989624, -6.7842559814453125, -22.099618911743164], "text": "Ja,  schauen wir mal an.", "type": "Satz", "module_number": 31070}, {"node_index": 141, "embedding": [-6.946547031402588, -13.697628021240234, 37.736331939697266, -2.1643967628479004, -6.370200157165527, -19.518470764160156], "text": "Das heisst, wir haben diese Loesung und diese Loesung muss auch dies erfuellen.", "type": "Satz", "module_number": 31070}, {"node_index": 142, "embedding": [-7.439128398895264, -11.63868236541748, 39.792606353759766, -3.172384738922119, -10.812826156616211, -19.807680130004883], "text": "  Das heisst also, wenn ich jetzt in dieser Loesung fuer t mal t0 einsetze, dann kommt da y0 heraus.  ", "type": "Satz", "module_number": 31070}, {"node_index": 143, "embedding": [-11.395172119140625, -8.59586238861084, 55.615440368652344, -5.523200988769531, -24.17966651916504, -25.32790184020996], "text": "Das heisst also, y0 ist ja, das habe ich jetzt erstmal nur abgeschrieben und die Darstellung  fuer y habe ich hier oben stehen, dann setze ich da mal t0 ein, dann steht da c mal e hoch at 0.  ", "type": "Satz", "module_number": 31070}, {"node_index": 144, "embedding": [-6.9365386962890625, -16.033119201660156, 41.214656829833984, -2.849067211151123, -9.048483848571777, -21.56638526916504], "text": "Und wir wollen ja das c bestimmen.", "type": "Satz", "module_number": 31070}, {"node_index": 145, "embedding": [-4.507522106170654, -14.899423599243164, 30.755210876464844, -2.6718032360076904, -2.108186721801758, -17.244918823242188], "text": "Das war ja sozusagen hier auch die Ideebestimmung von dem c.", "type": "Satz", "module_number": 31070}, {"node_index": 146, "embedding": [-57.636688232421875, 85.05110168457031, 166.58375549316406, 6.472728729248047, -68.86433410644531, -33.17319869995117], "text": "  ", "type": "Satz", "module_number": 31070}, {"node_index": 147, "embedding": [-13.895912170410156, -15.701114654541016, 67.34391784667969, -1.612131118774414, -14.404648780822754, -31.32203483581543], "text": "Ja, das c koennen wir jetzt aber angeben.", "type": "Satz", "module_number": 31070}, {"node_index": 148, "embedding": [-3.8515892028808594, -11.944923400878906, 26.895505905151367, -1.2330889701843262, -1.8756664991378784, -14.342178344726562], "text": "Was ist das c?", "type": "Satz", "module_number": 31070}, {"node_index": 149, "embedding": [-8.636993408203125, -11.243517875671387, 48.70683670043945, -4.821040153503418, -18.160568237304688, -23.146562576293945], "text": "Also einfach, dass hier umstellen  diese Gleichung, also diesen Ausdruck auf diese Seite bringen und da bekommen wir dann wieder e hoch  minus a t0 mal y0.", "type": "Satz", "module_number": 31070}, {"node_index": 150, "embedding": [-10.461841583251953, -24.12697982788086, 61.630008697509766, -3.944941997528076, -11.546918869018555, -32.50202178955078], "text": "So, und jetzt schauen wir uns nochmal die Loesung an.", "type": "Satz", "module_number": 31070}, {"node_index": 151, "embedding": [-5.158935070037842, -13.39159870147705, 30.355979919433594, -1.6440320014953613, -3.6964292526245117, -16.3917179107666], "text": "Jetzt haben wir  eine Darstellung fuer das c gewonnen.", "type": "Satz", "module_number": 31070}, {"node_index": 152, "embedding": [-6.7966742515563965, -20.14099884033203, 43.65571975708008, -2.7299742698669434, -4.822163105010986, -24.021432876586914], "text": "Das ist unsere Loesung.", "type": "Satz", "module_number": 31070}, {"node_index": 153, "embedding": [-10.757001876831055, -23.246030807495117, 62.03518295288086, -3.7767252922058105, -9.889894485473633, -32.54099655151367], "text": "c mal e hoch at.", "type": "Satz", "module_number": 31070}, {"node_index": 154, "embedding": [-9.659148216247559, -15.422335624694824, 50.622745513916016, -0.7148007750511169, -9.470664978027344, -24.639719009399414], "text": "Und jetzt setzen wir  fuer das c diese Darstellung hier ein.", "type": "Satz", "module_number": 31070}, {"node_index": 155, "embedding": [-11.236324310302734, -17.83447265625, 62.22145462036133, -4.939964771270752, -24.097015380859375, -30.654966354370117], "text": "So, wenn wir das machen, steht also da e hoch minus a t0  mal y0 mal e hoch at.", "type": "Satz", "module_number": 31070}, {"node_index": 156, "embedding": [-12.422747611999512, -17.23996353149414, 66.68172454833984, -5.612870216369629, -27.021530151367188, -32.44157409667969], "text": "Wenn wir das jetzt geeignet zusammenfassen, dann bekommen wir hier also e hoch  at minus t0 y0. Und das ist dann tatsaechlich die eindeutig bestimmte Loesung.  ", "type": "Satz", "module_number": 31070}, {"node_index": 157, "embedding": [-8.318032264709473, -17.828786849975586, 48.000614166259766, -2.0033063888549805, -9.139786720275879, -24.865983963012695], "text": "Also die eindeutige Loesung.", "type": "Satz", "module_number": 31070}, {"node_index": 158, "embedding": [-58.56650924682617, 88.57112121582031, 167.4376220703125, 7.184257507324219, -70.77857208251953, -32.07332992553711], "text": "  ", "type": "Satz", "module_number": 31070}, {"node_index": 159, "embedding": [-12.395177841186523, 15.43896484375, 38.26264572143555, 0.9679384827613831, -15.461359024047852, -8.544868469238281], "text": "Ja, Anfangswertproblem habe ich jetzt hier vergessen, auf die Folie zu schreiben.", "type": "Satz", "module_number": 31070}, {"node_index": 160, "embedding": [-11.562067031860352, -25.85498046875, 67.99223327636719, -3.013404369354248, -10.896920204162598, -35.21455764770508], "text": "Da  kuerzen wir einfach a wp ab.", "type": "Satz", "module_number": 31070}, {"node_index": 161, "embedding": [-6.487786769866943, -8.951236724853516, 35.601688385009766, -2.4520766735076904, -13.658468246459961, -16.785669326782227], "text": "Also das a wp, ich schreibe mal noch das s dazu und zwar y  strich a y, das ist die Differenzialgleichung mit dem Anfangswert, also y t0 gleich y0.", "type": "Satz", "module_number": 31070}, {"node_index": 162, "embedding": [-5.3361968994140625, -1.775368332862854, 26.395496368408203, -3.3220512866973877, -13.247076034545898, -10.91883659362793], "text": "Und damit  haben wir auch schon den naechsten Satz bewiesen und zwar den Satz 2 auf, was kommt als naechstes auf  der Folie 4. Und den schauen wir uns zum Abschluss des Videos jetzt noch an.", "type": "Satz", "module_number": 31070}, {"node_index": 163, "embedding": [-4.316304683685303, -7.854430198669434, 27.939022064208984, -2.1883459091186523, -7.5101728439331055, -13.117518424987793], "text": "Voellig unspektakulaer.  ", "type": "Satz", "module_number": 31070}, {"node_index": 164, "embedding": [-2.720367193222046, -17.097244262695312, 27.298433303833008, 0.6819685101509094, 2.2087016105651855, -15.440483093261719], "text": "Wir haben jetzt alles schon gesehen.", "type": "Satz", "module_number": 31070}, {"node_index": 165, "embedding": [-5.376734256744385, -17.06344985961914, 35.33003616333008, -0.8244752287864685, -1.9601479768753052, -19.09625816345215], "text": "Das heisst also hier noch mal in schoener Schreibweise und hier  steht jetzt auch noch mal die Abkuerzung, haette ich vielleicht eine Folie vorher schon angeben sollen.  ", "type": "Satz", "module_number": 31070}, {"node_index": 166, "embedding": [-9.722002983093262, -13.53192138671875, 52.117069244384766, -5.559121131896973, -15.823539733886719, -25.365877151489258], "text": "Hier haben wir also ein Anfangswertproblem bestehend aus einer Differenzialgleichung und einem  Anfangswert zu einer Anfangszeit.", "type": "Satz", "module_number": 31070}, {"node_index": 167, "embedding": [-5.74493408203125, -8.962736129760742, 32.50611114501953, -3.7878966331481934, -9.561691284179688, -15.696638107299805], "text": "Und dieses Problem hat eine eindeutige Loesung und die  Loesung haben wir eben gerade schon gesehen.", "type": "Satz", "module_number": 31070}, {"node_index": 168, "embedding": [-5.815345764160156, -11.102867126464844, 36.76652145385742, -3.3106627464294434, -10.308491706848145, -17.716161727905273], "text": "Y t gleich", "type": "Satz", "module_number": 31070}, {"node_index": 169, "embedding": [-10.9357328414917, -15.686817169189453, 59.41556167602539, -4.13573694229126, -23.570283889770508, -28.638715744018555], "text": "e hoch a t minus t0, klammern mal y0.  ", "type": "Satz", "module_number": 31070}, {"node_index": 170, "embedding": [-8.477033615112305, -3.8229658603668213, 40.1347770690918, -3.8997159004211426, -20.516443252563477, -17.26059913635254], "text": "Das ist also der Anfangswert der Funktion.", "type": "Satz", "module_number": 31070}, {"node_index": 171, "embedding": [-12.383197784423828, -27.22909927368164, 72.07501220703125, -3.90339994430542, -14.065118789672852, -37.682430267333984], "text": "Gut, das genuegt jetzt fuer den Moment.", "type": "Satz", "module_number": 31070}, {"node_index": 172, "embedding": [-7.440628528594971, -9.157573699951172, 37.64224624633789, -2.192028045654297, -12.816312789916992, -17.666425704956055], "text": "Damit wissen  wir also jetzt, wie wir lineare Differenzialgleichung erste Ordnung loesen koennen.", "type": "Satz", "module_number": 31070}, {"node_index": 173, "embedding": [-3.645174264907837, -11.358049392700195, 24.49591064453125, -0.7179290652275085, -4.780788898468018, -12.740516662597656], "text": "Hier spielt also  schon wieder die Exponenzialfunktion eine wesentliche Rolle.", "type": "Satz", "module_number": 31070}, {"node_index": 174, "embedding": [-4.743906497955322, -13.046234130859375, 29.797321319580078, -0.9590925574302673, -6.849837779998779, -15.347893714904785], "text": "Haetten wir uns aber auch denken koennen,  weil wir uns ja noch mal daran erinnern, dass die Ableitung der Exponenzialfunktion wieder  die Funktion selbst ist und hier kommt dann irgendwie so diese innere Ableitung noch mit ins Spiel.", "type": "Satz", "module_number": 31070}, {"node_index": 175, "embedding": [-59.93397903442383, 89.98768615722656, 171.90321350097656, 6.95286750793457, -73.0143814086914, -33.30403137207031], "text": "  ", "type": "Satz", "module_number": 31070}, {"node_index": 176, "embedding": [-11.618938446044922, 13.10151481628418, 36.78308868408203, 1.1531615257263184, -14.021255493164062, -8.898290634155273], "text": "Und im naechsten Video werden wir uns dann als eine Art Hilfsresultat dann auch fuer die Differenzialgleichung  2. Ordnung schauen.", "type": "Satz", "module_number": 31070}, {"node_index": 177, "embedding": [-5.145818710327148, -4.1211466789245605, 26.58363914489746, -0.6645423769950867, -8.175968170166016, -10.921603202819824], "text": "Wir schauen uns im naechsten Video Systeme von Linearen Differenzialgleichung  1. Ordnung an und da koennen wir dann sehr schoen die Tools der Linearen Algebra wie die Diagonalisierung  verwenden.", "type": "Satz", "module_number": 31070}, {"node_index": 178, "embedding": [-60.46927261352539, 92.36013793945312, 173.01487731933594, 7.114739418029785, -73.95472717285156, -32.817535400390625], "text": "  ", "type": "Satz", "module_number": 31070}, {"node_index": 179, "embedding": [-18.133176803588867, 24.950576782226562, 54.27407455444336, 3.170999050140381, -24.141300201416016, -10.620189666748047], "text": "Herzlich willkommen zum vierten Teil der 41. Vorlesung im Kursanalysis 1 und  lineare Algebra fuer Ingenieurwissenschaften.", "type": "Satz", "module_number": 31070}, {"node_index": 180, "embedding": [-5.049178123474121, -5.756405830383301, 24.14127540588379, 1.2069907188415527, -6.734047889709473, -10.212248802185059], "text": "Wir haben jetzt  relativ viel schon wieder in dieser Vorlesung gesehen.", "type": "Satz", "module_number": 31070}, {"node_index": 181, "embedding": [-6.210606098175049, -13.143474578857422, 33.45012283325195, -0.6926862597465515, -6.094998359680176, -16.902557373046875], "text": "Wir haben zuerst die  absolute Konvergenz kennengelernt, dann gesehen was das Koji-Produkt fuer  Rhein ist.", "type": "Satz", "module_number": 31070}, {"node_index": 182, "embedding": [-5.85974645614624, -13.265218734741211, 35.58109664916992, -3.1814093589782715, -6.534768581390381, -17.982601165771484], "text": "Das hiess also das Produkt von zwei absolut konvergenten Rhein ist  wieder eine absolut konvergente Reihe und im letzten Video haben wir dann drei  wichtige Konvergenzkriterien kennengelernt, das Majoranten Kriterium,  das Minoranten Kriterium und das Quotienten Kriterium.", "type": "Satz", "module_number": 31070}, {"node_index": 183, "embedding": [-4.511730194091797, -11.900797843933105, 31.95012664794922, -4.2174553871154785, -7.005544662475586, -16.159828186035156], "text": " Damit haben wir jetzt also relativ viele Werkzeuge, um Rhein zu bearbeiten, um  herauszufinden, ob Rhein konvergieren oder auch nicht.", "type": "Satz", "module_number": 31070}, {"node_index": 184, "embedding": [-4.457596778869629, -13.1659574508667, 29.87333869934082, -2.3719587326049805, -6.226597309112549, -15.591691970825195], "text": "Und in diesem letzten Video  wollen wir einen kleinen Ausblick in die Theorie der Komplexen rein geben.  ", "type": "Satz", "module_number": 31070}, {"node_index": 185, "embedding": [-3.8822855949401855, -17.30907440185547, 29.06061363220215, -1.1801080703735352, -3.600067138671875, -16.493263244628906], "text": "Dadurch, dass sehr vieles analog funktioniert, werden wir jetzt hier auch  nicht so viel machen, sondern einfach nur eine kleine Zusammenfassung bringen.", "type": "Satz", "module_number": 31070}, {"node_index": 186, "embedding": [-61.37541198730469, 92.19157409667969, 176.19561767578125, 7.220884323120117, -74.13191986083984, -34.10911178588867], "text": "  ", "type": "Satz", "module_number": 31070}, {"node_index": 187, "embedding": [-12.140222549438477, 15.32078742980957, 36.9099235534668, 0.24894458055496216, -16.193946838378906, -8.443960189819336], "text": "Und das schauen wir uns mal auf einer Folie an und danach betrachten wir mal die  zwei wichtigsten komplexen Rheinen, die wir sozusagen schon kennen und die wir  kurz mal analysieren wollen.", "type": "Satz", "module_number": 31070}, {"node_index": 188, "embedding": [-7.2674713134765625, -4.716989040374756, 32.83426284790039, -2.1038341522216797, -9.55630111694336, -14.127082824707031], "text": "Komplexe Rheinen, das heisst also hier, wir haben  also Rheien mit komplexen Gliedern.", "type": "Satz", "module_number": 31070}, {"node_index": 189, "embedding": [-6.082047939300537, -15.606429100036621, 35.83863830566406, -1.9352116584777832, -5.835585117340088, -18.924570083618164], "text": "Ich habe das jetzt hier nicht noch mal  formal aufgeschrieben.", "type": "Satz", "module_number": 31070}, {"node_index": 190, "embedding": [-5.956294536590576, -15.185418128967285, 35.159637451171875, -1.3221204280853271, -6.385400295257568, -18.398252487182617], "text": "Und hier kann man voellig analog die Konvergenz und auch  die absolute Konvergenz definieren, genauso wie wir das gemacht haben, sowohl in  der 40. Vorlesung als auch jetzt hier in der 41. Vorlesung im ersten Teil.  ", "type": "Satz", "module_number": 31070}, {"node_index": 191, "embedding": [-7.782761573791504, -3.3344531059265137, 32.97847366333008, -1.0976927280426025, -15.995927810668945, -13.726188659667969], "text": "Und jetzt stellt sich die Frage, wer hat das ja schon haeufiger gesehen, was gilt  jetzt im Komplexen, was gilt nicht.", "type": "Satz", "module_number": 31070}, {"node_index": 192, "embedding": [-10.664834022521973, -4.534430027008057, 45.70908737182617, -2.264713764190674, -18.410736083984375, -19.211132049560547], "text": "Und hier sehen Sie mal eine Zusammenfassung  von Sachen, die ebenfalls bei komplexen Rheinen funktionieren.  ", "type": "Satz", "module_number": 31070}, {"node_index": 193, "embedding": [-6.44746208190918, -15.496264457702637, 38.511863708496094, -2.1477675437927246, -7.984755516052246, -19.896352767944336], "text": "Also das erste, was wir analog verwenden koennen aus der absoluten Konvergenz,  folgt die Konvergenz der Reihe.", "type": "Satz", "module_number": 31070}, {"node_index": 194, "embedding": [-4.6170268058776855, -12.22303581237793, 28.902271270751953, -0.6755489706993103, -6.481191158294678, -14.777267456054688], "text": "Das ist voellig analog zum reellen Fall.", "type": "Satz", "module_number": 31070}, {"node_index": 195, "embedding": [-62.3858757019043, 94.67012023925781, 178.3560028076172, 7.701133728027344, -75.73116302490234, -34.04303741455078], "text": " ", "type": "Satz", "module_number": 31070}, {"node_index": 196, "embedding": [-12.903407096862793, 18.255958557128906, 37.72139358520508, 0.44840484857559204, -19.16063690185547, -7.86623477935791], "text": "Ebenso das notwendige Kriterium, das also wenn wir eine Reihe ueber die AKs haben,  dann muessen die AKs, wenn die Reihe konvergiert, einen Nullfolge bilden.  ", "type": "Satz", "module_number": 31070}, {"node_index": 197, "embedding": [-8.800209045410156, 2.1909093856811523, 34.472328186035156, -1.803156852722168, -15.900566101074219, -12.486675262451172], "text": "Auch das funktioniert hier im komplexen Fall.", "type": "Satz", "module_number": 31070}, {"node_index": 198, "embedding": [-6.219898700714111, -13.474594116210938, 39.8702507019043, -3.982661247253418, -9.413106918334961, -19.69097328186035], "text": "Und dann natuerlich auch noch die  drei Konvergenzkriterien aus dem letzten Teil, das Majorantenkriterium,  das Minorantenkriterium und das Quotsientenkriterium.", "type": "Satz", "module_number": 31070}, {"node_index": 199, "embedding": [-3.753025531768799, -12.864710807800293, 29.293058395385742, -2.4267187118530273, -3.714236259460449, -15.27308177947998], "text": "Auch die funktionieren analog.", "type": "Satz", "module_number": 31070}, {"node_index": 200, "embedding": [-62.98875045776367, 95.9830322265625, 180.53298950195312, 7.376655578613281, -75.75395965576172, -34.46676254272461], "text": "  ", "type": "Satz", "module_number": 31070}, {"node_index": 201, "embedding": [-12.172868728637695, 13.257268905639648, 38.52129364013672, 0.3039413094520569, -15.391971588134766, -9.985502243041992], "text": "Ja, was funktioniert jetzt nicht, ja, wann immer wir im komplexen sind,  das ist ja immer wenn irgendetwas mit Ungleichung zu tun hat.", "type": "Satz", "module_number": 31070}, {"node_index": 202, "embedding": [-8.725768089294434, -5.971783638000488, 39.29426193237305, -2.379040479660034, -11.384979248046875, -17.477602005004883], "text": "Das klappt ja  im komplexen nicht.", "type": "Satz", "module_number": 31070}, {"node_index": 203, "embedding": [-7.710229396820068, -15.516735076904297, 41.52199172973633, -2.361070156097412, -7.686898231506348, -21.4849910736084], "text": "Dort haben wir eben keine Ordnung gegeben.", "type": "Satz", "module_number": 31070}, {"node_index": 204, "embedding": [-7.567193031311035, -15.545489311218262, 39.993465423583984, -1.570908784866333, -6.403531074523926, -20.753204345703125], "text": "Wie gesagt, wir koennen  keine zwei komplexen Zahlen vergleichen.", "type": "Satz", "module_number": 31070}, {"node_index": 205, "embedding": [-7.657649040222168, -14.134512901306152, 40.43742752075195, -3.0036048889160156, -7.655895709991455, -20.601028442382812], "text": "Z1 ist kleiner, Z2 das geht eben nicht und da fallen  uns eigentlich nur die beiden Kriterien ein, die wir im letzten Teil oder ich glaube nicht im  letzten, im vorletzten Teil auf jeden Fall in der letzten Vorlesung kennengelernt haben.", "type": "Satz", "module_number": 31070}, {"node_index": 206, "embedding": [-5.730515003204346, -13.795438766479492, 36.97121047973633, -4.7628493309021, -6.8751068115234375, -19.102434158325195], "text": "Und zwar  das Leibnizkriterium und das Integralvergleichskriterium.", "type": "Satz", "module_number": 31070}, {"node_index": 207, "embedding": [-2.6055195331573486, -17.57245635986328, 32.654075622558594, -5.795912742614746, -0.6971626877784729, -18.681774139404297], "text": "Bei dem Integralvergleichskriterium hatten wir  ja auch Ungleichung.", "type": "Satz", "module_number": 31070}, {"node_index": 208, "embedding": [-3.3141872882843018, -19.015018463134766, 35.6661262512207, -5.432130813598633, 0.7108544707298279, -20.59885597229004], "text": "Da haben wir das Ganze durch uneigentliche Integrale.", "type": "Satz", "module_number": 31070}, {"node_index": 209, "embedding": [-5.564072608947754, -15.176278114318848, 37.78066635131836, -4.159461498260498, -4.365060329437256, -20.07168960571289], "text": "Sind wir quasi  vorgegangen, um dann die Konvergenz von Reihen oder auch die Divergenz nachzuweisen.", "type": "Satz", "module_number": 31070}, {"node_index": 210, "embedding": [-4.633984088897705, -16.02589225769043, 32.5941162109375, -2.3268861770629883, -4.415631294250488, -17.935762405395508], "text": "Und bei dem  Leibnizkriterium da ging es ja auch darum, dass die Folge eine monoton fallende Nullfolge ist.", "type": "Satz", "module_number": 31070}, {"node_index": 211, "embedding": [-63.743587493896484, 96.58067321777344, 182.5303192138672, 7.616601943969727, -76.79779815673828, -35.00774002075195], "text": "  ", "type": "Satz", "module_number": 31070}, {"node_index": 212, "embedding": [-12.216882705688477, 12.691808700561523, 36.4997673034668, 2.2152881622314453, -13.794319152832031, -9.033903121948242], "text": "Und da faengt schon wieder an fallend.", "type": "Satz", "module_number": 31070}, {"node_index": 213, "embedding": [-8.78232192993164, -6.923811435699463, 35.792945861816406, 1.3638017177581787, -8.678624153137207, -15.761608123779297], "text": "Das ist eine Ungleichung, also eine quasi eine Ungleichung.  ", "type": "Satz", "module_number": 31070}, {"node_index": 214, "embedding": [-6.973473072052002, -18.473670959472656, 39.476009368896484, -0.34216445684432983, -6.709321022033691, -21.302032470703125], "text": "Das heisst also hier, was heisst dann fallend bei komplexen Zahlen.", "type": "Satz", "module_number": 31070}, {"node_index": 215, "embedding": [-6.143831253051758, -18.18375015258789, 38.06961441040039, -1.0204665660858154, -6.933314800262451, -20.804790496826172], "text": "Auch das ist nicht moeglich,  deswegen die beiden Kriterien Leibnizkriterien und Integralvergleichskriterium, die funktionieren  im komplexen nicht.", "type": "Satz", "module_number": 31070}, {"node_index": 216, "embedding": [-6.238074779510498, -15.695137023925781, 37.94715881347656, -1.8819875717163086, -6.325307369232178, -20.147315979003906], "text": "Das kann man sich also relativ einfach merken.", "type": "Satz", "module_number": 31070}, {"node_index": 217, "embedding": [-8.89236068725586, -12.11657428741455, 46.15818405151367, -2.9885129928588867, -10.070940971374512, -22.382831573486328], "text": "Man kann sich das  grob fast immer merken, dass also alles, wo irgendwelche Ungleichung auftaucht und das klappt  eben im komplexen nicht.", "type": "Satz", "module_number": 31070}, {"node_index": 218, "embedding": [-5.990147113800049, -15.997720718383789, 37.10953903198242, -3.450805187225342, -5.53823709487915, -20.06630516052246], "text": "Ja und zum Abschluss zwei Beispiele, die Sie kennen sollten, die wir auch  schon gesehen haben.", "type": "Satz", "module_number": 31070}, {"node_index": 219, "embedding": [-6.515754699707031, -15.653356552124023, 38.866416931152344, -4.119165420532227, -5.551750183105469, -20.68260383605957], "text": "Das ist zum einen die geometrische Reihe im komplexen und dann auch  nochmal die Exponentialfunktion, die wir aber auch schon mal gesehen haben.", "type": "Satz", "module_number": 31070}, {"node_index": 220, "embedding": [-8.836935997009277, -18.626686096191406, 51.301090240478516, -5.797587871551514, -8.861458778381348, -26.790462493896484], "text": "Das heisst also hier  geometrische Reihe im komplexen.", "type": "Satz", "module_number": 31070}, {"node_index": 221, "embedding": [-8.052370071411133, -13.499227523803711, 41.682167053222656, -2.652235507965088, -8.805594444274902, -20.91914176940918], "text": "Ja wie sieht die aus?", "type": "Satz", "module_number": 31070}, {"node_index": 222, "embedding": [-9.177410125732422, -16.291812896728516, 46.51185989379883, -2.1943349838256836, -6.1828484535217285, -23.924352645874023], "text": "Die sieht jetzt erst mal ganz genauso aus.  ", "type": "Satz", "module_number": 31070}, {"node_index": 223, "embedding": [-8.067056655883789, -16.35991096496582, 43.882999420166016, -2.7502074241638184, -8.2859525680542, -22.870637893676758], "text": "Das heisst also k gleich 0 bis unendlich z hoch k.", "type": "Satz", "module_number": 31070}, {"node_index": 224, "embedding": [-6.469151973724365, -11.623726844787598, 34.86013412475586, -2.2313642501831055, -10.413633346557617, -17.503082275390625], "text": "z ist jetzt eine komplexe Zahl und das  ganze konvergiert dann auch gegen oder gibt den Reihenwert 1 durch 1 minus z.", "type": "Satz", "module_number": 31070}, {"node_index": 225, "embedding": [-9.335673332214355, -6.899051189422607, 45.12655258178711, -4.24456787109375, -20.70153045654297, -20.379262924194336], "text": "Das ist natuerlich  dann wieder komplex und zwar fuer alle komplexen Zahlen z aus c mit der Eigenschaft, dass der  Betrag von z kleiner 1 ist.", "type": "Satz", "module_number": 31070}, {"node_index": 226, "embedding": [-8.428033828735352, -14.308067321777344, 45.66178894042969, -2.57401180267334, -14.337011337280273, -22.769582748413086], "text": "Also jetzt der Betrag im komplexen.", "type": "Satz", "module_number": 31070}, {"node_index": 227, "embedding": [-6.657468318939209, -12.700090408325195, 35.345638275146484, -0.3342744708061218, -8.286588668823242, -17.690853118896484], "text": "Und diese Reihe ist dann natuerlich  auch absolut konvergent.", "type": "Satz", "module_number": 31070}, {"node_index": 228, "embedding": [-9.064229965209961, -15.158239364624023, 46.4960823059082, -0.7581021189689636, -9.440114974975586, -22.881589889526367], "text": "Das koennen wir auch leicht nachpruefen.", "type": "Satz", "module_number": 31070}, {"node_index": 229, "embedding": [-4.668234348297119, -10.656942367553711, 26.81706428527832, -0.5111443400382996, -4.035677909851074, -13.667470932006836], "text": "Warum ist die absolut konvergent?  ", "type": "Satz", "module_number": 31070}, {"node_index": 230, "embedding": [-5.015993595123291, -11.939664840698242, 31.04914093017578, -1.0972530841827393, -4.8122334480285645, -15.735275268554688], "text": "Wenn wir uns das einfach mal mit Betraegen anschauen, also in dieser Form, dann muessen  wir nach den Rechenregeln fuer den Betrag, also auch im komplexen koennen wir das reinziehen.", "type": "Satz", "module_number": 31070}, {"node_index": 231, "embedding": [-5.93514347076416, -14.179885864257812, 35.84133529663086, -1.8602056503295898, -7.248301982879639, -18.594144821166992], "text": "Das  heisst also hier steht nichts anderes als z-Betrag hoch", "type": "Satz", "module_number": 31070}, {"node_index": 232, "embedding": [-6.7790045738220215, -15.578956604003906, 35.59959411621094, 2.1552622318267822, -5.1558942794799805, -18.666345596313477], "text": "k.", "type": "Satz", "module_number": 31070}, {"node_index": 233, "embedding": [-6.675825595855713, -17.347461700439453, 34.75352096557617, 4.9537248611450195, 0.10048286616802216, -18.787803649902344], "text": "Aber das was hier steht ist doch jetzt  einfach nur realwertig.", "type": "Satz", "module_number": 31070}, {"node_index": 234, "embedding": [-6.445913791656494, -19.69765853881836, 39.61094284057617, 0.4268544316291809, -2.2231130599975586, -22.054067611694336], "text": "Das ist ja einfach eine reale, das sind ja hier eine reale Zahl.", "type": "Satz", "module_number": 31070}, {"node_index": 235, "embedding": [-6.859062671661377, -19.785165786743164, 42.36556625366211, -1.5300729274749756, -6.559570789337158, -23.17557716369629], "text": "Wir  hatten das jetzt im realen q genannt.", "type": "Satz", "module_number": 31070}, {"node_index": 236, "embedding": [-6.704338550567627, -18.019865036010742, 39.68708419799805, -0.8963345885276794, -6.201665878295898, -21.49172019958496], "text": "Jetzt haben wir eben statt q z Betrag und jetzt koennen wir  ja genau diese Regeln aus dem realen anwenden und da kommt dann eben 1 durch 1 minus z Betrag  heraus.", "type": "Satz", "module_number": 31070}, {"node_index": 237, "embedding": [-8.44926929473877, -16.127098083496094, 46.05631637573242, -1.9109721183776855, -9.85095500946045, -23.301931381225586], "text": "Und diese Reihe konvergiert.", "type": "Satz", "module_number": 31070}, {"node_index": 238, "embedding": [-9.721622467041016, -14.855097770690918, 51.13097381591797, -2.4657678604125977, -12.68067741394043, -24.748638153076172], "text": "Also bedeutet das, dass natuerlich diese Reihe hier absolut  konvergent ist.", "type": "Satz", "module_number": 31070}, {"node_index": 239, "embedding": [-6.370239734649658, -11.953039169311523, 34.942020416259766, -1.836454153060913, -7.317504405975342, -17.47186851501465], "text": "Also auch hier, das kennen wir eigentlich alles schon.", "type": "Satz", "module_number": 31070}, {"node_index": 240, "embedding": [-9.017322540283203, -21.13317108154297, 55.200382232666016, -3.561448097229004, -9.885831832885742, -28.514432907104492], "text": "Und die komplexe  Exponentialfunktion zum Abschluss dazu.", "type": "Satz", "module_number": 31070}, {"node_index": 241, "embedding": [-11.929795265197754, -11.688969612121582, 60.18576431274414, -5.97702693939209, -21.655872344970703, -28.11176109313965], "text": "Also hier e x p c nach c.", "type": "Satz", "module_number": 31070}, {"node_index": 242, "embedding": [-5.697168350219727, -9.828620910644531, 30.048681259155273, -1.5727591514587402, -8.205731391906738, -14.847932815551758], "text": "Da erinnern wir uns noch mal an die  26. Vorlesung.", "type": "Satz", "module_number": 31070}, {"node_index": 243, "embedding": [-6.076042652130127, -15.770700454711914, 33.93016052246094, -0.8869838118553162, -5.266469955444336, -18.161649703979492], "text": "Da hatten wir die auch schon mal auf der Folie gesehen und auch hier konnten wir die  angeben, wie wir das auch aus dem realen kennen.", "type": "Satz", "module_number": 31070}, {"node_index": 244, "embedding": [-6.668556213378906, -17.000154495239258, 38.9139518737793, -2.429900884628296, -6.02675199508667, -20.92447853088379], "text": "Das heisst also hier z hoch k durch k Fakultaet.", "type": "Satz", "module_number": 31070}, {"node_index": 245, "embedding": [-65.0042495727539, 98.3328857421875, 186.27867126464844, 7.353404998779297, -78.4004135131836, -35.96615982055664], "text": "  ", "type": "Satz", "module_number": 31070}, {"node_index": 246, "embedding": [-11.50126838684082, 2.1943066120147705, 41.572425842285156, 1.4484612941741943, -13.213539123535156, -14.57164192199707], "text": "Da koennen sie noch mal schauen, das war die Folie 14, Vorlesung 26.", "type": "Satz", "module_number": 31070}, {"node_index": 247, "embedding": [-9.30465316772461, -12.863643646240234, 45.27638244628906, 0.0408821627497673, -11.511981010437012, -21.39284324645996], "text": "Ja und diese Reihe ist natuerlich  auch konvergent und zwar also genauer gesagt absolut konvergent nach dem Quotienten Kriterium.  ", "type": "Satz", "module_number": 31070}, {"node_index": 248, "embedding": [-10.794331550598145, -25.688270568847656, 63.50191116333008, -2.4078173637390137, -10.9924955368042, -33.25060272216797], "text": "Das koennen wir noch mal zum Abschluss als kleine Uebung direkt angeben.  ", "type": "Satz", "module_number": 31070}, {"node_index": 249, "embedding": [-6.248627185821533, -15.332391738891602, 38.455482482910156, -2.4316868782043457, -4.037535667419434, -20.491117477416992], "text": "Warum ist es so?", "type": "Satz", "module_number": 31070}, {"node_index": 250, "embedding": [-5.432272911071777, -15.61355972290039, 34.542484283447266, -1.0854301452636719, -1.5296412706375122, -19.126527786254883], "text": "Quotienten Kriterium, da oben sehen wir das noch.", "type": "Satz", "module_number": 31070}, {"node_index": 251, "embedding": [-6.132828235626221, -16.84225845336914, 36.72029113769531, -0.043855614960193634, -4.4800543785095215, -20.04913902282715], "text": "Wir muessen also diesen  Limes betrachten.", "type": "Satz", "module_number": 31070}, {"node_index": 252, "embedding": [-6.249059677124023, -16.149850845336914, 34.86614227294922, 1.270988941192627, -6.552762508392334, -18.601428985595703], "text": "Also ak plus 1 durch ak.", "type": "Satz", "module_number": 31070}, {"node_index": 253, "embedding": [-11.328640937805176, -29.521045684814453, 68.32081604003906, -2.2325143814086914, -11.017534255981445, -36.67546463012695], "text": "Wir haben hier das mal aufschreiben.", "type": "Satz", "module_number": 31070}, {"node_index": 254, "embedding": [-2.912623167037964, -17.04629135131836, 24.5332088470459, -0.23500818014144897, 1.3209785223007202, -15.135324478149414], "text": "Was bekommen wir  hier?", "type": "Satz", "module_number": 31070}, {"node_index": 255, "embedding": [-3.2631611824035645, -22.595104217529297, 30.260284423828125, 0.1404755711555481, 2.0210328102111816, -19.382238388061523], "text": "Also z hoch k plus 1 durch k plus 1 Fakultaet und das ganze geteilt durch z hoch k durch k Fakultaet.  ", "type": "Satz", "module_number": 31070}, {"node_index": 256, "embedding": [-6.912744522094727, -16.851776123046875, 40.00503158569336, -1.0050320625305176, -8.174478530883789, -21.33505630493164], "text": "So wenn wir das mal in die schoene Form bringen, dann haben wir hier also z Betrag.", "type": "Satz", "module_number": 31070}, {"node_index": 257, "embedding": [-8.625524520874023, -5.75159215927124, 39.31748580932617, -1.5065975189208984, -12.261703491210938, -16.836427688598633], "text": "Jetzt habe  ich die Betraege hier vergessen.", "type": "Satz", "module_number": 31070}, {"node_index": 258, "embedding": [-15.36658000946045, -37.38407897949219, 91.98648071289062, -4.334405899047852, -14.700690269470215, -48.870059967041016], "text": "So dass so ein gerade Strich werden.", "type": "Satz", "module_number": 31070}, {"node_index": 259, "embedding": [-4.306145668029785, -10.201129913330078, 24.224271774291992, -0.43030625581741333, -3.374100923538208, -12.576183319091797], "text": "So jetzt kann ich die  Betraege wieder reinziehen.", "type": "Satz", "module_number": 31070}, {"node_index": 260, "embedding": [-6.936666011810303, -15.327577590942383, 37.03944778442383, 0.8154380917549133, -7.773475170135498, -19.03174591064453], "text": "Dann weiss ich, hier steht z Betrag hoch k plus 1.", "type": "Satz", "module_number": 31070}, {"node_index": 261, "embedding": [-7.220758438110352, -18.730648040771484, 42.87409973144531, -0.7482795119285583, -9.071693420410156, -22.97917938232422], "text": "Das ganze geteilt durch  k plus 1 Fakultaet, multipliziert k Fakultaet durch z Betrag.", "type": "Satz", "module_number": 31070}, {"node_index": 262, "embedding": [-5.835710048675537, -10.180649757385254, 32.12119674682617, -1.2404537200927734, -10.124780654907227, -15.825654983520508], "text": "Auch hier wieder die Rechenregeln fuer  den Betrag angewandt.", "type": "Satz", "module_number": 31070}, {"node_index": 263, "embedding": [-3.915600061416626, -23.46546173095703, 34.6005859375, 0.044160179793834686, 1.2617963552474976, -21.250917434692383], "text": "Was sehen wir jetzt hier?", "type": "Satz", "module_number": 31070}, {"node_index": 264, "embedding": [-5.77373743057251, -24.45085906982422, 43.744171142578125, -2.021389961242676, -0.5436707139015198, -25.756515502929688], "text": "Also k Fakultaet.", "type": "Satz", "module_number": 31070}, {"node_index": 265, "embedding": [-4.046529769897461, -18.624786376953125, 33.56868362426758, -1.5837242603302002, 2.429821252822876, -19.80484390258789], "text": "Wie koennen wir das schreiben?  ", "type": "Satz", "module_number": 31070}, {"node_index": 266, "embedding": [-7.117166519165039, -19.07437515258789, 44.807796478271484, -2.1361918449401855, -4.672382354736328, -24.275007247924805], "text": "Also hier steht k plus 1 Fakultaet.", "type": "Satz", "module_number": 31070}, {"node_index": 267, "embedding": [-8.649300575256348, -17.081523895263672, 41.94535827636719, 4.995874404907227, -4.675915718078613, -21.428577423095703], "text": "k plus", "type": "Satz", "module_number": 31070}, {"node_index": 268, "embedding": [-9.024592399597168, -20.769454956054688, 48.5576286315918, 2.876648187637329, -7.389331817626953, -25.56606101989746], "text": "1 Fakultaet kann ich ja schreiben als k plus 1 mal k Fakultaet.  ", "type": "Satz", "module_number": 31070}, {"node_index": 269, "embedding": [-8.16376781463623, -20.207136154174805, 49.46518325805664, -1.8883056640625, -6.811042785644531, -26.525070190429688], "text": "Dann kuerze ich das k Fakultaet mit diesem weg.", "type": "Satz", "module_number": 31070}, {"node_index": 270, "embedding": [-5.549719333648682, -11.269387245178223, 32.310726165771484, -2.5912296772003174, -5.2301249504089355, -16.63379669189453], "text": "Wenn ich diese beiden Ausdruecke hier anschaue,  dann sehen wir bleibt einfach z Betrag uebrig.", "type": "Satz", "module_number": 31070}, {"node_index": 271, "embedding": [-6.70127010345459, -12.851348876953125, 38.189857482910156, -4.410931587219238, -7.540552616119385, -19.590234756469727], "text": "Das heisst also wir haben z Betrag und dann kuerzt  sich das k Fakultaet weg und wir haben hier k plus 1.", "type": "Satz", "module_number": 31070}, {"node_index": 272, "embedding": [-7.122699737548828, -15.027490615844727, 41.77244186401367, -4.346789836883545, -7.808867454528809, -21.788667678833008], "text": "Das sieht natuerlich schoen aus.", "type": "Satz", "module_number": 31070}, {"node_index": 273, "embedding": [-8.018062591552734, -21.081085205078125, 50.08536911010742, -2.9915738105773926, -12.190189361572266, -26.77678108215332], "text": "Das konvergiert  dann offensichtlich gegen 0.", "type": "Satz", "module_number": 31070}, {"node_index": 274, "embedding": [-7.398282527923584, -9.088455200195312, 38.653446197509766, -3.2362513542175293, -13.84965991973877, -18.415998458862305], "text": "Das ist kleiner 1 fuer k gegen und endlich und zwar fuer jedes  z aus den komplexen Zahlen.", "type": "Satz", "module_number": 31070}, {"node_index": 275, "embedding": [-6.202545642852783, -16.838451385498047, 41.08843231201172, -4.541601181030273, -7.979307174682617, -22.10468292236328], "text": "Also hier noch mal der kleine Beweis dafuer und wie gesagt,  wir hatten ja auch gesagt, das Quotientenkriterium klappt jetzt hier analog im Komplexen und das  sind erstmal die wichtigsten Sachen, die sie kennen sollten.", "type": "Satz", "module_number": 31070}, {"node_index": 276, "embedding": [-8.708574295043945, -20.57712745666504, 53.08440399169922, -5.568480014801025, -9.861664772033691, -28.135629653930664], "text": "Geometrische Reihe und die  komplexe Exponenzialfunktion.", "type": "Satz", "module_number": 31070}, {"node_index": 277, "embedding": [-6.687633991241455, -16.174781799316406, 37.73221206665039, -0.8822049498558044, -7.451113224029541, -19.80105972290039], "text": "Wir hatten die in Vorlesung 26 angegeben, sind da jetzt aber nicht  in die Tiefe gegangen.", "type": "Satz", "module_number": 31070}, {"node_index": 278, "embedding": [-7.5295729637146, -19.94577407836914, 44.215782165527344, -0.4464663863182068, -6.739236831665039, -23.67414665222168], "text": "Jetzt haben wir aber das Quotientenkriterium.", "type": "Satz", "module_number": 31070}, {"node_index": 279, "embedding": [-9.74879264831543, -20.350082397460938, 55.42164993286133, -2.276360034942627, -11.724661827087402, -28.216650009155273], "text": "Koennen das also direkt  nachweisen, dass diese Reihe konvergiert sogar absolut konvergiert.", "type": "Satz", "module_number": 31070}, {"node_index": 280, "embedding": [-4.261800289154053, -11.360808372497559, 27.179973602294922, -2.063272476196289, -5.464860439300537, -14.223634719848633], "text": "Jetzt wissen wir ja auch,  was das bedeutet, dass sie absolut konvergiert und damit ist der Ausflug in die komplexen  Reihen auch schon erledigt und damit sind wir auch schon am Ende angekommen von der 41.", "type": "Satz", "module_number": 31070}, {"node_index": 281, "embedding": [-6.192864418029785, -4.9959845542907715, 30.162012100219727, -2.673792839050293, -12.588971138000488, -13.370058059692383], "text": "Vorlesung  und in Vorlesung 42 geht es dann weiter mit Potenz rein, quasi eine Art Fallgemeinerung von  Taylor reinbilden und da wollen wir ein bisschen Konvergenzanalyse betreiben und sie erinnern  sich im zweiten Video hatten wir bei dem Koji Produkt auch schon mal das Wort Potenzreihe und  darauf gehen wir dann eben in der naechsten Vorlesung naeher ein.", "type": "Satz", "module_number": 31070}, {"node_index": 282, "embedding": [-65.84900665283203, 102.02241516113281, 186.9935760498047, 7.479404449462891, -80.97602844238281, -34.90678787231445], "text": "  ", "type": "Satz", "module_number": 31070}, {"node_index": 283, "embedding": [-16.56828498840332, 20.420740127563477, 51.483734130859375, 3.419652223587036, -22.8936824798584, -10.958593368530273], "text": "Herzlich willkommen zum zweiten Teil der 43. Vorlesung im Kurs-Analysis 1 und  lineare Algebra fuer Ingenieurwissenschaften.", "type": "Satz", "module_number": 31070}, {"node_index": 284, "embedding": [-6.169775009155273, -9.62582015991211, 33.57307052612305, -0.014232583343982697, -7.883652687072754, -15.343951225280762], "text": "Wir hatten jetzt im ersten Video uns mit  linearen Differenzialgleichung erster Ordnung beschaeftigt und hatten am Anfang  auch erst mal grob geklaert, was eine Differenzialgleichung ueberhaupt ist.", "type": "Satz", "module_number": 31070}, {"node_index": 285, "embedding": [-65.65572357177734, 101.29754638671875, 186.9128875732422, 7.932842254638672, -79.33467864990234, -34.96512985229492], "text": " ", "type": "Satz", "module_number": 31070}, {"node_index": 286, "embedding": [-9.312786102294922, -1.7277435064315796, 42.25888442993164, -0.2471598982810974, -12.54638671875, -15.9080810546875], "text": "In diesem Video wollen wir uns Systeme linearer Differenzialgleichung erster  Ordnung anschauen.", "type": "Satz", "module_number": 31070}, {"node_index": 287, "embedding": [-3.049093008041382, -11.247467041015625, 22.109134674072266, -0.7793816924095154, -3.137907028198242, -11.710943222045898], "text": "Bevor wir uns die Resultate anschauen,  bleiben wir erst mal auf der E-Kreide und wir betrachten mal so ein System, weil  wir wissen ja gar nicht, wie sieht so was eigentlich aus.", "type": "Satz", "module_number": 31070}, {"node_index": 288, "embedding": [-66.39575958251953, 102.17153930664062, 188.9319305419922, 7.939918518066406, -80.066162109375, -35.457576751708984], "text": " ", "type": "Satz", "module_number": 31070}, {"node_index": 289, "embedding": [-9.328269004821777, 4.658603668212891, 35.04505920410156, -0.15265411138534546, -11.93133544921875, -11.315196990966797], "text": "Zwar also wir wollen jetzt Systeme von Differenzialgleichung erster Ordnung  betrachten und dann haben wir hier also eine Art Loesungs-Vektor Funktion.", "type": "Satz", "module_number": 31070}, {"node_index": 290, "embedding": [-5.936692714691162, -1.4917237758636475, 27.72357940673828, -2.120134115219116, -12.232915878295898, -10.95040512084961], "text": "Ich mache  jetzt immer den Pfeil darueber, dass wir wissen, dass es dann ein Vektor und  dann haben wir hier eine Matrix und hier den Vektor Y und A ist dann einfach eine  Matrix mit koffizienten A, I, J und ist natuerlich quadratisch.", "type": "Satz", "module_number": 31070}, {"node_index": 291, "embedding": [-9.663923263549805, -13.102726936340332, 50.34219741821289, -3.94034481048584, -15.32974624633789, -24.257097244262695], "text": "Das Ganze nenne ich jetzt hier mal  zwei Sternen.", "type": "Satz", "module_number": 31070}, {"node_index": 292, "embedding": [-10.457091331481934, -15.342549324035645, 53.307884216308594, -1.2223148345947266, -11.093559265136719, -26.00746726989746], "text": "So und was ist jetzt eine Loesung davon?", "type": "Satz", "module_number": 31070}, {"node_index": 293, "embedding": [-9.721222877502441, -7.214954853057861, 43.88408279418945, -3.204885482788086, -15.436620712280273, -20.018695831298828], "text": "Wenn wir das mal ausschreiben,  das ist also nichts anderes als eine Funktion, aber die bildet jetzt nicht nach k ab, sondern  nach k hoch n.", "type": "Satz", "module_number": 31070}, {"node_index": 294, "embedding": [-11.304981231689453, -22.775882720947266, 63.917476654052734, -3.550607681274414, -12.543667793273926, -33.01837158203125], "text": "Das heisst also hier erstmal", "type": "Satz", "module_number": 31070}, {"node_index": 295, "embedding": [-3.941235303878784, -7.386824131011963, 21.697561264038086, 1.1879613399505615, -4.541914939880371, -10.106697082519531], "text": "Definitionsbereich wieder", "type": "Satz", "module_number": 31070}, {"node_index": 296, "embedding": [-7.136479377746582, -6.2193403244018555, 33.60056686401367, 1.4963188171386719, -12.493535041809082, -14.279430389404297], "text": "R in den k hoch  n und die Eintraege", "type": "Satz", "module_number": 31070}, {"node_index": 297, "embedding": [-7.515994071960449, 1.192966103553772, 27.189674377441406, 2.027428388595581, -16.328227996826172, -9.516813278198242], "text": "die koennen wir dann ganz normal bezeichnen als Y1 von T bis Yn von T.", "type": "Satz", "module_number": 31070}, {"node_index": 298, "embedding": [-67.57657623291016, 104.93418884277344, 191.2566680908203, 8.293289184570312, -82.43533325195312, -35.428890228271484], "text": "  ", "type": "Satz", "module_number": 31070}, {"node_index": 299, "embedding": [-14.402724266052246, 14.024975776672363, 50.342708587646484, -4.429182052612305, -30.639057159423828, -15.274943351745605], "text": "So und wenn man das mal ausschreibt, was hier oben steht, das heisst also was hier steht,  dann haben wir hier also was stehen Y' von T, das ist jetzt ein Vektor, das sage ich nicht  immer dazu, Y1' von T, das geht dann so weiter bis Yn' von T und das ist dann einfach die  Matrix A mal dem Vektor Y, also die Funktion.", "type": "Satz", "module_number": 31070}, {"node_index": 300, "embedding": [-12.666303634643555, 12.38532829284668, 45.20875549316406, -5.64906120300293, -33.78761291503906, -14.17288875579834], "text": "So wenn wir das nochmal ausschreiben, dann haben wir hier  also die Matrix stehen, mal diesen Vektor, diese Vektor Funktion.", "type": "Satz", "module_number": 31070}, {"node_index": 301, "embedding": [-10.0115327835083, 11.497246742248535, 33.02490997314453, -4.621784687042236, -28.15966033935547, -9.67966365814209], "text": "Naja und wenn wir das  beziehen, machen wir das einmal dann, bekommen wir also folgenden Ausdruck, das ist dann A1  N Yn von T und das geht dann so weiter und hier unten haben wir dann stehen A1 N1 von T plus  und A N N Yn von T. So und das wollen wir jetzt loesen und wir koennen analog zu dem Fall aus dem  ersten Video auch einen Anfangswert vorgeben.", "type": "Satz", "module_number": 31070}, {"node_index": 302, "embedding": [-68.56719970703125, 107.74696350097656, 193.6574249267578, 7.5526123046875, -85.01456451416016, -35.53508377075195], "text": "  ", "type": "Satz", "module_number": 31070}, {"node_index": 303, "embedding": [-14.053869247436523, 21.137937545776367, 41.13551330566406, -2.2200541496276855, -30.346149444580078, -8.914491653442383], "text": "Wir erinnern uns nochmal und das waere jetzt hier also T0, das ist ja wieder, wenn wir noch mal auf den  Definitionsbereich schon, der ist gleich, das heisst das ist wirklich eine Zeit und dann bekommen wir jetzt  hier aber eben als Anfangswert der Funktion, was sich auf der Folie noch aus dem ersten Video", "type": "Satz", "module_number": 31070}, {"node_index": 304, "embedding": [-69.1880111694336, 109.98088073730469, 194.32553100585938, 7.994762420654297, -85.90493774414062, -34.93024444580078], "text": " ", "type": "Satz", "module_number": 31070}, {"node_index": 305, "embedding": [-11.330926895141602, 13.210894584655762, 35.143157958984375, 0.1258891224861145, -16.037933349609375, -8.702434539794922], "text": "sehen, bekommen wir dann hier also einen Vektor, deswegen auch hier ein Pfeil und wenn man das  hat diesen Anfangswert zur Anfangszeit, dann hat man ein Anfangswertproblem, also voellig analog.  ", "type": "Satz", "module_number": 31070}, {"node_index": 306, "embedding": [-8.877838134765625, 0.5409588813781738, 35.85770034790039, -2.3260676860809326, -16.76678466796875, -13.945026397705078], "text": "Gut, jetzt wollen wir mal ueberlegen, wie wir das loesen koennen, das heisst also  Loesung von dem System Stern-Stern.", "type": "Satz", "module_number": 31070}, {"node_index": 307, "embedding": [-8.029150009155273, -2.888896942138672, 36.22531509399414, -3.030489921569824, -17.74579620361328, -15.291311264038086], "text": "Ja, wir nehmen jetzt hier die Loesung, die wir spaeter sehen,  das gilt auch unabhaengig, ob A diagonalisierbar ist oder nicht, wir nehmen jetzt aber mal an und  wir zeigen das jetzt nur dafuer, dass A diagonalisierbar ist.", "type": "Satz", "module_number": 31070}, {"node_index": 308, "embedding": [-8.780920028686523, -13.09766674041748, 46.347930908203125, -2.867680549621582, -12.581511497497559, -22.729265213012695], "text": "Das ist gleich nochmal eine schoene Wiederholung.  ", "type": "Satz", "module_number": 31070}, {"node_index": 309, "embedding": [-5.855130195617676, -11.351751327514648, 31.6031551361084, -1.4897351264953613, -6.038568496704102, -15.848447799682617], "text": "Irgendwann habe ich hier falsch.", "type": "Satz", "module_number": 31070}, {"node_index": 310, "embedding": [-69.20588684082031, 106.90296173095703, 196.47645568847656, 8.182575225830078, -83.48149108886719, -36.694557189941406], "text": "  ", "type": "Satz", "module_number": 31070}, {"node_index": 311, "embedding": [-11.418205261230469, 8.479634284973145, 40.412174224853516, -0.7997786402702332, -19.316200256347656, -12.495800018310547], "text": "So, diagonalisierbar und was sieht das noch mal, das heisst wir hatten eine Darstellung von A durch  Produkte S", "type": "Satz", "module_number": 31070}, {"node_index": 312, "embedding": [-5.6121954917907715, -4.752557277679443, 27.706863403320312, -1.0366322994232178, -11.158170700073242, -12.000490188598633], "text": "dS hoch minus 1 mit invertierbarem S und einer Diagonalmatrix d, das schreibe ich gleich mal  so auf und da wussten wir ja, das waren dann die Eigenwerte.", "type": "Satz", "module_number": 31070}, {"node_index": 313, "embedding": [-10.77079963684082, -0.402370810508728, 47.01170349121094, -4.5552077293396, -24.60804557800293, -18.82635498046875], "text": "So, und wenn wir diese Darstellung mal  in die Differenzialgleichung einsetzen, das heisst die Differenzialgleichung, das ist  Differenzialgleichungssystem, Entschuldigung, sieht ja so aus und jetzt setzen wir also fuer das S,  fuer das A diese Darstellung hier ein.", "type": "Satz", "module_number": 31070}, {"node_index": 314, "embedding": [-10.168747901916504, -14.506372451782227, 56.26993942260742, -4.624547004699707, -22.905092239379883, -27.14928436279297], "text": "So, dann bekommen wir S dS hoch minus 1, y und wenn wir das  jetzt mal multiplizieren von links mit der Entferse von S, dann bekommen wir, ich lasse hier mal etwas Platz,  also quasi diese Gleichung von links mit S hoch minus 1, dann steht hier auf der rechten Seite noch  D S hoch minus 1, y und das hier, das koennen wir auch umschreiben, das koennen wir auch schreiben", "type": "Satz", "module_number": 31070}, {"node_index": 315, "embedding": [-69.41961669921875, 108.84819030761719, 196.1722412109375, 8.209436416625977, -84.70716857910156, -35.946014404296875], "text": " ", "type": "Satz", "module_number": 31070}, {"node_index": 316, "embedding": [-13.797908782958984, -12.499112129211426, 67.97977447509766, -4.236635684967041, -26.444080352783203, -31.042394638061523], "text": "als S hoch minus 1, y und leiten das Ganze ab.", "type": "Satz", "module_number": 31070}, {"node_index": 317, "embedding": [-3.8295888900756836, -7.735691547393799, 21.360212326049805, -0.5765541195869446, -7.087363243103027, -10.690374374389648], "text": "S ist ja was Konstantes, unabhaengig von T,  das hat also keinen Einfluss auf die Ableitung.", "type": "Satz", "module_number": 31070}, {"node_index": 318, "embedding": [-14.481766700744629, 1.1084121465682983, 58.995609283447266, -4.20798921585083, -30.45856285095215, -23.098499298095703], "text": "So, und die Idee ist jetzt, dass wir erstmal  substituieren und dass wir das jetzt z setzen, weil das steht hier und hier als Ableitung,  das heisst wir definieren uns jetzt mal den Wektor z, also die Funktion ist das ja S hoch minus 1,  y und wenn wir das jetzt hier oben einsetzen, wie gesagt, hier steht z, dann Ableitung und hier", "type": "Satz", "module_number": 31070}, {"node_index": 319, "embedding": [-70.28902435302734, 110.02056884765625, 198.84120178222656, 8.011734008789062, -86.0113525390625, -36.6313591003418], "text": " ", "type": "Satz", "module_number": 31070}, {"node_index": 320, "embedding": [-10.828872680664062, 11.308673858642578, 34.91495895385742, -0.6024293303489685, -14.675802230834961, -9.481199264526367], "text": "steht auch z, das heisst dann bekommen wir z gleich D z. Ja, wenn wir das mal ausschreiben,  was steht da eigentlich da, also diese Gleichung?", "type": "Satz", "module_number": 31070}, {"node_index": 321, "embedding": [-15.32353687286377, 0.14604590833187103, 64.67778015136719, -4.450339317321777, -28.313283920288086, -25.312524795532227], "text": "Da haben wir jetzt also Differenzialgleichung,  wir haben jetzt also Enddifferenzialgleichung der ersten Ordnung.", "type": "Satz", "module_number": 31070}, {"node_index": 322, "embedding": [-5.371373653411865, -9.228939056396484, 30.8413028717041, -3.8253064155578613, -8.804864883422852, -15.25164794921875], "text": "Schreibt mal noch die zweite  Zeile mit auf und dann geht das so weiter bis zur Endengleichung.", "type": "Satz", "module_number": 31070}, {"node_index": 323, "embedding": [-14.316929817199707, 4.758878707885742, 56.37152099609375, -3.8288769721984863, -28.44743537902832, -20.32884979248047], "text": "So, ja und das sind also jetzt  hier jeweils Differenzialgleichung erste Ordnung.", "type": "Satz", "module_number": 31070}, {"node_index": 324, "embedding": [-7.63302755355835, -17.427024841308594, 46.793182373046875, -4.1331706047058105, -10.093708038330078, -24.431612014770508], "text": "Ja und die koennen wir aber loesen, ja, das haben  wir schon gesehen, da zeigen wir nochmal kurz hier den Satz 1.", "type": "Satz", "module_number": 31070}, {"node_index": 325, "embedding": [-8.372272491455078, -11.402704238891602, 43.63178634643555, -3.9432992935180664, -10.865890502929688, -21.341785430908203], "text": "Ja, was bekommen wir da fuer  jede einzelne Gleichung?", "type": "Satz", "module_number": 31070}, {"node_index": 326, "embedding": [-8.130170822143555, -7.908064365386963, 40.934837341308594, -4.443001747131348, -15.733222961425781, -19.096357345581055], "text": "Bekommen wir also die Loesung jetzt naemlich immer konstant ein C1 bis Cn,  e hoch lambda 1 t, z2 von t, z2 e hoch lambda 2 von t und das geht dann so weiter und dann  bekommen wir hier zn t, cn e hoch lambda n von t.", "type": "Satz", "module_number": 31070}, {"node_index": 327, "embedding": [-10.532182693481445, 11.696904182434082, 35.84254837036133, -3.636505126953125, -29.164875030517578, -10.285489082336426], "text": "So, wenn wir das jetzt zusammenfassen, was heisst,  wir haben das System erst mal endkoppelt, haben dann die Resultate aus dem ersten Video  verwendet und fassen das dann ganz jetzt wieder zusammen.", "type": "Satz", "module_number": 31070}, {"node_index": 328, "embedding": [-13.896929740905762, 13.477331161499023, 48.439483642578125, -5.990243911743164, -37.74842834472656, -15.289548873901367], "text": "Das heisst also, wenn ich diesen Vector  jetzt hier habe, diese Vectorfunktion, dann habe ich hier also z von t, das sind dann also z1 von t,  zn von t, so, wenn wir das mal ausschreiben, da hatten wir jetzt die Loesung, also ich schreibe  das jetzt einfach nur hier ab, was hier steht, ja, das sind ja die Loesungen, die wir bekommen,", "type": "Satz", "module_number": 31070}, {"node_index": 329, "embedding": [-70.87757110595703, 112.1686019897461, 199.57447814941406, 8.007671356201172, -87.29678344726562, -36.19646072387695], "text": " ", "type": "Satz", "module_number": 31070}, {"node_index": 330, "embedding": [-9.403890609741211, 10.044498443603516, 31.059850692749023, 0.158161461353302, -12.014205932617188, -7.938697814941406], "text": "weil wir Satz 1 angewandt haben, dann haben wir hier also c1 e hoch lambda 1 t bis Cn e hoch lambda  n t.", "type": "Satz", "module_number": 31070}, {"node_index": 331, "embedding": [-14.011831283569336, 11.425271034240723, 51.917903900146484, -6.080437660217285, -36.004459381103516, -17.146989822387695], "text": "So, und das koennen wir nochmal umschreiben, und zwar indem wir das als Matrix-Vektorprodukt  schreiben, dann bekommen wir hier e hoch lambda 1 t, das ist quasi auf der Hauptdiagonalen,  e hoch lambda n t, alles andere, was hier steht, ist 0 und das wird multipliziert mit dem Vektor  mit den Eintraegen c1 bis cn.", "type": "Satz", "module_number": 31070}, {"node_index": 332, "embedding": [-6.349160194396973, -3.0550191402435303, 27.954418182373047, -2.2147161960601807, -13.806004524230957, -12.000812530517578], "text": "So, und jetzt muessen wir uns nochmal ganz kurz an die 34.", "type": "Satz", "module_number": 31070}, {"node_index": 333, "embedding": [-7.303808689117432, -13.074129104614258, 35.19137954711914, 1.0083000659942627, -8.075650215148926, -17.48761558532715], "text": "Vorlesung  aendern, das hatten wir ja da quasi definiert als e hoch td, da koennen Sie nochmal nachschauen,  das ist die Folie 34, das muesste die Folie 11 sein.", "type": "Satz", "module_number": 31070}, {"node_index": 334, "embedding": [-15.77743911743164, 4.04705286026001, 62.51996994018555, -6.343103408813477, -36.921302795410156, -24.060293197631836], "text": "So, das heisst also, wenn wir das jetzt mal  kurz schreibweise aufschreiben, steht dort also nichts anderes da als z ist gleich e hoch td und das  ganze hier, das nenne ich jetzt mal fuer den Moment den Vektor c und dann mache ich hier mal noch  ein Schlange darueber.", "type": "Satz", "module_number": 31070}, {"node_index": 335, "embedding": [-15.331724166870117, -0.9560340642929077, 65.22932434082031, -6.093507766723633, -35.93194580078125, -26.713817596435547], "text": "So, jetzt haben wir also diese Loesung und jetzt wissen wir aber, wir hatten  ja z wie folgt gesetzt, jetzt lasse ich das t hier mal weg, das war ja s hoch minus 1 y und wir wollen  ja immer noch im Endeffekt y haben, das heisst also y ist jetzt was, ist dann also umgestellt, das  ganze hier multipliziert von links mit s, ist dann also s z.", "type": "Satz", "module_number": 31070}, {"node_index": 336, "embedding": [-19.892988204956055, 13.882402420043945, 73.22567749023438, -8.254046440124512, -51.2122802734375, -25.44444465637207], "text": "Ja und jetzt setzen wir hier einfach mal fuer  das z die Darstellung ein, das ist ja sozusagen jetzt die Loesung, dann haben wir hier also e hoch td  und dann haben wir hier den Vektor c Schlange, so und jetzt ist die Idee, jetzt fuegen wir hier noch mal  einen s ein, also s und s hoch minus 1, das heisst also das koennen wir umschreiben, das heisst also hier", "type": "Satz", "module_number": 31070}, {"node_index": 337, "embedding": [-71.23514556884766, 113.07510375976562, 200.24102783203125, 8.196008682250977, -87.6657485961914, -36.106876373291016], "text": " ", "type": "Satz", "module_number": 31070}, {"node_index": 338, "embedding": [-10.067800521850586, 12.754685401916504, 30.95810890197754, 0.09879975765943527, -14.82600212097168, -7.125981330871582], "text": "sehen wir schon mal, das ist ja einfach nur die Identitaet, also die Einheitsmatrix Format n krollz n  und jetzt erinnern wir uns auch noch mal an die 34. Foliesung und da hatten wir gesehen, das was hier  steht, das ist nichts anderes als e hoch t a.", "type": "Satz", "module_number": 31070}, {"node_index": 339, "embedding": [-14.110879898071289, 10.03097915649414, 51.393463134765625, -5.54911994934082, -36.13185501098633, -17.572162628173828], "text": "Ja, das war sozusagen, das haben wir recht knapp behandelt,  da steht auch auf der Folie noch drauf, dass das bei differential gleich und dran kommt, dass wir also  das auch auf Funktionen anwenden koennen und damit das ganze schoen aussieht, bezeichnen wir das jetzt  hier mal mit c, so und dann haben wir also unsere Loesung bekommen, genau, das heisst die Ausgangsgleichung", "type": "Satz", "module_number": 31070}, {"node_index": 340, "embedding": [-71.62784576416016, 113.841552734375, 201.33827209472656, 8.248138427734375, -88.1164779663086, -36.237579345703125], "text": " ", "type": "Satz", "module_number": 31070}, {"node_index": 341, "embedding": [-11.210002899169922, 17.58653450012207, 32.81929397583008, -1.6414806842803955, -23.133909225463867, -6.690899848937988], "text": "haben wir wie geloest, wir haben also im Endeffekt die Diagonalisierung hier verwendet, haben das  ganze eingesetzt, hatten dann diese Differenzialgleichung hier bekommen, haben substituiert, also mit z durch diesen  Ausdruck und haben dann diese Gleichung hier separat geloest, die sind alle entkoppelt voneinander,", "type": "Satz", "module_number": 31070}, {"node_index": 342, "embedding": [-72.10265350341797, 115.23194885253906, 202.3955841064453, 8.308788299560547, -88.53898620605469, -36.1252555847168], "text": " ", "type": "Satz", "module_number": 31070}, {"node_index": 343, "embedding": [-17.76732063293457, 16.962831497192383, 60.89622116088867, -5.878140926361084, -42.78586959838867, -19.043540954589844], "text": "haben dadurch das Resultat aus Satz 1 angewandt, bekommen dann diese Loesung, dann fassen wir das  ganze wieder zusammen in Vektorschreibweise und haben das dann mit dieser Notation und mit dieser  Abkuerzung hier bekommen wir dann also eine Loesung dieser Form, haben dann wieder zurueck substituiert,  weil wir ja diese Substitutionen gewaehlt haben und haben dann am Ende also die Loesung y von t ist", "type": "Satz", "module_number": 31070}, {"node_index": 344, "embedding": [-72.54020690917969, 116.01118469238281, 203.37013244628906, 8.354244232177734, -89.36969757080078, -36.261531829833984], "text": " ", "type": "Satz", "module_number": 31070}, {"node_index": 345, "embedding": [-16.19136619567871, 14.313215255737305, 54.848262786865234, -3.7701330184936523, -32.83350372314453, -17.16935920715332], "text": "gleich e hoch t a Vektor c, so einfach geht das und wenn wir jetzt noch ein Anfangswert haben,  dann koennen wir die Loesung auch eindeutig bekommen.", "type": "Satz", "module_number": 31070}, {"node_index": 346, "embedding": [-17.391204833984375, 17.641767501831055, 60.05649948120117, -7.307812213897705, -47.378639221191406, -18.786937713623047], "text": " Ja, so gilt dann, also hier vielleicht noch dahin weiss, das ist jetzt eben keine Konstante,  sondern eine Konstante als Vektor, das heisst also ein Vektor der Laenge n und in jedem Eintrag  steht halt irgendwie eine Zahl c1, c2 und so weiter.", "type": "Satz", "module_number": 31070}, {"node_index": 347, "embedding": [-8.273120880126953, 4.579710483551025, 32.03623580932617, -3.8896234035491943, -22.265928268432617, -11.260781288146973], "text": "So und um die jetzt zu bestimmen, machen wir das  genauso wie wir das im ersten Video gemacht haben.", "type": "Satz", "module_number": 31070}, {"node_index": 348, "embedding": [-18.32754135131836, 18.604782104492188, 62.8199348449707, -7.69696569442749, -49.57570266723633, -19.72442054748535], "text": "So, dann setzen wir also in die Loesung t0 ein,  dann bekommen wir e hoch t0a mal den Vektor c und das koennen wir wieder umstellen und das bedeutet  dann, also Sie sehen auch, die Reihenfolge ist jetzt hier natuerlich wichtig, das ist jetzt keine  Konstante, die Sie da vorschreiben koennen, wir bekommen ja jetzt hier eine Matrix mit einem", "type": "Satz", "module_number": 31070}, {"node_index": 349, "embedding": [-5.512465000152588, -2.4109344482421875, 25.6303768157959, -2.8696298599243164, -11.636849403381348, -10.986027717590332], "text": " Vektor, deswegen koennen wir das nicht einfach vertauschen.", "type": "Satz", "module_number": 31070}, {"node_index": 350, "embedding": [-12.500303268432617, 0.190216526389122, 52.7955207824707, -5.085031032562256, -30.589540481567383, -21.284133911132812], "text": "Und hier bekommen wir jetzt fuer c e hoch  minus t0a, Vektor y0, das heisst also der Anfangswert.", "type": "Satz", "module_number": 31070}, {"node_index": 351, "embedding": [-4.111173152923584, -12.425809860229492, 30.455690383911133, -2.1918177604675293, -4.4535322189331055, -15.787595748901367], "text": "Sie sehen also, das klappt voellig analog.", "type": "Satz", "module_number": 31070}, {"node_index": 352, "embedding": [-72.26358795166016, 113.39280700683594, 204.7660369873047, 8.533594131469727, -87.01670837402344, -37.57291030883789], "text": " ", "type": "Satz", "module_number": 31070}, {"node_index": 353, "embedding": [-21.170822143554688, 3.978928804397583, 87.8747787475586, -8.40118408203125, -51.124183654785156, -34.24042892456055], "text": "So und wenn ich dann einsetze in die Loesung, das ist jetzt sozusagen einfach diese Loesung,  die wir eben bekommen haben, jetzt habe ich die Darstellung fuer das c und setze das ganze ein,  dann steht also da e hoch tA mal e hoch minus t0a y0, na ja und das ganze koennen wir wieder  zusammenfassen und bekommen dann hier t minus t0a Anfangswert y0 und das ist dann die eindeutige", "type": "Satz", "module_number": 31070}, {"node_index": 354, "embedding": [-73.0237808227539, 116.15814208984375, 205.3115234375, 8.513284683227539, -89.24199676513672, -36.891902923583984], "text": " ", "type": "Satz", "module_number": 31070}, {"node_index": 355, "embedding": [-73.16168975830078, 110.21339416503906, 209.82823181152344, 9.152820587158203, -87.3751220703125, -40.62727737426758], "text": "Loesung.", "type": "Satz", "module_number": 31070}, {"node_index": 356, "embedding": [-9.420703887939453, 14.568709373474121, 27.035913467407227, -0.37471717596054077, -17.35736846923828, -5.18282413482666], "text": "Ja und also ich schreibe das jetzt nicht nochmal auf, das ist sozusagen jetzt das Anfangswert  Problem und dass diese beiden Sachen, die wir jetzt hier gezeigt haben, die verallgemeinern jetzt also  die Setze 1 und 2 auf Systeme und das zusammengefasst, weil wir haben es jetzt auch schon bewiesen,  das sehen wir jetzt hier in Satz 3, das heisst also wenn wir eine beliebige Matrix,  quadratische Matrix A gegeben haben, dann betrachten wir die lineare Differenzialgleichung", "type": "Satz", "module_number": 31070}, {"node_index": 357, "embedding": [-73.92491912841797, 118.2541275024414, 207.39437866210938, 8.582090377807617, -90.74138641357422, -36.96091079711914], "text": " ", "type": "Satz", "module_number": 31070}, {"node_index": 358, "embedding": [-12.211366653442383, 23.10154151916504, 31.387060165405273, 1.5922269821166992, -20.325241088867188, -3.138662338256836], "text": "erste Ordnung", "type": "Satz", "module_number": 31070}, {"node_index": 359, "embedding": [-10.996438026428223, 2.3991897106170654, 42.651153564453125, -0.6454920172691345, -17.35647964477539, -14.87226676940918], "text": "und haben jetzt gesehen, die allgemeine Loesung sieht eben genau so aus und das ist eben  genau das, was wir hier auch wirklich dann bewiesen haben.", "type": "Satz", "module_number": 31070}, {"node_index": 360, "embedding": [-7.513448715209961, -5.94976282119751, 36.844120025634766, -3.1880292892456055, -11.892999649047852, -16.394128799438477], "text": "Ja und hier ist eben wie gesagt c  jetzt ein Wekte aus dem k hoch n und wichtig ist auch noch, dass die Loesungsmenge jetzt ein  n-Dimensionaler Wekteraum ist, das ergibt auch irgendwie Sinn, ich habe jetzt n-Gleichung, die  alle die erste Ordnung haben und im ersten Video hatten wir eine Gleichung der ersten Ordnung,", "type": "Satz", "module_number": 31070}, {"node_index": 361, "embedding": [-74.22663116455078, 116.6796875, 209.8711700439453, 8.411081314086914, -90.14445495605469, -38.49287796020508], "text": " ", "type": "Satz", "module_number": 31070}, {"node_index": 362, "embedding": [-9.619973182678223, 8.821727752685547, 30.925992965698242, 1.1661934852600098, -11.944988250732422, -8.383481979370117], "text": "da war der Raum 1-Dimensional, jetzt habe ich n-Gleichung n-Dimensional, das passt also.", "type": "Satz", "module_number": 31070}, {"node_index": 363, "embedding": [-74.62046813964844, 118.07293701171875, 210.05096435546875, 9.040706634521484, -90.2649154663086, -37.96464920043945], "text": " ", "type": "Satz", "module_number": 31070}, {"node_index": 364, "embedding": [-14.570611000061035, -4.241424560546875, 66.46142578125, -6.792994976043701, -27.572689056396484, -27.994855880737305], "text": "Ja und was wir am Ende gesehen haben mit dem Anfangswert, das Anfangswertproblem sieht  ja dann so aus, das heisst wir haben dieses Differenzialgleichungssystem und dann diesen  Anfangswert gegeben und da bekommt man dann eben die eindeutige Loesung und das ist exakt das,  was wir hier auch eben gezeigt haben.", "type": "Satz", "module_number": 31070}, {"node_index": 365, "embedding": [-5.312720775604248, -7.93820333480835, 28.784273147583008, -3.6035289764404297, -7.981323719024658, -14.103803634643555], "text": "Ja, damit wissen wir jetzt auch, wie wir Systeme loesen koennen  und vielleicht schauen wir uns jetzt nochmal ein Beispiel an.", "type": "Satz", "module_number": 31070}, {"node_index": 366, "embedding": [-8.377182006835938, -6.763090133666992, 40.92767333984375, -4.459451198577881, -16.427318572998047, -18.692659378051758], "text": "Ja, vielleicht eine Sache noch,  bevor wir das Beispiel anschauen, jetzt haben wir das jetzt hier gezeigt, dass a diagonalisierbar ist,  jetzt steht hier aber nicht dabei, dass a diagonalisierbar ist, deswegen noch als Zusatzbemerkung,  das funktioniert eben auch, wenn das a nicht diagonalisierbar ist und darauf gehen wir jetzt hier", "type": "Satz", "module_number": 31070}, {"node_index": 367, "embedding": [-74.94100189208984, 118.23546600341797, 211.52793884277344, 8.547039031982422, -91.22767639160156, -38.566650390625], "text": " ", "type": "Satz", "module_number": 31070}, {"node_index": 368, "embedding": [-12.124833106994629, 5.926724910736084, 45.68949890136719, -2.7955527305603027, -22.850509643554688, -15.95018196105957], "text": "nicht naeher ein, aber in diesem Fall nehmen Sie einfach diese Reihe hier und kann das sozusagen  dann verwenden, um das Ganze auszurechnen, wie gesagt, das machen wir jetzt hier nicht,  aber dass Sie halt wissen, dieses Resultat in Satz 3, das gilt also unabhaengig,  ob das a diagonalisierbar ist oder eben nicht.", "type": "Satz", "module_number": 31070}, {"node_index": 369, "embedding": [-7.768919467926025, -6.844339847564697, 37.5401496887207, -4.056102752685547, -12.775854110717773, -17.385677337646484], "text": "Gut, schauen wir uns mal ein Beispiel an,  von so einem System.", "type": "Satz", "module_number": 31070}, {"node_index": 370, "embedding": [-9.267380714416504, 1.7270232439041138, 36.99080276489258, -3.746603012084961, -20.588153839111328, -14.285506248474121], "text": "Ich hatte jetzt im ersten Video kein konkretes Beispiel gerechnet,  weil das System jetzt eigentlich spannender ist und das beinhaltet ja auch diesen Fall,  das heisst also hier betrachten wir jetzt folgende System,  einer koffizienten Matrix oder eine Matrix a und wir haben jetzt hier auch ein Anfangswertproblem,  da ich jetzt hier also an der Stelle zur Zeit T0 ist das eben y0 und jetzt nehmen wir mal konkrete", "type": "Satz", "module_number": 31070}, {"node_index": 371, "embedding": [-75.4098892211914, 119.78839111328125, 212.14707946777344, 8.670915603637695, -92.33529663085938, -38.263240814208984], "text": " ", "type": "Satz", "module_number": 31070}, {"node_index": 372, "embedding": [-11.296249389648438, 11.29749870300293, 38.1143913269043, -2.418843984603882, -24.89834976196289, -11.166709899902344], "text": "Werte fuer a nehmen wir 3, 2, 0, 5, offensichtlich 2 x 2 Matrix, als Startzeit nehmen wir mal 4,  was auch immer die Einheit jetzt hier ist und als Anfangswert, das ist ja dann nichts anderes als  y an der Stelle T0 gleich 4, dann nehmen wir mal den Vektor 6, 7.", "type": "Satz", "module_number": 31070}, {"node_index": 373, "embedding": [-6.852541446685791, 5.805845737457275, 22.837156295776367, -1.1481871604919434, -18.33141326904297, -6.963118076324463], "text": "So, wenn Sie so ein System haben,  dann brauchen wir das ganze Wissen aus den Kapiteln ja im Endeffekt 33 und 34 Eigenwerte  bestimmten Eigenvektoren natuerlich ueberpruefen, dass es diagonalisierbar ist und dann im Endeffekt  die Loesung so anzugeben, wie sie hier ist.", "type": "Satz", "module_number": 31070}, {"node_index": 374, "embedding": [-9.763113975524902, 7.8149285316467285, 34.37374496459961, -3.186631917953491, -26.742149353027344, -11.200881004333496], "text": "Machen wir das mal, also auch als eine Art kleine  Wiederholung Eigenwerte, das ist eine obere 3 x Matrix, die stehen hier also auf der Diagonalen,  da muessen wir nichts tun, also Lambda 1 ist 3 und Lambda 2 ist 5 und was wir auch wissen,  die Algebraische Vielfachheit ist jeweils 1 und die ist ja immer groesser gleich der geometrischen,", "type": "Satz", "module_number": 31070}, {"node_index": 375, "embedding": [-75.6083755493164, 120.69728088378906, 212.24847412109375, 8.814739227294922, -92.71504211425781, -37.958133697509766], "text": " ", "type": "Satz", "module_number": 31070}, {"node_index": 376, "embedding": [-13.91673469543457, 7.1430768966674805, 53.06635665893555, -4.226696968078613, -29.6806640625, -18.59788703918457], "text": "die geometrisches aber groesser gleich 1, also stimmen schon mal von allen Eigenwerten die Algebraische  und die geometrische Vielfachheit ueberein und ueber ein und diesen jeweils 1 und das heisst,  wir wissen also jetzt schon sofort, aha, diese Matrix ist also diagonalisierbar  und die Diagonalmatrix D, die koennen wir auch gleich angeben, da leg ich mich jetzt hier auf", "type": "Satz", "module_number": 31070}, {"node_index": 377, "embedding": [-75.84226989746094, 121.08973693847656, 212.8754119873047, 8.913431167602539, -92.6667709350586, -38.036338806152344], "text": "die", "type": "Satz", "module_number": 31070}, {"node_index": 378, "embedding": [-76.44086456298828, 122.77456665039062, 213.99136352539062, 9.247344970703125, -92.38150787353516, -37.77926254272461], "text": " ", "type": "Satz", "module_number": 31070}, {"node_index": 379, "embedding": [-12.607145309448242, 12.197447776794434, 43.83852005004883, -3.7780017852783203, -28.413711547851562, -13.227499008178711], "text": "Reihenfolge fest, ja, wir hatten ja schon gesehen, man kann das auch vertauschen, wir muessen dann immer  geeignet auch den invertierbaren Matrix S angeben, die besteht ja aus den Eigenvektoren,  so", "type": "Satz", "module_number": 31070}, {"node_index": 380, "embedding": [-9.757246971130371, 6.290050983428955, 35.814510345458984, -3.084110736846924, -25.301254272460938, -12.214030265808105], "text": "die schauen wir uns jetzt auch nochmal an, Eigenvektoren, das heisst also hier V3 zum  ersten ist dann also der Kern von A minus der Eigenwert, das ist 3, schauen wir uns nochmal", "type": "Satz", "module_number": 31070}, {"node_index": 381, "embedding": [-76.20918273925781, 121.84937286376953, 213.8301544189453, 9.021844863891602, -93.06002044677734, -38.112003326416016], "text": "die", "type": "Satz", "module_number": 31070}, {"node_index": 382, "embedding": [-15.477299690246582, 15.960620880126953, 52.6792106628418, -4.487375736236572, -37.99553680419922, -15.687114715576172], "text": " Matrix an, 3 2 0 5, wir ziehen also auf der Hauptdiagonal die 3 ab, heraus kommt dann 0 2 0 2,  so und wenn wir das jetzt in normierte Zeilenstufen Form bringen, also diese Matrix hier, wie gesagt,  weil das Wort Kern davor steht, ist das eine Gleichheit und deswegen kein Pfeil, dann sieht man,  also das kann man im Kopf machen, ja, also die Zeilen sind identisch, also faellt die Zeile weg,", "type": "Satz", "module_number": 31070}, {"node_index": 383, "embedding": [-76.65385437011719, 122.84970092773438, 214.86109924316406, 8.971176147460938, -93.78205871582031, -38.182029724121094], "text": " ", "type": "Satz", "module_number": 31070}, {"node_index": 384, "embedding": [-11.31737232208252, 5.819141864776611, 42.240901947021484, -2.9246249198913574, -24.039766311645508, -14.763994216918945], "text": "diese faellt weg, ist 0 0 und das einfach normieren, deswegen schreibe ich hier nur mal raus, wenn das jetzt  im Detail machen wollen, koennen Sie das gerne noch aufschreiben, so und den Spann davon, ja den kann  man jetzt einfach angeben, x2, also wenn ich jetzt hier wieder gedanklich x1, x2 habe, ist also x2", "type": "Satz", "module_number": 31070}, {"node_index": 385, "embedding": [-76.73472595214844, 122.98041534423828, 215.10060119628906, 9.053102493286133, -93.4325942993164, -38.206851959228516], "text": " ", "type": "Satz", "module_number": 31070}, {"node_index": 386, "embedding": [-16.42919921875, 8.710798263549805, 61.74312210083008, -4.581151962280273, -39.833587646484375, -21.865934371948242], "text": "gleich 0 und x1, da steht als koffizient 0, also ist x1 beliebig, das heisst wir nehmen uns hier  ganz einfach 1 0, ja Sie sehen das Beispiel ist relativ einfach, schauen wir uns noch den Eigenraum  zum Eigenwert lambda 2 gleich 5 an, dann ziehen wir also auf der Hauptdiagonalen eine 5 ab  und dann bekommen wir diese Matrix, das passt hier noch hin, auch hier wieder Gauss,", "type": "Satz", "module_number": 31070}, {"node_index": 387, "embedding": [-76.9990234375, 123.50665283203125, 215.7003631591797, 9.143646240234375, -93.91226196289062, -38.241146087646484], "text": " ", "type": "Satz", "module_number": 31070}, {"node_index": 388, "embedding": [-13.823891639709473, 9.556070327758789, 51.252159118652344, -4.301067352294922, -33.71503829956055, -17.22562599182129], "text": "ich meine hier steht schon alles da, ja Sie muessen nur noch das normieren, also teilen Sie die  Gleichung jetzt hier, also einfach nur durch oder multiplizieren die Gleichung mal minus 1,5 und  dann steht hier 1 und hier minus 1 da und der Spann ist dann hier offensichtlich, da koennen wir  einfach den Vektor 1 1 nehmen, Sie koennen aber auch jedes Vielfachen nehmen, es bietet sich immer an", "type": "Satz", "module_number": 31070}, {"node_index": 389, "embedding": [-77.25469970703125, 124.23268127441406, 216.29019165039062, 9.11747932434082, -94.3666000366211, -38.21260452270508], "text": " ", "type": "Satz", "module_number": 31070}, {"node_index": 390, "embedding": [-8.481338500976562, 4.389328956604004, 30.588695526123047, -0.3661789298057556, -15.538542747497559, -10.106365203857422], "text": "das Einfachste zu waehlen, weil wir noch die Inverse von S berechen, ein S besteht jetzt aus den  Spalten", "type": "Satz", "module_number": 31070}, {"node_index": 391, "embedding": [-7.554376602172852, 6.877875328063965, 24.30564308166504, -1.2990539073944092, -18.5718936920166, -7.244974136352539], "text": ", ich nehme halt jeweils die Eigenvektoren, die linear unabhaengigen, die habe ich eben nur  einen, ich koennte hier aber auch 5 0 nehmen und hier irgendwie, weiss ich nicht, 3 3 nehmen, aber dann  wird halt eventuell die Inverse komplizierter fuer S, deswegen koennen wir das Einfachste waehlen,", "type": "Satz", "module_number": 31070}, {"node_index": 392, "embedding": [-18.69843101501465, 16.758838653564453, 65.83207702636719, -7.436087131500244, -49.66887664794922, -21.38520050048828], "text": " das heisst also hier die beiden Spalten, das ist jetzt unsere Matrix S, wie gesagt was ich jetzt  hier mache, das ist einfach nur eine Wiederholung und jetzt werden wir aber sehen die Inverse zu  bestimmen, dieser ganz einfach von S, wie war das nochmal, wir schreiben die Matrix hin und daneben  schreiben wir die Einheitsmatrix und jetzt muessen wir einfach nur diese Matrix in Einheitsmatrix", "type": "Satz", "module_number": 31070}, {"node_index": 393, "embedding": [-77.6981430053711, 124.89013671875, 217.5657501220703, 9.046314239501953, -95.16471099853516, -38.50712203979492], "text": " ", "type": "Satz", "module_number": 31070}, {"node_index": 394, "embedding": [-11.674361228942871, 10.939706802368164, 39.1550178527832, -2.6435933113098145, -25.16921615600586, -11.847352027893066], "text": "bringen, naja aber hier muessen wir nur noch diese 1 eliminieren, das heisst also hier steht jetzt da  1 minus 2 und dann sind wir auch schon fertig, das ist dann also nichts anderes als,  das nochmal so aufschreiben", "type": "Satz", "module_number": 31070}, {"node_index": 395, "embedding": [-8.076534271240234, 9.385079383850098, 25.167268753051758, -2.0386435985565186, -21.866008758544922, -6.8805012702941895], "text": ", da steht i2 und das ist die Inverse, das heisst also hier hat man  wirklich nur einen Geauschritt anwenden muessen, gut und das heisst jetzt bekommen wir also diese", "type": "Satz", "module_number": 31070}, {"node_index": 396, "embedding": [-78.01604461669922, 125.07856750488281, 218.76657104492188, 9.088491439819336, -95.61067962646484, -38.8884162902832], "text": " ", "type": "Satz", "module_number": 31070}, {"node_index": 397, "embedding": [-78.00939178466797, 125.75318145751953, 218.1758270263672, 9.398588180541992, -94.30731201171875, -38.32204055786133], "text": "Zerlegung", "type": "Satz", "module_number": 31070}, {"node_index": 398, "embedding": [-9.225305557250977, -7.207150459289551, 43.63603973388672, -1.4423859119415283, -16.65517807006836, -19.25602149963379], "text": "und haben dann auch SD und SO minus 1 bestimmt", "type": "Satz", "module_number": 31070}, {"node_index": 399, "embedding": [-11.947525024414062, 9.293375015258789, 42.54403305053711, -4.5147247314453125, -31.79757308959961, -14.188253402709961], "text": ", so das war jetzt die Wiederholung,  jetzt wollen wir aber nochmal zum Ausgangsproblem, wir wollen ja jetzt hier Y bestimmen, den Vektor,  das sozusagen Funktion ist, also von R nach K hoch N oder jetzt hier in diesem Fall R hoch N,  das heisst also jetzt wollen wir also das Ganze hier berechnen, so ich zeige Ihnen mal zwei Moeglichkeiten,", "type": "Satz", "module_number": 31070}, {"node_index": 400, "embedding": [-78.3596420288086, 126.08950805664062, 219.379638671875, 9.132171630859375, -95.88751983642578, -38.768436431884766], "text": " ", "type": "Satz", "module_number": 31070}, {"node_index": 401, "embedding": [-18.33272361755371, 16.604543685913086, 63.641014099121094, -5.791223526000977, -44.18004608154297, -20.207176208496094], "text": "die erste Moeglichkeit ist dann ein bisschen streng, so wie wir das vorhin gemacht haben,  das heisst also hier schreibe ich mal dazu direkt mit, ja wir kennen ja die Loesung,  das einfach ausrechnen, das ist dann E hoch TA und hier kommt der Vektor C, wir schauen uns erst  mal die Differenz-Ergleichung an und dann das Anfangswertproblem, ja und wenn wir das jetzt mal", "type": "Satz", "module_number": 31070}, {"node_index": 402, "embedding": [-78.45733642578125, 126.19398498535156, 219.7195281982422, 9.192108154296875, -95.6946029663086, -38.83811950683594], "text": " ", "type": "Satz", "module_number": 31070}, {"node_index": 403, "embedding": [-21.938793182373047, 17.185932159423828, 78.89404296875, -8.486682891845703, -54.4566650390625, -26.598960876464844], "text": "aufschreiben, dann haben wir hier also Y von T ist jetzt also E hoch TA Vektor C, das ist jetzt  also nichts anderes als Satz 3, einfach das aufschreiben, so jetzt kommt der komplizierte  Teil, jetzt muessen wir mal ausrechnen, das Ganze koennen wir jetzt schreiben als S und dann kommt  hier E hoch", "type": "Satz", "module_number": 31070}, {"node_index": 404, "embedding": [-8.386812210083008, 13.944403648376465, 21.610239028930664, 1.6136984825134277, -23.201343536376953, -2.950559377670288], "text": "TD", "type": "Satz", "module_number": 31070}, {"node_index": 405, "embedding": [-9.623988151550293, 10.75528335571289, 25.202533721923828, 7.620543003082275, -23.582263946533203, -4.05723762512207], "text": "die Diagonalmatrix und die kann ich ja gleich so schreiben E hoch 3T 0 0 E hoch 5T,", "type": "Satz", "module_number": 31070}, {"node_index": 406, "embedding": [-78.9635238647461, 126.36759948730469, 220.94454956054688, 10.302726745605469, -96.36384582519531, -39.00181579589844], "text": " ", "type": "Satz", "module_number": 31070}, {"node_index": 407, "embedding": [-15.405701637268066, 14.964751243591309, 52.30250930786133, -4.5702433586120605, -38.151390075683594, -16.10944175720215], "text": "ja S hoch minus 1 mal den Vektor C und C dann sag ich gleich mal damit keine Missverstaendnisse  aufkommen ist jetzt C1 und C2, so und jetzt muessen wir einsetzen,", "type": "Satz", "module_number": 31070}, {"node_index": 408, "embedding": [-15.840779304504395, 15.227694511413574, 53.39851760864258, -4.675252914428711, -43.061180114746094, -16.622739791870117], "text": "S war 1 1 0 1, dann haben wir die  Matrixen da Mitte, die bleibt stehen und die Inverse, die sehen wir da oben noch 1 minus 1 0 1  und das C schreibe ich jetzt mal aus C1 C2, gut multiplizieren wir einfach mal die ersten beiden", "type": "Satz", "module_number": 31070}, {"node_index": 409, "embedding": [-15.97763729095459, 17.67655372619629, 51.843257904052734, -4.719701766967773, -44.520748138427734, -15.251051902770996], "text": " Matrixen, dann bekommen wir hier also E hoch 3T, da drunter bekommen wir eine 0, da bekommen wir  E hoch 5T und hier unten auch, okay das war einfach und das multiplizieren wir jetzt noch mit 1 minus 1 0 1  und dann haben wir hier noch C1 C2, so jetzt muessen wir also noch diese beiden  Matrixen multiplizieren, dann sehen wir also hier bekommen wir E hoch 3T, da drunter schoen,", "type": "Satz", "module_number": 31070}, {"node_index": 410, "embedding": [-78.84461212158203, 127.10661315917969, 220.49916076660156, 9.348529815673828, -96.24107360839844, -38.796688079833984], "text": " ", "type": "Satz", "module_number": 31070}, {"node_index": 411, "embedding": [-16.855018615722656, 10.890989303588867, 61.78799819946289, -5.152004718780518, -42.20473098754883, -21.288532257080078], "text": "da kommt wieder 0 heraus, jetzt wird es ein bisschen komplizierter, jetzt haben wir hier also minus E  hoch 3T plus E hoch 5T und hier unten kommt dann einfach E hoch 5T, C1 C2, ja und jetzt muessen wir  noch ausmultipizieren, ja was bekommen wir jetzt hier, wenn wir das gleich zusammenfassen,  also wir multiplizieren jetzt das mit diesem, dann haben wir hier also C1 vor diesem, C2 vor", "type": "Satz", "module_number": 31070}, {"node_index": 412, "embedding": [-78.96256256103516, 127.25452423095703, 220.9375762939453, 9.376651763916016, -96.21505737304688, -38.897457122802734], "text": " ", "type": "Satz", "module_number": 31070}, {"node_index": 413, "embedding": [-10.123915672302246, 13.622581481933594, 30.325902938842773, -1.3120131492614746, -23.835063934326172, -7.1915130615234375], "text": "diesem und auch C2 vor diesem, also koennen wir das gleich hier zusammenfassen, C1 minus C2 E  hoch minus 3T plus C2 E hoch 5T und hier C2 E hoch 5T, ja und das ist dann die Loesung,  der Differenzialgleichung bzw.", "type": "Satz", "module_number": 31070}, {"node_index": 414, "embedding": [-14.404245376586914, 7.918262958526611, 54.73061752319336, -6.391849994659424, -36.622474670410156, -19.676002502441406], "text": "das Differenzialgleichungssystems,  gut und jetzt schauen wir uns noch an den Anfangswert, also jetzt haben wir quasi das jetzt hier einfach  angewandt und mit dem Anfangswert, da haben wir jetzt hier, ich wiederhole das noch mal von oben,  das hatten wir angegeben und im Endeffekt, wie hatten wir das C dann eigentlich bestimmt,", "type": "Satz", "module_number": 31070}, {"node_index": 415, "embedding": [-79.2469711303711, 127.48560333251953, 221.96670532226562, 9.287841796875, -96.5754623413086, -39.229000091552734], "text": " ", "type": "Satz", "module_number": 31070}, {"node_index": 416, "embedding": [-20.399221420288086, 3.5563604831695557, 83.52727508544922, -8.120054244995117, -48.392860412597656, -32.795467376708984], "text": "also hier sehen wir ja nochmal, das ist jetzt also diese Loesung ja und die koennen wir auch direkt  einfach so angeben, das heisst also hier bekommen wir dann y von T und das ist jetzt E hoch T minus  fuer T0 setze ich schon mal oder ich schreibe hier mal T0 hin, y0, so was wir jetzt gesehen haben,  das hier oben, das ist ja eigentlich jetzt einfach nur unser E hoch T A und jetzt sehen wir also,", "type": "Satz", "module_number": 31070}, {"node_index": 417, "embedding": [-79.41865539550781, 127.72189331054688, 222.53321838378906, 9.315385818481445, -96.70426177978516, -39.357608795166016], "text": " ", "type": "Satz", "module_number": 31070}, {"node_index": 418, "embedding": [-13.04557991027832, 0.14404629170894623, 53.944801330566406, -3.2932705879211426, -29.993179321289062, -21.251548767089844], "text": "wir brauchen jetzt hier E hoch T minus T0, T0 ist jetzt aber 4 und wenn wir jetzt einsetzen und diese  Darstellung von oben verwenden, dann koennen wir das einfach direkt abschreiben, das ist dann 3 mal,  T ersetzen wir durch T minus T0 beziehungsweise, weil T04 ist durch T minus 4, Entschuldigung,  so minus E hoch 3T minus 4, ich glaube mal es ist ein bisschen lang, plus E hoch 5T minus 4,", "type": "Satz", "module_number": 31070}, {"node_index": 419, "embedding": [-79.4645767211914, 127.95533752441406, 222.41873168945312, 9.532608032226562, -96.57316589355469, -39.18284225463867], "text": " ", "type": "Satz", "module_number": 31070}, {"node_index": 420, "embedding": [-16.702533721923828, -4.838191986083984, 74.52604675292969, -5.80509090423584, -38.27299118041992, -31.532846450805664], "text": "dann hatten wir hier die 0 und das ist dann hier E hoch 5T minus 4 und das multiplizieren wir jetzt mit dem  Anfangswert y0 und das habe ich jetzt hier als Beispiel 6 7 angegeben,", "type": "Satz", "module_number": 31070}, {"node_index": 421, "embedding": [-12.62717056274414, 1.5347498655319214, 51.698307037353516, -3.945894241333008, -32.971275329589844, -20.197195053100586], "text": "wenn wir das jetzt aus  multiplizieren, dann fassen wir gleich auch zusammen T minus 4 plus 7 E hoch 5T minus 4 und hier unten 7 E", "type": "Satz", "module_number": 31070}, {"node_index": 422, "embedding": [-79.65324401855469, 128.36874389648438, 222.8627166748047, 9.537775039672852, -96.89306640625, -39.214630126953125], "text": " ", "type": "Satz", "module_number": 31070}, {"node_index": 423, "embedding": [-21.150495529174805, 21.441272735595703, 70.99568176269531, -6.204103469848633, -53.398223876953125, -21.728849411010742], "text": "hoch 5T minus 4, einfach nur Matrix, Vektor und Multiplikation und das ist jetzt also die eindeutige  Loesung des Anfangswertproblems und zwar y' gleich a y und hier mit Anfangswert y0  gleich y an der Stelle 4, Zeiteinheit und das ist einfach der Vektor 6 7, ja gut, wir koennen einfach mal  schauen, also erst mal ist ja ist natuerlich nicht klar ist das jetzt wirklich eine Loesung, haben wir uns", "type": "Satz", "module_number": 31070}, {"node_index": 424, "embedding": [-80.0177993774414, 129.1742401123047, 223.7744598388672, 9.462797164916992, -97.56758117675781, -39.31465530395508], "text": " ", "type": "Satz", "module_number": 31070}, {"node_index": 425, "embedding": [-10.373467445373535, 17.629173278808594, 27.07756233215332, -0.42569059133529663, -20.552383422851562, -4.431832313537598], "text": "irgendwo verrechnet, wir koennen einfach mal die Probe machen, machen wir mal die Probe, so wenn  wir jetzt y haben, also wir haben quasi jetzt das hier kommen wir ja, das ist jetzt in so y und  dann schauen wir uns mal die Ableitung an und wie sieht die Ableitung jetzt aus, das ist jetzt noch nicht  die Ableitung, wir machen es mal ganz korrekt, also die Ableitung waere jetzt, wir leiten das ab und", "type": "Satz", "module_number": 31070}, {"node_index": 426, "embedding": [-20.616199493408203, 14.835929870605469, 73.80882263183594, -6.57043981552124, -55.504600524902344, -25.203279495239258], "text": " wir leiten das ab, so, wenn wir das machen, dann sehen wir steht hier also minus 3, also die Ableitung,  ja das ist ja linear, wir leiten also das ab und wir leiten das ab, das ist eine Konstante,  die minus 1 ist eine Konstante, das bleibt wieder stehen, die innere Ableitung, da steht also hier  so ein Ausdruck 3t, also nach t abgeleitet, kommt also 3 heraus, 3e hoch, 3t minus 4 plus 35,", "type": "Satz", "module_number": 31070}, {"node_index": 427, "embedding": [-9.200553894042969, 3.705207109451294, 34.24089431762695, 0.1246524378657341, -13.34326171875, -11.72761344909668], "text": "weil", "type": "Satz", "module_number": 31070}, {"node_index": 428, "embedding": [-15.557896614074707, 16.038127899169922, 51.0744743347168, -3.85829496383667, -42.66497039794922, -15.348407745361328], "text": " innere Ableitung ist 5 mal 7, e hoch 5t minus 4 und hier unten kommt auch innere Ableitung 5,  also 5 mal 7 ist 35, e hoch 5t minus 4, okay, das ist die Ableitung und jetzt schauen wir uns an,  was macht jetzt A y von t, die Matrix schreiben wir nochmal auf, 2 0 5, so das ist jetzt also die  Loesung, das muessen wir ausmultipizieren und da waere es jetzt sehr schoen,", "type": "Satz", "module_number": 31070}, {"node_index": 429, "embedding": [-10.393024444580078, -6.275997638702393, 46.927574157714844, 0.06750684231519699, -12.301596641540527, -20.018390655517578], "text": "wenn dann tatsaechlich das", "type": "Satz", "module_number": 31070}, {"node_index": 430, "embedding": [-79.92902374267578, 128.50335693359375, 224.00059509277344, 9.689859390258789, -96.42281341552734, -39.548702239990234], "text": " ", "type": "Satz", "module_number": 31070}, {"node_index": 431, "embedding": [-24.115678787231445, 28.289642333984375, 77.72817993164062, -7.145036697387695, -63.720680236816406, -22.36884307861328], "text": "gleiche herauskommt, ja das ist jetzt also hier, das ist jetzt ein Vektor, das ist ein Vektor, der  erste Eintrag ist dieser Eintrag und das ist der zweite hier, so jetzt muessen wir mal schauen,  ja wir muessen ausmultipizieren, da bleibt uns nichts anderes uebrig, minus 3e hoch 3t minus 4 plus  dann haben wir hier 7 mal 3e hoch 5t minus 4 plus, also das heisst sozusagen dieser Ausdruck ist das", "type": "Satz", "module_number": 31070}, {"node_index": 432, "embedding": [-80.35911560058594, 129.80377197265625, 224.66603088378906, 9.52008056640625, -97.91481018066406, -39.42880630493164], "text": " ", "type": "Satz", "module_number": 31070}, {"node_index": 433, "embedding": [-19.555143356323242, 24.598594665527344, 60.79948806762695, -5.107578277587891, -53.2501106262207, -16.571048736572266], "text": "mit 3, dieser Ausdruck ist jetzt also dieses mit diesem, Entschuldigung, dieses mit diesem und  jetzt kommt eben noch das, muss ich noch multiplizieren mit der 2, 7 mal 2e hoch 5t minus 4 und dann noch  quasi diesen Vektor mit diesem, die erste Komponente ist 0, also nur noch 5 mal diesem, da schreibe ich", "type": "Satz", "module_number": 31070}, {"node_index": 434, "embedding": [-80.49281311035156, 130.25848388671875, 224.8285675048828, 9.599056243896484, -98.0843734741211, -39.31908416748047], "text": " ", "type": "Satz", "module_number": 31070}, {"node_index": 435, "embedding": [-8.048469543457031, 5.595378875732422, 27.166688919067383, 0.08477573841810226, -9.994926452636719, -8.250353813171387], "text": "gleich mal 35 hin, ja es sieht ganz gut aus, ja, also hier sehen wir natuerlich, hier ist die 3 und hier  ist die 2, das ganze", "type": "Satz", "module_number": 31070}, {"node_index": 436, "embedding": [-9.060321807861328, 4.951323986053467, 31.644819259643555, -1.5316784381866455, -21.62669563293457, -10.889824867248535], "text": "zusammen ist also nichts anderes als 7 mal 5 und das ist 35, also wir sehen,  das stimmt, e hoch 3t minus 4 plus 35e hoch 5t minus 4 und dann 35e hoch 5t minus 4,  gut war jetzt ein bisschen kompliziert auszurechnen, aber jetzt sehen wir also die beiden sind jetzt", "type": "Satz", "module_number": 31070}, {"node_index": 437, "embedding": [-80.69376373291016, 130.1419219970703, 225.69192504882812, 9.638946533203125, -98.21566772460938, -39.67966079711914], "text": " ", "type": "Satz", "module_number": 31070}, {"node_index": 438, "embedding": [-10.022705078125, 14.408910751342773, 29.484037399291992, -1.5638720989227295, -23.204736709594727, -6.629516124725342], "text": "also identisch und das bedeutet natuerlich dann, dass wir uns also nicht verrechnet haben, das heisst die  Differenz der Allgleichung ist erfuellt, weil wir jetzt noch den Anfangswert ueberpruefen wollen,  dann koennen wir einfach mal hier 4 einsetzen, das heisst also die Zeiteinheit 4, also wenn ich jetzt  hier 4 einsetze, dann steht hier da 0, also wir koennen es ja einfach mal machen, das gehoert auch", "type": "Satz", "module_number": 31070}, {"node_index": 439, "embedding": [-80.90743255615234, 131.00711059570312, 226.000244140625, 9.609903335571289, -98.55531311035156, -39.50029373168945], "text": " ", "type": "Satz", "module_number": 31070}, {"node_index": 440, "embedding": [-16.054166793823242, 15.067878723144531, 54.203739166259766, -4.438127040863037, -39.58264923095703, -16.884023666381836], "text": "noch zur Probe dazu, also ebenso, das heisst also was haben wir jetzt hier, gilt dann,  ich schreibe das nochmal kurz ordentlich auf, das heisst also hier steht y 0 gleich y von 4,  nehmen wir das hier mal und ersetzen hier also ueberall das T durch die 4,  das sieht ja ganz gut aus, was soll eigentlich herauskommen, ihr soll 6 7 herauskommen,", "type": "Satz", "module_number": 31070}, {"node_index": 441, "embedding": [-81.07906341552734, 131.2857666015625, 226.4752197265625, 9.594633102416992, -98.86225128173828, -39.59811782836914], "text": " ", "type": "Satz", "module_number": 31070}, {"node_index": 442, "embedding": [-9.788788795471191, 15.423337936401367, 25.947345733642578, 0.15641647577285767, -18.48183250427246, -4.629997730255127], "text": "dann sehen wir natuerlich, dass es 1, das ist 1, dann steht hier also minus 1 plus 7  und hier unten, das ist dann eben auch 1, also steht da 7 und so hier da, da kommt dann auch 6 7  heraus, das war ja hier eben unser Anfangswert, gut, jetzt ist das Video schon so lang und jetzt  wollte ich noch eine zweite Moeglichkeit praesentieren, aber keine Sorge, die ist wesentlich", "type": "Satz", "module_number": 31070}, {"node_index": 443, "embedding": [-81.57434844970703, 132.08790588378906, 227.67333984375, 9.702980041503906, -99.63685607910156, -39.7907829284668], "text": " ", "type": "Satz", "module_number": 31070}, {"node_index": 444, "embedding": [-7.373281478881836, 6.098629474639893, 24.25297737121582, 0.5831320881843567, -9.041104316711426, -6.724842548370361], "text": "kuerzer, die ist aber im Skript glaube ich nicht wirklich so richtig erklaert und zwar, also wir  haben jetzt auch viel Zeit verbraucht", "type": "Satz", "module_number": 31070}, {"node_index": 445, "embedding": [-7.536006450653076, 1.503357172012329, 29.120288848876953, -1.6559834480285645, -15.462940216064453, -10.832310676574707], "text": "fuer die Probe, wenn wir aber eine zweite Moeglichkeit,  also einen kuerzeren Weg angeben wollen, dann ist die Idee, dass wir den Anfangswert y 0 als  Linearkombination der Eigenwecktoren von A darstellen, ich meine das basiert natuerlich auf dem,", "type": "Satz", "module_number": 31070}, {"node_index": 446, "embedding": [-81.36080169677734, 130.91188049316406, 227.9722442626953, 9.646455764770508, -98.7214126586914, -40.2695426940918], "text": " ", "type": "Satz", "module_number": 31070}, {"node_index": 447, "embedding": [-9.195600509643555, 14.46268081665039, 25.262557983398438, -0.4936928153038025, -19.538780212402344, -4.751583576202393], "text": "was wir hier gemacht haben, aber das geht halt doch schneller, also der Eigenwecktoren von A dar,  machen wir das mal, also der Anfangswert, den sehen wir jetzt hier noch bei unserer Probe,  ist 6 7, so den moechte ich jetzt darstellen, schreibe es nochmal auf 6 7 als Linearkombination der  Eigenwecktoren von A, so der erste Eigenwecktor, also aus dem Spann hatten wir 1 0 genommen und der", "type": "Satz", "module_number": 31070}, {"node_index": 448, "embedding": [-81.59666442871094, 132.1912078857422, 227.84889221191406, 9.774293899536133, -99.31417846679688, -39.769222259521484], "text": " ", "type": "Satz", "module_number": 31070}, {"node_index": 449, "embedding": [-11.603507995605469, 5.610517978668213, 42.979888916015625, -2.4222564697265625, -26.26028823852539, -15.083380699157715], "text": "zweite war 1 1, so dann sehen wir, also ich denke die Loesung ist relativ klar, ja dadurch,  dass die Komponentin 0 ist, muss Alpha 2 7 sein und dann ist automatisch Alpha 1 minus 1, so  das heisst also das ist die Loesung, so jetzt koennen wir die Gesamtloesung angeben, also ich  gehe mal ganz kurz nach oben, also was wir gebraucht haben, war natuerlich diese Vorbetrachtung hier,", "type": "Satz", "module_number": 31070}, {"node_index": 450, "embedding": [-81.64998626708984, 131.90980529785156, 228.3000030517578, 9.767183303833008, -99.15826416015625, -40.03824996948242], "text": " ", "type": "Satz", "module_number": 31070}, {"node_index": 451, "embedding": [-13.074117660522461, -5.589240074157715, 57.83256912231445, -2.9724974632263184, -25.97098159790039, -24.7679386138916], "text": "ja die Eigenraeume und S hoch minus 1, obwohl S hoch minus 1 wir jetzt hier nicht benoetigen,  also eigentlich quasi ab hier und S hoch minus 1 brauchen wir nicht, dann kam die erste Moeglichkeit,  die ignorieren wir mal fuer den Moment, die Probe auch und jetzt sind wir bei der zweiten und jetzt ist  die Idee wie folgt, wir koennen die Loesung so angeben, ja und zwar nutzen wir jetzt als erstes,", "type": "Satz", "module_number": 31070}, {"node_index": 452, "embedding": [-81.77606964111328, 131.8818359375, 228.8574676513672, 9.764017105102539, -99.22704315185547, -40.256832122802734], "text": " ", "type": "Satz", "module_number": 31070}, {"node_index": 453, "embedding": [-21.759178161621094, 24.536046981811523, 70.99462890625, -6.583234786987305, -58.222591400146484, -20.846418380737305], "text": "ich schreibe das mal direkt auf, minus 1 mal e hoch 3t minus 4 der Vektor 1 0, also sozusagen so kann  man die Loesung eben ganz einfach angeben, ich erklaere das gleich ausfuehrlich, 1 1, so ich  behaupte das ist die Loesung, so jetzt sehen wir also die minus 1, die steht hier zugehoerig dann  auch, dass der Vektor hier stimmt, ja das heisst also hier das steht dann hier, so voellig analog", "type": "Satz", "module_number": 31070}, {"node_index": 454, "embedding": [-81.96154022216797, 132.87794494628906, 228.88311767578125, 9.754058837890625, -99.77916717529297, -39.93091583251953], "text": " ", "type": "Satz", "module_number": 31070}, {"node_index": 455, "embedding": [-11.017502784729004, 11.048154830932617, 36.4619026184082, -2.2386391162872314, -25.543827056884766, -10.686861038208008], "text": "sehen wir also oder ich mache hier mal so ein Pfeil, die 7 die hier steht, die 7 die steht,  das ist diese 7, okay und auch wieder zugehoerig zu dem Eigenvektor 1 1 und dann sehen wir was hier  steht, ja das ist dann einfach nur, ja was ist das, das ist einfach nur einfach sich merken diese  Formel lambda 1, das ist ja automatisch der Eigenwert t minus t0, t0 weitergegebene Startwert und das", "type": "Satz", "module_number": 31070}, {"node_index": 456, "embedding": [-82.13968658447266, 133.24205017089844, 229.33932495117188, 9.788564682006836, -99.98218536376953, -39.972835540771484], "text": " ", "type": "Satz", "module_number": 31070}, {"node_index": 457, "embedding": [-9.144672393798828, 16.43807029724121, 23.638425827026367, 0.1533380150794983, -18.094890594482422, -3.209465980529785], "text": "hier voellig analog ist also lambda 2 t minus t0, das heisst die koennen sich diese Formel also so  merken, sie stellen also y 0 als Linaeerkombination der Eigenvektoren da, die brauchen sie natuerlich  und wenn sie das jetzt hier haben, dann setzen sie das einfach so ein, haetten sie jetzt noch  einen dritten, haetten wir jetzt irgendwie, weiss ich nicht, eine 3 Kreuz, 3 Matrix mit 3 verschiedenen", "type": "Satz", "module_number": 31070}, {"node_index": 458, "embedding": [-82.57595825195312, 134.2540283203125, 230.29344177246094, 9.842767715454102, -100.84521484375, -39.98788070678711], "text": " ", "type": "Satz", "module_number": 31070}, {"node_index": 459, "embedding": [-8.915842056274414, 13.7362060546875, 25.994407653808594, -1.2999532222747803, -16.615495681762695, -5.341401100158691], "text": "Eigenwerten, dann haetten wir noch einen Summanten, ja fuer jeden Eigenwert schreiben sie das dann eben  so auf und ja und wenn wir das mal zusammen addieren oder mal zusammenfassen was dort steht, ist jetzt  ein bisschen farbig, das ist jetzt ein Vektor, hier ist auch ein Vektor und das sind einfach  Vorfaktoren, ziehen wir die mal rein und fassen alles zusammen, denn sehen wir also vom ersten", "type": "Satz", "module_number": 31070}, {"node_index": 460, "embedding": [-19.35188102722168, 4.407224178314209, 77.226806640625, -6.089751720428467, -49.407203674316406, -29.829256057739258], "text": " Ausdruck, haben wir hier einen minus diesen Ausdruck und das steht dann da aus die 1, also steht da eine  ersten Komponente minus e hoch, 3 t minus 4, okay und vom zweiten Summanten bekommen wir also diesen  Ausdruck multipliziert mit 1, okay, zweite Komponente, also hier steht 0, das faellt also weg und hier", "type": "Satz", "module_number": 31070}, {"node_index": 461, "embedding": [-82.35822296142578, 133.2833709716797, 230.1750030517578, 9.835147857666016, -100.07564544677734, -40.266841888427734], "text": " ", "type": "Satz", "module_number": 31070}, {"node_index": 462, "embedding": [-7.4215803146362305, 6.276360988616943, 24.814319610595703, 0.024407677352428436, -10.507762908935547, -7.159574508666992], "text": "steht einfach nur dieses mit 1 und das war's, okay, ich habe eben gesagt, es ist ein bisschen  schneller, es ist wesentlich schneller,", "type": "Satz", "module_number": 31070}, {"node_index": 463, "embedding": [-7.511116027832031, -4.318512439727783, 34.64610290527344, -2.897329568862915, -13.66598892211914, -15.426289558410645], "text": "jetzt schauen wir nochmal, stimmt denn das was wir hier haben,  das war unsere Loesung, das war unsere Loesung und siehe da, das ist exakt das gleiche, ja, so  kann man das Ganze also quasi dann loesen und ja, damit haben sie jetzt also eine Idee wie sie", "type": "Satz", "module_number": 31070}, {"node_index": 464, "embedding": [-82.7837142944336, 132.69215393066406, 232.56289672851562, 9.568023681640625, -100.42652130126953, -41.4573974609375], "text": " ", "type": "Satz", "module_number": 31070}, {"node_index": 465, "embedding": [-9.787116050720215, 1.471839427947998, 42.206912994384766, -1.5836730003356934, -18.537342071533203, -15.177534103393555], "text": "Systeme loesen koennen und das Konzept werden wir dann auch im dritten Video verwenden, wenn wir uns  dann lineare Skalare differenz sagen gleich um zweite Ordnung anschauen, die versuchen wir einfach  irgendwie in ein System zu bringen, um das dann wieder zu loesen und dann also das ganze wieder  rueckwaerts dann aufzuloesen, so das genuegt jetzt aber wirklich fuer dieses Video", "type": "Satz", "module_number": 31070}, {"node_index": 466, "embedding": [-82.53556823730469, 133.1964569091797, 231.2126007080078, 9.844404220581055, -99.9063949584961, -40.641754150390625], "text": "  ", "type": "Satz", "module_number": 31070}, {"node_index": 467, "embedding": [-13.672540664672852, 13.93899154663086, 44.91123580932617, 3.469470500946045, -19.61191177368164, -10.564804077148438], "text": "Herzlich willkommen zum dritten Teil der 43. Vorlesung im Kurs Analysis 1 und  linearer Algebra fuer Ingenieurwissenschaften.", "type": "Satz", "module_number": 31070}, {"node_index": 468, "embedding": [-7.73901891708374, -6.815954208374023, 40.22150802612305, -1.2277066707611084, -15.366636276245117, -17.037263870239258], "text": " Ja, das ist jetzt auch dann das letzte Video zum Inhaltsstoff und wir hatten uns  jetzt in den ersten beiden Videos zum einen mit linearer Differenzialgleichung  erster Ordnung und zum anderen mit Systemen linearer Differenzialgleichung  erster Ordnung beschaeftigt.", "type": "Satz", "module_number": 31070}, {"node_index": 469, "embedding": [-5.44334077835083, -8.696002960205078, 31.434656143188477, -2.0399532318115234, -10.921884536743164, -14.617061614990234], "text": "Und jetzt in diesem letzten Teil wollen wir noch einen  Einblick gewinnen, was wir ueber lineare, skalare Differenzialgleichung  zweite Ordnung aussagen koennen.", "type": "Satz", "module_number": 31070}, {"node_index": 470, "embedding": [-8.171207427978516, -8.99898910522461, 43.920654296875, -2.954975128173828, -16.063716888427734, -19.698762893676758], "text": "Und wir starten direkt mal auf den Folien und  ja, werden das ja schon in der im ersten Video erwaehnt, dass wir so eine  Differenzialgleichung betrachten wollten.", "type": "Satz", "module_number": 31070}, {"node_index": 471, "embedding": [-3.1135735511779785, -11.399113655090332, 21.05674934387207, 0.424227774143219, -4.457470893859863, -11.240349769592285], "text": "Zweite Ableitung gleich minus  konstante.", "type": "Satz", "module_number": 31070}, {"node_index": 472, "embedding": [-8.945832252502441, -10.961090087890625, 43.12346649169922, 1.1610612869262695, -10.573381423950195, -19.666152954101562], "text": "Dann kommt die Funktion.", "type": "Satz", "module_number": 31070}, {"node_index": 473, "embedding": [-9.371843338012695, -26.996597290039062, 58.58537673950195, -1.6877474784851074, -8.137104988098145, -31.865034103393555], "text": "Das schreiben wir jetzt mal in dieser Form.  ", "type": "Satz", "module_number": 31070}, {"node_index": 474, "embedding": [-5.361074924468994, -14.728707313537598, 32.009151458740234, -1.4637095928192139, -4.3845062255859375, -17.30365562438965], "text": "Das heisst, wir haben jetzt hier die zweite Ableitung.", "type": "Satz", "module_number": 31070}, {"node_index": 475, "embedding": [-4.65252685546875, -15.190998077392578, 28.5521297454834, -0.4073566794395447, -3.2885470390319824, -15.715859413146973], "text": "Omega Quadrat ist jetzt  hier irgendwie eine positive Konstante.", "type": "Satz", "module_number": 31070}, {"node_index": 476, "embedding": [-4.496949672698975, -17.883569717407227, 32.36713409423828, -0.7993337512016296, -2.763122081756592, -17.967166900634766], "text": "Genauer gesagt ist also Omega  groesser null eine positive Konstante, dem zufolge natuerlich auch das Quadrat.", "type": "Satz", "module_number": 31070}, {"node_index": 477, "embedding": [-82.70035552978516, 132.4498748779297, 232.5067596435547, 9.848983764648438, -99.67967987060547, -41.381587982177734], "text": "  ", "type": "Satz", "module_number": 31070}, {"node_index": 478, "embedding": [-8.706450462341309, 14.703941345214844, 23.849546432495117, -0.43225592374801636, -16.599430084228516, -3.8940842151641846], "text": "Und wir suchen jetzt also eine Funktion x in Abhaengigkeit von t.  Ja und das erste, was man sieht, wir wollen das gleich systematisch loesen, aber was  man sieht ist, wenn man jetzt Cosinus zum Beispiel einsetzt, wenn ich jetzt hier  Cosinus fuer x einsetze, dann steht hier also Cosinus Omega t.", "type": "Satz", "module_number": 31070}, {"node_index": 479, "embedding": [-10.591689109802246, 17.496109008789062, 30.198936462402344, -2.9556379318237305, -29.695144653320312, -6.094918251037598], "text": "Okay und wenn ich  hier zweimal Ableiter aus dem Cosinus wird minus Sinus und aus dem Minus Sinus  wird dann mit der Ableitung minus Cosinus und durch die innere Ableitung steht  da das Omega Quadrat und dann sieht man also tatsaechlich, dass das Ganze sich  aufhebt und null wird.", "type": "Satz", "module_number": 31070}, {"node_index": 480, "embedding": [-10.541515350341797, 11.323328971862793, 35.37763214111328, -3.7447328567504883, -29.427635192871094, -10.403003692626953], "text": "Das heisst also Cosinus Omega t ist tatsaechlich eine  Loesung von dieser Differenzialgleichung, aber das Gleiche koennen wir auch mit dem  Sinus machen.", "type": "Satz", "module_number": 31070}, {"node_index": 481, "embedding": [-7.546913146972656, -4.745187759399414, 34.18912887573242, -1.2930219173431396, -15.255900382995605, -14.80872917175293], "text": "Einfach mal einsetzen, wenn ich Sinus", "type": "Satz", "module_number": 31070}, {"node_index": 482, "embedding": [-10.223628997802734, -1.2980146408081055, 41.972145080566406, -1.8224518299102783, -22.879098892211914, -16.759626388549805], "text": "Ableite kommt Cosinus und dann  nochmal minus Sinus und zweimal diesen inneren Termen ist es Quadrat und dann  steht genau wieder null da.", "type": "Satz", "module_number": 31070}, {"node_index": 483, "embedding": [-7.2573347091674805, -16.15325164794922, 44.42814254760742, -3.867420196533203, -11.532273292541504, -22.848085403442383], "text": "So dann wissen wir natuerlich, weil die  Differenzialgleichung linear sind natuerlich auch alle Linearkombinationen von  diesen Loesungen, diesen und diesen auch wieder Loesungen, das heisst also alle  Funktionen dieser Form.", "type": "Satz", "module_number": 31070}, {"node_index": 484, "embedding": [-8.12462043762207, -15.51474666595459, 45.800052642822266, -3.6732888221740723, -9.544387817382812, -23.46782875061035], "text": "Naja und jetzt ist die Frage, finden wir jetzt weitere  Loesung.", "type": "Satz", "module_number": 31070}, {"node_index": 485, "embedding": [-82.21605682373047, 127.40398406982422, 234.4991455078125, 9.416345596313477, -98.76963806152344, -44.06167221069336], "text": "Ja", "type": "Satz", "module_number": 31070}, {"node_index": 486, "embedding": [-6.658564567565918, 4.7951154708862305, 23.32130241394043, -0.5952596068382263, -9.041580200195312, -7.078501224517822], "text": "Sie wissen immer wenn ich so frage, wissen Sie eigentlich schon  wahrscheinlich, es lautet die Antwort Nein, aber wir wollen es das mal  systematisch anschauen.", "type": "Satz", "module_number": 31070}, {"node_index": 487, "embedding": [-9.209510803222656, -2.504040002822876, 42.565372467041016, -3.2436485290527344, -19.07797622680664, -17.213850021362305], "text": "Und zwar wollen wir uns mal ueberhaupt ueberlegen, wie wir auf  diese Loesung kommen und wir nutzen jetzt einfach, dass unser Wissen aus dem  letzten Video, dass wir das Ganze, diese Differenzialgleichung in ein System  ueberfuehren werden und dann schauen wie wir das loesen koennen.", "type": "Satz", "module_number": 31070}, {"node_index": 488, "embedding": [-9.289661407470703, -13.58258056640625, 51.08057403564453, -4.085236072540283, -17.028953552246094, -24.56763458251953], "text": "So das heisst  wir betrachten jetzt also diese Differenzialgleichung 2. Ordnung.", "type": "Satz", "module_number": 31070}, {"node_index": 489, "embedding": [-3.5562665462493896, -12.988471984863281, 25.341642379760742, -1.1277482509613037, -5.190670013427734, -13.881050109863281], "text": "Das heisst also  2. Ableitung von x plus Omega Quadrat x gleich null.", "type": "Satz", "module_number": 31070}, {"node_index": 490, "embedding": [-3.8974318504333496, -17.223039627075195, 29.57396697998047, -0.9137353301048279, -5.492733001708984, -16.961156845092773], "text": "Wie ueblich sieht man Omega  wie ein W aus, aber das wird sie hoffentlich nicht weiter stoeren.", "type": "Satz", "module_number": 31070}, {"node_index": 491, "embedding": [-5.054673671722412, -14.98051643371582, 31.421052932739258, -0.7368311285972595, -6.70810079574585, -16.97895622253418], "text": "So die Idee ist  das Ganze, das waere das Ganze sozusagen reduzieren oder eine Art Reduktion auf  ein System von Differenzialgleichung 1. Ordnung.  ", "type": "Satz", "module_number": 31070}, {"node_index": 492, "embedding": [-14.30521297454834, -3.8472418785095215, 62.81578063964844, -3.503366470336914, -25.705625534057617, -25.725452423095703], "text": "Also von Differenzialgleichung 1. Ordnung.", "type": "Satz", "module_number": 31070}, {"node_index": 493, "embedding": [-6.326066970825195, -13.60548210144043, 35.77446365356445, -1.6239309310913086, -8.405566215515137, -18.229841232299805], "text": "Jetzt haben wir hier ja die 2. Ordnung.", "type": "Satz", "module_number": 31070}, {"node_index": 494, "embedding": [-7.027154445648193, -16.286020278930664, 39.309349060058594, -1.6083784103393555, -7.224043846130371, -20.408695220947266], "text": "Wir  wiederholen nochmal 2. Ordnung.", "type": "Satz", "module_number": 31070}, {"node_index": 495, "embedding": [-7.106714725494385, -12.336699485778809, 38.89432144165039, -2.8993794918060303, -10.315519332885742, -19.236249923706055], "text": "Die Ordnung koennen wir ablesen aufgrund der  hoechsten Ableitung, die auftritt und hier tritt halt die 2. Ableitung als hoechste  auf.", "type": "Satz", "module_number": 31070}, {"node_index": 496, "embedding": [-6.358616352081299, -12.506827354431152, 35.47702407836914, -1.9730958938598633, -8.360398292541504, -17.93221664428711], "text": "So, die Idee um das Ganze in ein System zu ueberfuehren ist wie folgt.", "type": "Satz", "module_number": 31070}, {"node_index": 497, "embedding": [-17.54014778137207, 13.010043144226074, 64.05814361572266, -7.093177318572998, -46.24056625366211, -21.839941024780273], "text": "Wir setzen  jetzt mal y, das ist jetzt also wieder ein Vektor, ein Vektorfunktion.", "type": "Satz", "module_number": 31070}, {"node_index": 498, "embedding": [-6.741004943847656, -9.862835884094238, 31.767717361450195, 1.8129746913909912, -10.660721778869629, -15.171795845031738], "text": "Hier setzen  wir einfach mal die erste Ableitung von der gesuchten Loesung x und hier die  Funktion selbst.", "type": "Satz", "module_number": 31070}, {"node_index": 499, "embedding": [-5.401363372802734, -10.90639877319336, 31.047758102416992, -2.615835189819336, -8.59815788269043, -15.729360580444336], "text": "So, wenn wir das mal jetzt ableiten, also die Ableitung, da  wissen wir, wir leiten jede einzelne Komponente ab, dann habe ich hier also die  zweite und hier dann die erste.", "type": "Satz", "module_number": 31070}, {"node_index": 500, "embedding": [-13.515810012817383, -34.092620849609375, 81.73198699951172, -4.315356731414795, -13.851483345031738, -43.889652252197266], "text": "Also einfach das Ableiten und das, weil wir hier die  Ableitung haben.", "type": "Satz", "module_number": 31070}, {"node_index": 501, "embedding": [-13.51382827758789, -34.54605484008789, 80.92707824707031, -3.1765503883361816, -12.33085823059082, -43.306156158447266], "text": "So, dann koennen wir doch mal einsetzen.", "type": "Satz", "module_number": 31070}, {"node_index": 502, "embedding": [-6.653364658355713, -16.47626495361328, 38.4272575378418, -2.314227342605591, -5.627845287322998, -20.592483520507812], "text": "Das, was hier steht, das  kennen wir ja schon.", "type": "Satz", "module_number": 31070}, {"node_index": 503, "embedding": [-11.642098426818848, -28.16717529296875, 68.56753540039062, -3.6125431060791016, -10.504240036010742, -36.568180084228516], "text": "Wir koennen das jetzt hier auf die andere Seite nehmen.", "type": "Satz", "module_number": 31070}, {"node_index": 504, "embedding": [-4.799022197723389, -12.249780654907227, 28.14335823059082, -1.4221696853637695, -4.387172222137451, -14.93056869506836], "text": "Dann haben  wir also zweite Ableitung ist gleich minus diesem Ausdruck.", "type": "Satz", "module_number": 31070}, {"node_index": 505, "embedding": [-8.230805397033691, -12.261037826538086, 44.25422286987305, -2.914452075958252, -16.163223266601562, -21.47978401184082], "text": "Okay, dann steht hier  minus Omega Quadrat x von t und hier unten das x' von t, das lassen wir mal stehen.", "type": "Satz", "module_number": 31070}, {"node_index": 506, "embedding": [-82.94530487060547, 133.5340118408203, 232.55601501464844, 9.87381362915039, -100.29997253417969, -41.058536529541016], "text": "  ", "type": "Satz", "module_number": 31070}, {"node_index": 507, "embedding": [-10.791566848754883, 10.059196472167969, 37.14907455444336, -3.0294666290283203, -23.674833297729492, -11.304192543029785], "text": "So, und jetzt wollen wir hier ein Matrix-Vektorprodukt daraus gewinnen.", "type": "Satz", "module_number": 31070}, {"node_index": 508, "embedding": [-4.54055118560791, -11.500529289245605, 27.345333099365234, -1.8279447555541992, -3.579683780670166, -14.626379013061523], "text": "Wir wollen ja  ein System haben.", "type": "Satz", "module_number": 31070}, {"node_index": 509, "embedding": [-4.848499774932861, -17.27975082397461, 35.27638626098633, -3.3326210975646973, -2.0760226249694824, -19.62303352355957], "text": "Wir erinnern uns noch an das letzte Video.", "type": "Satz", "module_number": 31070}, {"node_index": 510, "embedding": [-9.399263381958008, -7.607960224151611, 46.38588333129883, -4.972035884857178, -18.70421600341797, -21.034008026123047], "text": "Wir hatten y gleich,  dann kommt A die Matrix mal, also y' gleich A mal", "type": "Satz", "module_number": 31070}, {"node_index": 511, "embedding": [-82.67265319824219, 131.8847198486328, 233.2567901611328, 9.388971328735352, -100.11759185791016, -41.93632888793945], "text": "y.", "type": "Satz", "module_number": 31070}, {"node_index": 512, "embedding": [-5.061839580535889, -11.37399673461914, 28.698444366455078, 0.7127388119697571, 0.4483017325401306, -14.7162504196167], "text": "So, was koennen wir jetzt hier  machen?", "type": "Satz", "module_number": 31070}, {"node_index": 513, "embedding": [-3.997192859649658, -16.935199737548828, 27.881122589111328, -0.029241986572742462, -0.08844287693500519, -16.345428466796875], "text": "Als Vektor wuerden wir doch gerne einfach die erste Ableitung und die Funktion  selbst nehmen.", "type": "Satz", "module_number": 31070}, {"node_index": 514, "embedding": [-6.065117359161377, -9.863807678222656, 32.53963088989258, -1.5963239669799805, -9.639904975891113, -15.78777027130127], "text": "Das heisst also, wir schreiben das mal kurz so auf und jetzt haetten wir  hier gerne x' von t, x' von t.", "type": "Satz", "module_number": 31070}, {"node_index": 515, "embedding": [-7.401604175567627, -4.2108073234558105, 35.18580627441406, -3.1267168521881104, -16.228504180908203, -15.326778411865234], "text": "Wir wollen ja gerne wieder dann, wenn das jetzt, also  quasi wir haetten jetzt hier gerne wieder unser y und jetzt die Frage, welche Matrix  steckt dahinter.", "type": "Satz", "module_number": 31070}, {"node_index": 516, "embedding": [-12.175311088562012, -18.675251007080078, 66.09249114990234, -4.003674030303955, -24.727333068847656, -32.414363861083984], "text": "Naja, hier ist nur der Koffizient vor x, das heisst also vor x' steht  in 0 und hier steht minus Omega Quadrat.", "type": "Satz", "module_number": 31070}, {"node_index": 517, "embedding": [-11.587262153625488, -6.222397327423096, 52.14992904663086, -3.052739143371582, -26.1890926361084, -22.864625930786133], "text": "Ja, und in der zweiten Zeile sieht man also,  der Koffizient ist hier eben 1 und von diesem 0.", "type": "Satz", "module_number": 31070}, {"node_index": 518, "embedding": [-10.065258979797363, -10.398249626159668, 50.76588439941406, -4.419306755065918, -19.831348419189453, -23.705896377563477], "text": "Und das Ganze hier, das ist jetzt unsere  Matrix A und das ist wieder unser y von t. Ja, und das koennen wir doch loesen.", "type": "Satz", "module_number": 31070}, {"node_index": 519, "embedding": [-3.6178886890411377, -13.858208656311035, 28.648672103881836, -3.486675977706909, -3.0175108909606934, -15.915624618530273], "text": "Das haben wir doch  eben auch im Video gesehen.", "type": "Satz", "module_number": 31070}, {"node_index": 520, "embedding": [-16.314664840698242, 6.274232864379883, 63.36082077026367, -6.540623188018799, -40.37968444824219, -23.808523178100586], "text": "Das heisst also, hier koennen wir die Loesung angeben und das ist  jetzt die Idee, wir loesen also zuerst das System y' gleich A y und dann versuchen wir die Loesung x'  von t abzulesen aus dieser Loesung.", "type": "Satz", "module_number": 31070}, {"node_index": 521, "embedding": [-5.128735542297363, -1.2299950122833252, 23.37676239013672, -2.571366786956787, -11.26671028137207, -9.419055938720703], "text": "Also loesen zuerst das System.", "type": "Satz", "module_number": 31070}, {"node_index": 522, "embedding": [-5.395053386688232, -13.479705810546875, 33.553646087646484, -1.8883838653564453, -5.470582485198975, -17.286771774291992], "text": "Ich schreibe jetzt, ich schreibe  jetzt hier t dazu geschrieben.", "type": "Satz", "module_number": 31070}, {"node_index": 523, "embedding": [-3.567758560180664, -10.153837203979492, 23.882604598999023, -1.3982970714569092, -3.0715723037719727, -12.196110725402832], "text": "Normalerweise schreibe ich immer dazu, was ich mit diesem t meine.", "type": "Satz", "module_number": 31070}, {"node_index": 524, "embedding": [-83.1880111694336, 133.8306427001953, 233.43927001953125, 9.911376953125, -100.28621673583984, -41.25803756713867], "text": "  ", "type": "Satz", "module_number": 31070}, {"node_index": 525, "embedding": [-9.601778984069824, -9.760496139526367, 45.097408294677734, -2.0725960731506348, -9.183219909667969, -20.78520393371582], "text": "Das ist jetzt immer aus r, das wissen wir jetzt.", "type": "Satz", "module_number": 31070}, {"node_index": 526, "embedding": [-8.596457481384277, -12.285184860229492, 42.62997817993164, -2.0134596824645996, -8.234152793884277, -20.751689910888672], "text": "So, jetzt machen wir nochmal das Ganze und jetzt  wird es aber nicht so leicht.", "type": "Satz", "module_number": 31070}, {"node_index": 527, "embedding": [-7.497661113739014, -18.92292594909668, 45.56621170043945, -4.674829483032227, -6.359419345855713, -24.676794052124023], "text": "Also die Idee ist jetzt, dass wir das System loesen.", "type": "Satz", "module_number": 31070}, {"node_index": 528, "embedding": [-6.058760166168213, -15.556421279907227, 37.81169509887695, -3.9690403938293457, -6.932753086090088, -20.2027587890625], "text": "Wir haben das  eigentlich schon im zweiten Video gemacht, aber weil es so viel Spass macht, machen wir das einfach  nochmal.", "type": "Satz", "module_number": 31070}, {"node_index": 529, "embedding": [-4.930027484893799, -15.79313850402832, 33.155399322509766, -2.770364761352539, -4.970354080200195, -18.177202224731445], "text": "Und die Matrix A, die sehen wir jetzt hier, das ist jetzt keine Oberrohr oder untere  Dreiecksmatrix.", "type": "Satz", "module_number": 31070}, {"node_index": 530, "embedding": [-5.454347610473633, -16.855533599853516, 36.206790924072266, -2.4406180381774902, -6.062559127807617, -19.649751663208008], "text": "Also hier kann man die Eigenwerte nicht einfach ablesen und deswegen das nochmal  als gutes Beispiel und als Erinnerung.", "type": "Satz", "module_number": 31070}, {"node_index": 531, "embedding": [-5.604246139526367, -16.19786262512207, 36.21603012084961, -2.2469563484191895, -6.1360039710998535, -19.44121551513672], "text": "Wir betrachten also das charakteristische Polinom.", "type": "Satz", "module_number": 31070}, {"node_index": 532, "embedding": [-5.146416187286377, -15.976703643798828, 34.32807540893555, -1.5294723510742188, -5.5320000648498535, -18.360055923461914], "text": "Das  war ja definiert als die Determinante von A minus z dann i2.", "type": "Satz", "module_number": 31070}, {"node_index": 533, "embedding": [-8.45621109008789, -13.265768051147461, 46.73426055908203, -3.3916587829589844, -15.774175643920898, -22.791427612304688], "text": "Wenn wir das aufschreiben,  ziehen wir also einfach nur auf der diagonalen z ab.", "type": "Satz", "module_number": 31070}, {"node_index": 534, "embedding": [-8.438532829284668, -22.622411727905273, 50.53045654296875, -2.1455841064453125, -8.664985656738281, -27.221912384033203], "text": "Okay, da haben wir das aufloesen, dann  bekommen wir hier also z\u00b2.", "type": "Satz", "module_number": 31070}, {"node_index": 535, "embedding": [-4.593383312225342, -15.406579971313477, 28.463464736938477, -0.7097803950309753, -4.0871171951293945, -15.99754524230957], "text": "Dann haben wir da 2 mal minus also plus w\u00b2.", "type": "Satz", "module_number": 31070}, {"node_index": 536, "embedding": [-5.554893493652344, -20.47447967529297, 36.07901382446289, -0.7508751749992371, -4.95068883895874, -20.66905975341797], "text": "So und das ist jetzt so  ein klassisches Beispiel, was wir auch schon oft hatten.", "type": "Satz", "module_number": 31070}, {"node_index": 537, "embedding": [-5.955996036529541, -19.52440643310547, 38.44664001464844, -1.5759897232055664, -5.519123554229736, -21.388887405395508], "text": "Jetzt koennte man hier natuerlich die  PQ Formel anwenden, das machen wir nicht.", "type": "Satz", "module_number": 31070}, {"node_index": 538, "embedding": [-6.9554009437561035, -17.29950714111328, 41.3596305847168, -1.1349294185638428, -6.542936325073242, -21.805452346801758], "text": "Ich gebe mal die Zerlegen vor.", "type": "Satz", "module_number": 31070}, {"node_index": 539, "embedding": [-5.092621326446533, -10.563920021057129, 27.617155075073242, 0.0669732615351677, -6.200211524963379, -13.861233711242676], "text": "Das sieht man z minus i  omega mal z plus i omega.", "type": "Satz", "module_number": 31070}, {"node_index": 540, "embedding": [-6.3204216957092285, -16.445919036865234, 36.012760162353516, -0.2107829451560974, -6.013932228088379, -19.372892379760742], "text": "Wenn wir mal die Probe machen, z\u00b2.", "type": "Satz", "module_number": 31070}, {"node_index": 541, "embedding": [-7.512446403503418, -20.54481315612793, 43.67023468017578, -0.2464863657951355, -7.295336723327637, -23.767343521118164], "text": "Okay, die Zwischentherme wegen  minus und plus heben sich auf und dann haben wir minus i omega\u00b2 mal i omega.", "type": "Satz", "module_number": 31070}, {"node_index": 542, "embedding": [-8.063648223876953, -19.74810791015625, 45.85401153564453, -0.25961703062057495, -11.026601791381836, -24.29640007019043], "text": "Das ist dann also  minus i omega\u00b2 und Moment, minus i\u00b2 omega\u00b2 i\u00b2 minus 1. Also steht da einfach nur omega\u00b2.  ", "type": "Satz", "module_number": 31070}, {"node_index": 543, "embedding": [-6.292186260223389, -7.719489574432373, 30.992002487182617, -1.2582013607025146, -13.663118362426758, -14.638251304626465], "text": "Wenn ich jetzt sage, das sieht man, das ist nicht schlimm, wenn man das jetzt nicht sieht,  sie koennen ja einfach mal mit der PQ Formel das nachrechnen.", "type": "Satz", "module_number": 31070}, {"node_index": 544, "embedding": [-8.322249412536621, -17.32599639892578, 45.84761428833008, -2.692695140838623, -10.649913787841797, -23.707773208618164], "text": "Dann bekommen wir schon mal  zwei Eigenwerte.", "type": "Satz", "module_number": 31070}, {"node_index": 545, "embedding": [-9.900233268737793, -27.32724380493164, 60.759952545166016, -2.8517842292785645, -8.997368812561035, -32.954586029052734], "text": "Also das lesen wir jetzt hier ab.", "type": "Satz", "module_number": 31070}, {"node_index": 546, "embedding": [-5.643150806427002, -18.640026092529297, 37.01705551147461, -1.4878137111663818, -6.309755325317383, -20.579130172729492], "text": "Das Ganze muss ja null werden hier, gleich null.", "type": "Satz", "module_number": 31070}, {"node_index": 547, "embedding": [-83.36396789550781, 134.0189208984375, 233.73654174804688, 10.015859603881836, -100.58580017089844, -41.32126998901367], "text": "  ", "type": "Satz", "module_number": 31070}, {"node_index": 548, "embedding": [-9.844708442687988, -15.306329727172852, 51.877620697021484, -0.8327593207359314, -14.091203689575195, -25.00942039489746], "text": "Und das wird eben null, wenn entweder dieser Faktor oder dieser null wird und dann sieht man hier,  der erste Eigenwert ist dann i omega und der zweite ist minus i omega.", "type": "Satz", "module_number": 31070}, {"node_index": 549, "embedding": [-5.869888782501221, -0.9654324054718018, 25.396888732910156, -1.963818073272705, -14.480609893798828, -10.260550498962402], "text": "Und dann sehen wir  auch schon sofort a ist also diagonalisierbar und d kann ich direkt angeben, indem ich  gleiche Reihenfolge hier verwende fuer die Eigenwerte und das so aufschreibe.", "type": "Satz", "module_number": 31070}, {"node_index": 550, "embedding": [-6.8566765785217285, -4.123386859893799, 31.247329711914062, -2.4831933975219727, -13.640896797180176, -13.679203033447266], "text": "So, jetzt brauchen  wir noch die Eigenraeume.", "type": "Satz", "module_number": 31070}, {"node_index": 551, "embedding": [-6.9773335456848145, -13.56185245513916, 36.95778274536133, -1.1719002723693848, -7.184118747711182, -18.77657127380371], "text": "Das sieht nicht ganz so leicht aus.", "type": "Satz", "module_number": 31070}, {"node_index": 552, "embedding": [-7.262556552886963, -15.694896697998047, 39.59369659423828, -0.9051205515861511, -7.13803243637085, -20.521535873413086], "text": "Also jetzt mal v lambda 1, dann haben  wir hier also den Kern von a.", "type": "Satz", "module_number": 31070}, {"node_index": 553, "embedding": [-9.309804916381836, -21.766326904296875, 53.30461883544922, -0.7626275420188904, -13.833611488342285, -27.96684455871582], "text": "Der erste Eigenwert ist jetzt also hier i omega, also minus i omega i2.  ", "type": "Satz", "module_number": 31070}, {"node_index": 554, "embedding": [-4.77543306350708, -17.045989990234375, 32.545589447021484, -1.2385401725769043, -6.946299076080322, -18.211305618286133], "text": "Und wenn wir das mal aufschreiben, dann ziehen wir also auf der Hauptdiagonalen.", "type": "Satz", "module_number": 31070}, {"node_index": 555, "embedding": [-5.096393585205078, -16.16319465637207, 31.592859268188477, -1.6402573585510254, -3.9081273078918457, -17.57601547241211], "text": "Also die Matrix  kann man sich eigentlich gut merken.", "type": "Satz", "module_number": 31070}, {"node_index": 556, "embedding": [-6.845264911651611, -19.059886932373047, 43.1383056640625, -2.315837860107422, -7.181814193725586, -23.056503295898438], "text": "Hauptdiagonale ist null und die Nebendiagonale steht jetzt hier  eins und minus omega Quadrat.", "type": "Satz", "module_number": 31070}, {"node_index": 557, "embedding": [-5.36310338973999, -20.295331954956055, 37.75313949584961, -1.914076805114746, -6.128993988037109, -21.386837005615234], "text": "Dann ziehen wir da also minus oder ziehen i w ab auf der Hauptdiagonalen.  ", "type": "Satz", "module_number": 31070}, {"node_index": 558, "embedding": [-8.640122413635254, -22.142513275146484, 51.101016998291016, -0.6077446341514587, -13.88595962524414, -27.14936065673828], "text": "Das heisst also i omega minus omega Quadrat eins minus i omega.", "type": "Satz", "module_number": 31070}, {"node_index": 559, "embedding": [-4.2233381271362305, -10.84512710571289, 25.589618682861328, -0.9048939347267151, -7.154601097106934, -13.474903106689453], "text": "So, wenn Sie das jetzt mit Gauss  machen, dann wuerden Sie, das kann man einfach mal machen, da muesste jetzt hier eine eins stehen.  ", "type": "Satz", "module_number": 31070}, {"node_index": 560, "embedding": [-4.623498916625977, -25.825416564941406, 38.70005416870117, -0.8276943564414978, 1.7611697912216187, -23.953283309936523], "text": "Also was wuerden wir tun?", "type": "Satz", "module_number": 31070}, {"node_index": 561, "embedding": [-4.005889892578125, -17.443668365478516, 30.074678421020508, -1.0666685104370117, -0.9346924424171448, -17.27362060546875], "text": "Wir wuerden die erste Gleichung multiplizieren mit.", "type": "Satz", "module_number": 31070}, {"node_index": 562, "embedding": [-7.34668493270874, -16.37877082824707, 42.985877990722656, -1.9247567653656006, -11.361600875854492, -22.12715721130371], "text": "Also wenn ich jetzt i  nehme, dann steht hier i Quadrat dann minus i Quadrat minus i Quadrat ist eins.", "type": "Satz", "module_number": 31070}, {"node_index": 563, "embedding": [-3.4317080974578857, -10.697452545166016, 23.287368774414062, -0.9718651175498962, -5.439746379852295, -12.220523834228516], "text": "Okay, super,  also nur noch durch Omega teilen.", "type": "Satz", "module_number": 31070}, {"node_index": 564, "embedding": [-9.674097061157227, -25.060997009277344, 58.9250373840332, -1.738050937652588, -8.899795532226562, -31.32905387878418], "text": "Also in dieser Form.", "type": "Satz", "module_number": 31070}, {"node_index": 565, "embedding": [-6.87152624130249, -16.59896469116211, 39.293827056884766, -0.5461527705192566, -6.369324207305908, -20.579618453979492], "text": "Und dann steht da der Kern von eins.", "type": "Satz", "module_number": 31070}, {"node_index": 566, "embedding": [-10.25879955291748, -26.702871322631836, 62.64352798461914, -1.7801523208618164, -14.870539665222168, -33.276432037353516], "text": "Also wenn ich  das jetzt hier multipliziere mit diesem, dann steht eben minus i Quadrat Omega durch Omega da.", "type": "Satz", "module_number": 31070}, {"node_index": 567, "embedding": [-5.614241123199463, -9.62706184387207, 30.244033813476562, -1.8273425102233887, -7.7512102127075195, -14.971378326416016], "text": "Das ist  eben eins.", "type": "Satz", "module_number": 31070}, {"node_index": 568, "embedding": [-9.143176078796387, -21.576438903808594, 52.79257583618164, -1.5317163467407227, -12.060542106628418, -27.806673049926758], "text": "Und beim anderen sehen wir dann ein Omega kuerzt sich weg und wir bekommen denn hier minus  i Omega.", "type": "Satz", "module_number": 31070}, {"node_index": 569, "embedding": [-4.699784278869629, -14.573290824890137, 29.836244583129883, -1.288015604019165, -5.322887897491455, -16.421911239624023], "text": "Und Siehe da, das ist wunderbar exakt identisch mit der zweiten Zeile.", "type": "Satz", "module_number": 31070}, {"node_index": 570, "embedding": [-10.74953842163086, -13.792742729187012, 54.41453552246094, -3.31613826751709, -17.307546615600586, -26.231916427612305], "text": "Also machen wir  das jetzt hier mal ein bisschen Gauss als Wiederholung.", "type": "Satz", "module_number": 31070}, {"node_index": 571, "embedding": [-5.042431354522705, -12.774757385253906, 28.481393814086914, -0.8849734663963318, -4.505125999450684, -15.155882835388184], "text": "Da es jetzt schon kein Wiederholungsvideo  geben wird.", "type": "Satz", "module_number": 31070}, {"node_index": 572, "embedding": [-9.613326072692871, -24.384645462036133, 56.859378814697266, -1.158294677734375, -14.67563247680664, -30.236143112182617], "text": "Also bekomme ich hier also eins minus i Omega und hier komme ich null.", "type": "Satz", "module_number": 31070}, {"node_index": 573, "embedding": [-83.4458999633789, 134.2661895751953, 233.89952087402344, 10.032064437866211, -100.72344970703125, -41.2977180480957], "text": "  ", "type": "Satz", "module_number": 31070}, {"node_index": 574, "embedding": [-11.884185791015625, -18.780628204345703, 61.06124496459961, -1.8708972930908203, -11.854012489318848, -30.065839767456055], "text": "Naja und jetzt koennen wir den Spannen wieder ausrechnen.", "type": "Satz", "module_number": 31070}, {"node_index": 575, "embedding": [-4.21488094329834, -8.510086059570312, 21.561614990234375, -0.0012510493397712708, -4.739084243774414, -10.968493461608887], "text": "Nicht irritiert sein von diesem i, das  tut uns nichts.", "type": "Satz", "module_number": 31070}, {"node_index": 576, "embedding": [-6.679684638977051, -12.682032585144043, 36.38193893432617, -0.7059697508811951, -9.126385688781738, -18.011667251586914], "text": "Das ist einfach nur was Komplexes.", "type": "Satz", "module_number": 31070}, {"node_index": 577, "embedding": [-11.239359855651855, -17.94029998779297, 61.329952239990234, -3.145181655883789, -22.068937301635742, -30.10984992980957], "text": "Aber den Spannen, das ist ja sowas wie 1 mal x1  minus i Omega mal x2 ist gleich null und x2 setzen wir eins und x1 bekommen wir dann durch diese  Darstellung und dann steht hier einfach da der Spannen von i Omega eins.", "type": "Satz", "module_number": 31070}, {"node_index": 578, "embedding": [-8.254571914672852, -19.453548431396484, 47.51988983154297, -2.898094654083252, -9.10142993927002, -24.909597396850586], "text": "So, machen wir das noch  mit dem zweiten Eigenwert.", "type": "Satz", "module_number": 31070}, {"node_index": 579, "embedding": [-6.888514041900635, -19.59065055847168, 43.08195495605469, -0.9002775549888611, -9.443984031677246, -22.971677780151367], "text": "Da haben wir jetzt also A plus i omega i2. Ja, ich sag staendig mal  w mal Omega.", "type": "Satz", "module_number": 31070}, {"node_index": 580, "embedding": [-5.523278713226318, -18.795677185058594, 36.99374771118164, -1.2869839668273926, -6.005407333374023, -20.59661102294922], "text": "Das ist jetzt per Definition einfach mal identisch.", "type": "Satz", "module_number": 31070}, {"node_index": 581, "embedding": [-9.875426292419434, -28.994447708129883, 63.10512924194336, -1.9619388580322266, -13.43006706237793, -34.28134536743164], "text": "So, hier haben wir dann also i Omega  Quadrat minus Omega Quadrat.", "type": "Satz", "module_number": 31070}, {"node_index": 582, "embedding": [-3.495948314666748, -14.517023086547852, 23.4454288482666, 0.671421229839325, -3.2959322929382324, -13.503432273864746], "text": "Hier steht die 1 und hier steht i Omega.", "type": "Satz", "module_number": 31070}, {"node_index": 583, "embedding": [-4.675267696380615, -17.608903884887695, 29.517179489135742, 1.1962437629699707, -2.6072168350219727, -16.936216354370117], "text": "So, hier machen wir den  gleichen Trick.", "type": "Satz", "module_number": 31070}, {"node_index": 584, "embedding": [-8.031512260437012, -17.714462280273438, 43.87446594238281, -0.9426242709159851, -6.32188081741333, -22.85274314880371], "text": "Hier wollen wir auch wieder eine eins haben.", "type": "Satz", "module_number": 31070}, {"node_index": 585, "embedding": [-6.968647480010986, -15.536703109741211, 38.85966873168945, -1.8226919174194336, -6.16223669052124, -20.03046989440918], "text": "Jetzt fehlt hier das minus.", "type": "Satz", "module_number": 31070}, {"node_index": 586, "embedding": [-10.993779182434082, -29.96267318725586, 67.88059997558594, -1.6364970207214355, -15.932108879089355, -36.39334487915039], "text": "Das heisst,  wir multiplizieren nicht mit i durch Omega, sondern minus i durch Omega.  ", "type": "Satz", "module_number": 31070}, {"node_index": 587, "embedding": [-9.813599586486816, -25.443862915039062, 59.9974250793457, -3.1010918617248535, -9.789155006408691, -32.20463943481445], "text": "So, wenn wir das machen.  ", "type": "Satz", "module_number": 31070}, {"node_index": 588, "embedding": [-5.487189769744873, -6.9276442527771, 27.178709030151367, -2.014726400375366, -8.934181213378906, -13.033811569213867], "text": "Ja, wenn wir jetzt multiplizieren, sehen wir, da kommt eine eins und dann haben wir hier also plus iw.", "type": "Satz", "module_number": 31070}, {"node_index": 589, "embedding": [-83.6394271850586, 134.5207061767578, 234.5093536376953, 9.911558151245117, -100.86700439453125, -41.47105026245117], "text": "  ", "type": "Satz", "module_number": 31070}, {"node_index": 590, "embedding": [-5.785341262817383, -2.6222219467163086, 25.696012496948242, 1.5927391052246094, -6.816122055053711, -9.723764419555664], "text": "I Omega.", "type": "Satz", "module_number": 31070}, {"node_index": 591, "embedding": [-4.173378944396973, -12.201722145080566, 24.46611976623535, 3.5993025302886963, -3.2247185707092285, -12.228875160217285], "text": "Entschuldigung.", "type": "Satz", "module_number": 31070}, {"node_index": 592, "embedding": [-2.489586353302002, -12.764313697814941, 18.689741134643555, 3.4247541427612305, -1.5834792852401733, -10.224203109741211], "text": "So, und hier da auch hier passt es wieder wunderbar.", "type": "Satz", "module_number": 31070}, {"node_index": 593, "embedding": [-4.3826117515563965, -17.472299575805664, 31.156930923461914, -0.11280507594347, -3.136295795440674, -17.58551597595215], "text": "2 minus 1 und dann  haben wir schon die normierte Zeilenstufenform erreicht.  ", "type": "Satz", "module_number": 31070}, {"node_index": 594, "embedding": [-7.516102313995361, -13.930595397949219, 41.325279235839844, -1.7030441761016846, -12.61613655090332, -20.675960540771484], "text": "Und auch hier koennen wir den Spannen wieder angeben und jetzt sehen wir also,  hier haetten wir ein minus stehen.", "type": "Satz", "module_number": 31070}, {"node_index": 595, "embedding": [-6.445931911468506, -11.2119722366333, 33.32871627807617, -0.7301198840141296, -9.433213233947754, -16.574880599975586], "text": "Hier steht diesem plus gedanklich.", "type": "Satz", "module_number": 31070}, {"node_index": 596, "embedding": [-6.881774425506592, -15.874267578125, 39.56965637207031, -1.6288483142852783, -9.074159622192383, -20.73896598815918], "text": "Das heisst also,  jetzt hier ist das Ganze eben vertauscht mit dem minus Zeichen.", "type": "Satz", "module_number": 31070}, {"node_index": 597, "embedding": [-5.857259273529053, -13.244928359985352, 32.761592864990234, -1.172175407409668, -7.070119857788086, -17.038347244262695], "text": "Das ist dann der Spannen minus i  Omega 1. Ja, und damit haben wir jetzt schon die Eigenraeume bestimmt.  ", "type": "Satz", "module_number": 31070}, {"node_index": 598, "embedding": [-5.70769739151001, -16.78087615966797, 35.273807525634766, -1.6664161682128906, -6.006974220275879, -19.191768646240234], "text": "Und ja, das D habe ich jetzt hier schon angegeben, aber jetzt kann ich hier also das S angeben  und das sind eben die Spalten der Eigenwecktonen.", "type": "Satz", "module_number": 31070}, {"node_index": 599, "embedding": [-83.864501953125, 134.1963348388672, 235.70008850097656, 9.935144424438477, -101.11456298828125, -42.0255012512207], "text": "  ", "type": "Satz", "module_number": 31070}, {"node_index": 600, "embedding": [-6.539155006408691, 3.140943765640259, 22.995601654052734, 0.39355260133743286, -7.668964385986328, -7.315070152282715], "text": "So, jetzt habe ich mir mal gesagt, okay, ich rechne das Beispiel wirklich mal komplett durch.  ", "type": "Satz", "module_number": 31070}, {"node_index": 601, "embedding": [-5.856153964996338, -9.904119491577148, 29.750905990600586, -0.36444419622421265, -6.33905029296875, -14.441497802734375], "text": "Jetzt ist naemlich die Frage, die Inverse zu bestimmen.", "type": "Satz", "module_number": 31070}, {"node_index": 602, "embedding": [-6.833537578582764, -13.223868370056152, 35.8705940246582, -0.8324112296104431, -6.823511123657227, -17.888721466064453], "text": "Also, wenn Sie das nicht  sehen wollen, dann spulen Sie kurz vor.", "type": "Satz", "module_number": 31070}, {"node_index": 603, "embedding": [-6.212043285369873, -14.888261795043945, 34.990135192871094, -1.5535871982574463, -5.749976634979248, -18.358888626098633], "text": "Ich wuerde das trotzdem mal anbringen, wie berechen wir jetzt die  Inverse.", "type": "Satz", "module_number": 31070}, {"node_index": 604, "embedding": [-9.46088981628418, -22.49285316467285, 55.09477615356445, -2.924896240234375, -9.299117088317871, -29.278902053833008], "text": "Wie gesagt, auch eine kleine Wiederholung hier.", "type": "Satz", "module_number": 31070}, {"node_index": 605, "embedding": [-83.90887451171875, 135.087158203125, 235.0952911376953, 10.074337005615234, -101.16133880615234, -41.46900177001953], "text": "  ", "type": "Satz", "module_number": 31070}, {"node_index": 606, "embedding": [-7.056491374969482, 3.299102783203125, 25.413787841796875, 0.17596322298049927, -6.950840473175049, -8.53813362121582], "text": "So, das sieht nicht so schoen aus, ja.", "type": "Satz", "module_number": 31070}, {"node_index": 607, "embedding": [-13.362631797790527, -35.31743240356445, 81.2901611328125, -2.9502830505371094, -10.991881370544434, -43.8774528503418], "text": "Wir schreiben das S mal hierhin.  ", "type": "Satz", "module_number": 31070}, {"node_index": 608, "embedding": [-9.744797706604004, -11.283798217773438, 47.25778579711914, -0.20903629064559937, -9.353111267089844, -21.95444107055664], "text": "Moment.  ", "type": "Satz", "module_number": 31070}, {"node_index": 609, "embedding": [-10.426901817321777, -4.534107208251953, 45.19142532348633, 0.11442571133375168, -11.2778959274292, -18.6950740814209], "text": "So, eins.  ", "type": "Satz", "module_number": 31070}, {"node_index": 610, "embedding": [-9.681313514709473, -16.861526489257812, 50.77713394165039, -1.098177433013916, -9.37261962890625, -25.354799270629883], "text": "Also, das muss hier noch weg.", "type": "Satz", "module_number": 31070}, {"node_index": 611, "embedding": [-5.586403846740723, -10.959943771362305, 29.03376579284668, -0.8500375151634216, -5.214801788330078, -14.641841888427734], "text": "Hier muss also jetzt noch die Einheitsmatrix hin.  ", "type": "Satz", "module_number": 31070}, {"node_index": 612, "embedding": [-8.29531478881836, -19.664396286010742, 46.28701400756836, -2.1435437202453613, -6.774287223815918, -24.6603946685791], "text": "So, jetzt muss ich kurz schauen.", "type": "Satz", "module_number": 31070}, {"node_index": 613, "embedding": [-8.961262702941895, -10.490994453430176, 42.85373306274414, -2.872722625732422, -13.194286346435547, -20.289836883544922], "text": "Das ist also hier die Einheitsmatrix.", "type": "Satz", "module_number": 31070}, {"node_index": 614, "embedding": [-10.839289665222168, -22.199546813964844, 59.34368133544922, -2.6959023475646973, -10.459688186645508, -30.695396423339844], "text": "Und jetzt ueberfuehren  wir das Ganze und machen jetzt erstmal wieder die gleichen Tricks von eben.", "type": "Satz", "module_number": 31070}, {"node_index": 615, "embedding": [-84.07144927978516, 135.20433044433594, 235.7318878173828, 9.987695693969727, -101.33477020263672, -41.6910285949707], "text": "  ", "type": "Satz", "module_number": 31070}, {"node_index": 616, "embedding": [-7.031138896942139, -4.876685619354248, 31.868982315063477, -1.0607233047485352, -7.106534481048584, -13.780059814453125], "text": "Ja, wir wollen wieder dieses Element normieren.", "type": "Satz", "module_number": 31070}, {"node_index": 617, "embedding": [-5.687467575073242, -16.09909439086914, 36.52228927612305, -2.775693416595459, -5.448456764221191, -19.50776481628418], "text": "Also, multiplizieren wir, genau wie wir das hier  gemacht haben, von dort nach dort, multiplizieren wir die erste Zeile mit diesem.  ", "type": "Satz", "module_number": 31070}, {"node_index": 618, "embedding": [-5.934781551361084, -22.688159942626953, 40.73192596435547, 1.3406484127044678, -5.731240272521973, -22.460390090942383], "text": "Also, i durch Omega.  ", "type": "Satz", "module_number": 31070}, {"node_index": 619, "embedding": [-4.389354705810547, -11.00291919708252, 25.313814163208008, 1.7579128742218018, -3.60636043548584, -12.813882827758789], "text": "Minuszeichen.", "type": "Satz", "module_number": 31070}, {"node_index": 620, "embedding": [-18.69622230529785, -0.8311930894851685, 77.45771026611328, -5.083503246307373, -44.81793212890625, -31.49993324279785], "text": "Ja, was kommt da heraus, wenn wir das machen, dann steht hier da eins beim zweiten  und mit diesem multiplizieren, dann sehen wir, kommt da eine Minus-1 heraus.", "type": "Satz", "module_number": 31070}, {"node_index": 621, "embedding": [-4.605320453643799, -6.209619522094727, 23.765634536743164, -2.5412731170654297, -8.390814781188965, -11.344938278198242], "text": "Hier unten bleibt  erst mal alles gleich.", "type": "Satz", "module_number": 31070}, {"node_index": 622, "embedding": [-11.152080535888672, -33.54762268066406, 71.7459945678711, -2.0549607276916504, -16.003448486328125, -39.15889358520508], "text": "Ja, und auf der anderen Seite haben wir dann hier also Minus i durch Omega.  ", "type": "Satz", "module_number": 31070}, {"node_index": 623, "embedding": [-6.390128135681152, -18.990856170654297, 40.50342559814453, -1.675133228302002, -8.968265533447266, -22.066137313842773], "text": "Hier kommt die Null und die zweite Zeile bleibt ja unberuehrt.  ", "type": "Satz", "module_number": 31070}, {"node_index": 624, "embedding": [-8.644633293151855, -9.809927940368652, 41.16396713256836, -1.4598336219787598, -11.885457038879395, -19.278352737426758], "text": "Ja, und jetzt konnten wir doch erst mal versuchen, diese eins hier schoen zu eliminieren.  ", "type": "Satz", "module_number": 31070}, {"node_index": 625, "embedding": [-4.070761680603027, -9.661808967590332, 23.5974178314209, -0.9246789813041687, -4.271888732910156, -11.995756149291992], "text": "So, die erste Zeile bleibt identisch.", "type": "Satz", "module_number": 31070}, {"node_index": 626, "embedding": [-84.1727294921875, 135.5328826904297, 235.92822265625, 10.113332748413086, -101.5379638671875, -41.603092193603516], "text": "  ", "type": "Satz", "module_number": 31070}, {"node_index": 627, "embedding": [-8.336085319519043, -14.251126289367676, 44.88349914550781, -1.6145904064178467, -11.73426628112793, -22.059328079223633], "text": "So, dann haben wir hier die Null.", "type": "Satz", "module_number": 31070}, {"node_index": 628, "embedding": [-9.73665714263916, -12.835453987121582, 48.06034469604492, -2.3125462532043457, -16.49687385559082, -23.198028564453125], "text": "Hier steht dann die zwei, weil wir ja hier schon ein Minuszeichen  haben.", "type": "Satz", "module_number": 31070}, {"node_index": 629, "embedding": [-15.184160232543945, -35.16447448730469, 90.17281341552734, -4.450423717498779, -24.703989028930664, -47.41898727416992], "text": "Und als naechstes hier steht die Null minus diesem, also plus, das heisst also,  hier steht i durch Omega und hier am Ende bleibt die eins.", "type": "Satz", "module_number": 31070}, {"node_index": 630, "embedding": [-8.845874786376953, -10.285354614257812, 43.640708923339844, -1.36391019821167, -9.001344680786133, -20.321176528930664], "text": "Okay, gut.  ", "type": "Satz", "module_number": 31070}, {"node_index": 631, "embedding": [-3.382376194000244, -9.798937797546387, 24.421443939208984, -1.7433984279632568, -2.09529185295105, -12.48783016204834], "text": "Jetzt als naechstes wuerden wir das zweite Piwo Element hier normieren.  ", "type": "Satz", "module_number": 31070}, {"node_index": 632, "embedding": [-6.7588934898376465, -16.026742935180664, 42.24160385131836, -2.051192283630371, -7.483796119689941, -21.407777786254883], "text": "Das heisst also, die erste Zeile bleibt identisch.", "type": "Satz", "module_number": 31070}, {"node_index": 633, "embedding": [-84.3713150024414, 135.7082977294922, 236.65980529785156, 10.082843780517578, -101.80868530273438, -41.83576965332031], "text": "  ", "type": "Satz", "module_number": 31070}, {"node_index": 634, "embedding": [-13.357831001281738, -18.70339012145996, 68.26518249511719, -2.8875908851623535, -22.752696990966797, -33.15252685546875], "text": "So, die zweite ist also die Null, dann haben wir hier die eins und dann haben wir hier i durch  zwei Omega und hier steht ein halb.", "type": "Satz", "module_number": 31070}, {"node_index": 635, "embedding": [-4.671049118041992, -8.683769226074219, 25.1419734954834, -2.3491873741149902, -5.394509315490723, -12.568885803222656], "text": "Wir sind jetzt immer fast fertig.  ", "type": "Satz", "module_number": 31070}, {"node_index": 636, "embedding": [-6.5237579345703125, -12.037715911865234, 35.62913513183594, -3.488940715789795, -7.117875576019287, -17.787275314331055], "text": "Wir wollen ja hier die Einheitsmatrix, also muessen wir nur noch das hier eliminieren.  ", "type": "Satz", "module_number": 31070}, {"node_index": 637, "embedding": [-6.146979808807373, -16.639259338378906, 38.6436767578125, -3.7795424461364746, -6.1513895988464355, -20.506446838378906], "text": "Das machen wir jetzt im letzten Schritt.  ", "type": "Satz", "module_number": 31070}, {"node_index": 638, "embedding": [-9.230772972106934, -21.4191951751709, 55.43115997314453, -5.6304612159729, -11.618487358093262, -28.9977970123291], "text": "Das heisst also, auf die erste Zeile addieren wir die zweite hinzu.", "type": "Satz", "module_number": 31070}, {"node_index": 639, "embedding": [-84.47907257080078, 135.62118530273438, 237.15069580078125, 9.901973724365234, -101.86395263671875, -42.08812713623047], "text": "  ", "type": "Satz", "module_number": 31070}, {"node_index": 640, "embedding": [-11.58460521697998, -21.845367431640625, 64.35882568359375, -2.626852035522461, -16.578725814819336, -32.47275924682617], "text": "So, dann steht da eins Null.", "type": "Satz", "module_number": 31070}, {"node_index": 641, "embedding": [-10.896018028259277, -23.464744567871094, 61.91802978515625, -1.5142345428466797, -8.210615158081055, -32.280120849609375], "text": "Ja, was steht jetzt hier da?", "type": "Satz", "module_number": 31070}, {"node_index": 642, "embedding": [-5.99308443069458, -13.57571792602539, 32.54648971557617, -0.7584723830223083, -4.999873161315918, -17.17405891418457], "text": "Das kann ich erweitern, zwei durch zwei.  ", "type": "Satz", "module_number": 31070}, {"node_index": 643, "embedding": [-12.47524642944336, -34.79692840576172, 76.94035339355469, -1.9664554595947266, -18.419082641601562, -41.748538970947266], "text": "Dann steht da minus eins durch zwei Omega.", "type": "Satz", "module_number": 31070}, {"node_index": 644, "embedding": [-5.56822395324707, -12.92333698272705, 31.14656639099121, -0.8086861968040466, -6.003921985626221, -16.11185646057129], "text": "Ach so, das i habe ich jetzt vergessen.  ", "type": "Satz", "module_number": 31070}, {"node_index": 645, "embedding": [-5.90256929397583, -13.045320510864258, 31.193777084350586, 0.17073553800582886, -5.611618995666504, -16.26563262939453], "text": "Hier steht ein i. So, und hier steht jetzt ein halb.", "type": "Satz", "module_number": 31070}, {"node_index": 646, "embedding": [-83.48858642578125, 129.25161743164062, 237.83090209960938, 9.650344848632812, -100.28673553466797, -44.67019271850586], "text": "Okay.  ", "type": "Satz", "module_number": 31070}, {"node_index": 647, "embedding": [-6.436857223510742, -4.587685585021973, 28.44501304626465, -0.3293611407279968, -6.6090593338012695, -12.088485717773438], "text": "Das hier unten, die zweite Zeile bleibt ja unveraendert und damit sind wir fertig.", "type": "Satz", "module_number": 31070}, {"node_index": 648, "embedding": [-84.55438232421875, 136.20631408691406, 236.9185791015625, 10.149127960205078, -101.9032211303711, -41.75706100463867], "text": "  ", "type": "Satz", "module_number": 31070}, {"node_index": 649, "embedding": [-13.072839736938477, -8.633007049560547, 59.435997009277344, -3.0889792442321777, -23.028995513916016, -26.40700912475586], "text": "Das heisst also, S hoch minus eins koennen wir jetzt also angeben und einfach direkt hier ablesen.  ", "type": "Satz", "module_number": 31070}, {"node_index": 650, "embedding": [-4.7636799812316895, -11.276992797851562, 27.21017837524414, -0.9576160311698914, -7.475093841552734, -14.255420684814453], "text": "So.  Dann habe ich hier also einen halb i durch zwei Omega und hier auch ein halb.  ", "type": "Satz", "module_number": 31070}, {"node_index": 651, "embedding": [-4.194554805755615, -13.587297439575195, 25.101795196533203, -0.7271328568458557, -3.6295084953308105, -14.130577087402344], "text": "Und da koennen wir jetzt einfach mal den Vorfaktor, also einen Vorfaktor da vorschreiben,  zwei i Omega.", "type": "Satz", "module_number": 31070}, {"node_index": 652, "embedding": [-5.765341281890869, -15.865760803222656, 32.93585205078125, -0.8719891905784607, -5.82385778427124, -18.021038055419922], "text": "Ja, dann koennen Sie leicht nachpruefen, dass sozusagen ich das einfach so wie  Ausklammerer aus jedem Eintrag in der Matrix.  ", "type": "Satz", "module_number": 31070}, {"node_index": 653, "embedding": [-8.512107849121094, -18.469934463500977, 47.66849136352539, -2.4465832710266113, -8.18144702911377, -25.114160537719727], "text": "Kann man ja nochmal schauen.", "type": "Satz", "module_number": 31070}, {"node_index": 654, "embedding": [-16.239086151123047, -8.16701889038086, 74.06532287597656, -2.2249197959899902, -16.383930206298828, -31.62792205810547], "text": "Ja.", "type": "Satz", "module_number": 31070}, {"node_index": 655, "embedding": [-6.758698463439941, -14.24401569366455, 37.10249710083008, -0.4313609004020691, -6.491982936859131, -19.193307876586914], "text": "Also, wenn ich jetzt das multipliziere mit diesen, kuerzt  ich das weg, wir bekommen ein halb.", "type": "Satz", "module_number": 31070}, {"node_index": 656, "embedding": [-7.3530964851379395, -16.1275577545166, 41.704586029052734, -2.624890089035034, -8.42497444152832, -21.8754825592041], "text": "Wenn ich jetzt dieses mit diesem multipliziere, ja,  dann muss man kurz sich ueberlegen.", "type": "Satz", "module_number": 31070}, {"node_index": 657, "embedding": [-6.001526832580566, -14.729870796203613, 34.44838333129883, -1.9906551837921143, -6.074082374572754, -18.338788986206055], "text": "Also, hier vielleicht nochmal kurz ein Hinweis,  falls man das nicht sofort sieht.", "type": "Satz", "module_number": 31070}, {"node_index": 658, "embedding": [-7.438360691070557, -24.42071533203125, 46.36647415161133, 0.5999098420143127, -8.118699073791504, -25.69849967956543], "text": "Also, eins durch zwei i Omega, um das i da weg zu  bekommen.", "type": "Satz", "module_number": 31070}, {"node_index": 659, "embedding": [-4.829000949859619, -12.832601547241211, 26.84076499938965, -0.201826274394989, -4.67673921585083, -14.326749801635742], "text": "Das war eine Division, die hatten wir ganz am Anfang bei den komplexen Zahlen.  ", "type": "Satz", "module_number": 31070}, {"node_index": 660, "embedding": [-10.149945259094238, -7.99430513381958, 47.743438720703125, -3.4914908409118652, -20.7750244140625, -21.645509719848633], "text": "Dann wuerde ich ja mit dem, dann koennte ich jetzt hier mit minus i auch multiplizieren.", "type": "Satz", "module_number": 31070}, {"node_index": 661, "embedding": [-10.533378601074219, -29.5169734954834, 66.2960205078125, -3.0422005653381348, -16.21295166015625, -35.97317123413086], "text": " Das heisst, also hier wuerde ich jetzt mit minus  zwei i Omega durch minus zwei i Omega, ja, koennte man multiplizieren.", "type": "Satz", "module_number": 31070}, {"node_index": 662, "embedding": [-11.685986518859863, -30.083778381347656, 70.50768280029297, -3.0769243240356445, -11.032824516296387, -37.74773025512695], "text": "Also, wir koennen es auch einfach  haben, ja, wir lassen es mal so stehen.", "type": "Satz", "module_number": 31070}, {"node_index": 663, "embedding": [-4.3120808601379395, -12.613466262817383, 25.686689376831055, -1.1497852802276611, -3.3625025749206543, -14.18917465209961], "text": "So, wenn ich das jetzt habe, was bekomme ich da?  ", "type": "Satz", "module_number": 31070}, {"node_index": 664, "embedding": [-9.983996391296387, -24.365449905395508, 59.32184982299805, -4.187895774841309, -11.777697563171387, -31.746965408325195], "text": "Dann wuerde ich das jetzt so multiplizieren.", "type": "Satz", "module_number": 31070}, {"node_index": 665, "embedding": [-6.166347503662109, -18.979990005493164, 38.68876266479492, -1.4377410411834717, -7.974820613861084, -21.366872787475586], "text": "Dann habe ich hier oben also minus zwei i Omega,  um was habe ich hier unten stehen?", "type": "Satz", "module_number": 31070}, {"node_index": 666, "embedding": [-4.4382500648498535, -15.221475601196289, 29.226713180541992, -1.173509120941162, -5.664172172546387, -16.31492042541504], "text": "Naja, hier unten habe ich jetzt also vier,  da steht dann minus vier i Quadrat Omega.", "type": "Satz", "module_number": 31070}, {"node_index": 667, "embedding": [-10.72670841217041, -27.46531867980957, 66.05086517333984, -3.677432060241699, -16.881122589111328, -35.221351623535156], "text": "Ja, jetzt wissen wir wieder i Quadrat ist minus  eins, also steht hier was da, da steht jetzt also minus zwei i Omega geteilt durch vier,  hier fehlt noch ein Quadrat.", "type": "Satz", "module_number": 31070}, {"node_index": 668, "embedding": [-7.915585517883301, -24.77484893798828, 50.026222229003906, -1.5566456317901611, -9.730109214782715, -27.79246711730957], "text": "So, und am Ende sehen wir also kurz sich hier einiges weg,  und am Ende steht da minus i durch  zwei Omega.", "type": "Satz", "module_number": 31070}, {"node_index": 669, "embedding": [-7.486393928527832, -8.279979705810547, 38.246421813964844, -0.9580468535423279, -6.533968925476074, -17.463382720947266], "text": "Ja, passt das?", "type": "Satz", "module_number": 31070}, {"node_index": 670, "embedding": [-6.4253435134887695, -17.58449935913086, 37.118595123291016, 0.33675915002822876, -5.277019023895264, -20.016721725463867], "text": "Ja, die zwei kurz sich mit einer zwei von diesen und das Omega  mit diesen und dann steht das genau da.", "type": "Satz", "module_number": 31070}, {"node_index": 671, "embedding": [-9.368309020996094, -17.675769805908203, 51.48897933959961, -4.040903091430664, -13.763335227966309, -26.429349899291992], "text": "Ja, und dann sieht man es vielleicht besser,  ja, wenn das sozusagen ich das jetzt mit minus eins multipliziere, kommt also auch wirklich  das heraus.", "type": "Satz", "module_number": 31070}, {"node_index": 672, "embedding": [-4.724066257476807, -11.386568069458008, 27.507169723510742, -2.1204464435577393, -5.035122871398926, -14.521465301513672], "text": "Gut, und jetzt wenden wir Satz drei an.", "type": "Satz", "module_number": 31070}, {"node_index": 673, "embedding": [-6.503548622131348, -13.936091423034668, 36.64487075805664, -2.238107681274414, -7.2334418296813965, -18.965824127197266], "text": "So, nochmal ganz kurz, ja, das war ja die  Loesungsformel, wir bestimmen erst mal der einfache Teil aber nur diesen Ausdruck.", "type": "Satz", "module_number": 31070}, {"node_index": 674, "embedding": [-84.94121551513672, 136.1571502685547, 238.56826782226562, 10.05247688293457, -102.4195327758789, -42.44321060180664], "text": "  ", "type": "Satz", "module_number": 31070}, {"node_index": 675, "embedding": [-13.128043174743652, -22.39138412475586, 70.86043548583984, -2.709559917449951, -13.251102447509766, -35.35822677612305], "text": "So, das heisst also e hoch", "type": "Satz", "module_number": 31070}, {"node_index": 676, "embedding": [-14.619023323059082, -5.143211841583252, 64.64363098144531, -4.6275153160095215, -34.06536102294922, -27.69721031188965], "text": "ta ist gleich s, e hoch TD, s hoch minus eins, und jetzt muessen wir einfach  mal einsetzen.", "type": "Satz", "module_number": 31070}, {"node_index": 677, "embedding": [-11.922466278076172, -35.025550842285156, 75.9123306274414, -2.1343250274658203, -17.879642486572266, -41.373329162597656], "text": "So, s hatten wir bestimmt, das ist i Omega minus i Omega eins eins.  ", "type": "Satz", "module_number": 31070}, {"node_index": 678, "embedding": [-84.00984191894531, 135.61924743652344, 235.13832092285156, 10.145549774169922, -101.41416931152344, -41.286128997802734], "text": "E hoch", "type": "Satz", "module_number": 31070}, {"node_index": 679, "embedding": [-6.671277046203613, 6.186814308166504, 21.342695236206055, 0.2969900965690613, -11.167238235473633, -5.757560729980469], "text": "TD, also die Diagonalmatrix waren ja die Eigenwerte, und dann, wenn wir e hoch TD  schreiben, ist das also e hoch, dann steht hier i Omega t.", "type": "Satz", "module_number": 31070}, {"node_index": 680, "embedding": [-85.02059936523438, 137.58497619628906, 237.73324584960938, 10.231691360473633, -102.9780502319336, -41.61092758178711], "text": "  ", "type": "Satz", "module_number": 31070}, {"node_index": 681, "embedding": [-7.561583042144775, -2.655996561050415, 30.686471939086914, 0.577587902545929, -7.70461368560791, -12.140457153320312], "text": "Okay, der Platz reicht jetzt nicht.", "type": "Satz", "module_number": 31070}, {"node_index": 682, "embedding": [-11.409448623657227, -35.024375915527344, 72.50743103027344, -1.6761250495910645, -15.024419784545898, -39.98280715942383], "text": "So, und jetzt kommt die Inverse, die wir da oben haben,  und dann schreiben wir hier also eins durch zwei i Omega eins minus eins, und da steht i Omega  i Omega, ja.", "type": "Satz", "module_number": 31070}, {"node_index": 683, "embedding": [-4.588742733001709, -4.740533351898193, 21.50359535217285, -1.4371856451034546, -9.185441017150879, -9.917055130004883], "text": "Gut, den Vorfaktor, also das koennen wir erst mal nach vorne schreiben,  und dann koennen wir ja zuerst erstmal das hier multiplizieren, also ohne diesen Vorfaktor.", "type": "Satz", "module_number": 31070}, {"node_index": 684, "embedding": [-85.1708984375, 137.72784423828125, 238.30191040039062, 10.088214874267578, -103.17903137207031, -41.803428649902344], "text": "  ", "type": "Satz", "module_number": 31070}, {"node_index": 685, "embedding": [-6.660552024841309, -6.2769293785095215, 29.149953842163086, 0.6870951056480408, -6.98614501953125, -12.955413818359375], "text": "Also eins durch zwei i Omega, ich bin gerade schreibvoll, so.", "type": "Satz", "module_number": 31070}, {"node_index": 686, "embedding": [-85.15321350097656, 137.43563842773438, 238.2594451904297, 10.331192016601562, -102.61660766601562, -41.83812713623047], "text": " ", "type": "Satz", "module_number": 31070}, {"node_index": 687, "embedding": [-7.9756574630737305, -2.75165057182312, 34.52384567260742, -1.4295806884765625, -15.421562194824219, -14.267826080322266], "text": "Und jetzt muessen wir die zwei Matrizen multiplizieren,  dann steht hier da e hoch i Omega t, beim naechsten steht da rechts daneben i Omega,  e hoch i Omega t, ja, hier unten steht dann da minus e hoch i Omega t, und hier dann noch mal i Omega,  e hoch minus i Omega t.", "type": "Satz", "module_number": 31070}, {"node_index": 688, "embedding": [-6.625476837158203, 2.965893507003784, 23.15195655822754, -1.5881226062774658, -15.716119766235352, -8.114927291870117], "text": "Ja, Sie sehen schon so eine Aufgabe, das ist schon doch sehr kompliziert,  hier steht die Rechnung, hier steht eins da.", "type": "Satz", "module_number": 31070}, {"node_index": 689, "embedding": [-85.57415008544922, 138.3208465576172, 239.33970642089844, 10.138256072998047, -103.82369995117188, -42.003440856933594], "text": "  ", "type": "Satz", "module_number": 31070}, {"node_index": 690, "embedding": [-17.715238571166992, 20.973371505737305, 56.89870071411133, -5.523489952087402, -46.85893630981445, -16.237154006958008], "text": "So, jetzt muessen wir das ausmultipizieren, und wenn wir das machen,  dann sehe ich ja also jetzt zum Beispiel dieser Vektor mit diesen, dann kann ich ja gleich  schon mal das ausklammern, aber das passt nicht ganz, weil hier ist ein minuser Zeichen,  aber was passen wuerde, ist wir klammern i Omega aus, das heisst also hier links oben wuerde", "type": "Satz", "module_number": 31070}, {"node_index": 691, "embedding": [-85.49402618408203, 139.06663513183594, 238.54307556152344, 10.217573165893555, -103.85308074951172, -41.427154541015625], "text": " ", "type": "Satz", "module_number": 31070}, {"node_index": 692, "embedding": [-7.903509616851807, -10.39738655090332, 39.786067962646484, -1.192091703414917, -12.976252555847168, -18.845294952392578], "text": "stehen i Omega, dann habe ich da stehen e hoch i Omega t plus e hoch minus i Omega t,  ja, ich multipliziere dieses mit diesem plus, das wird mit diesem multipliziert.", "type": "Satz", "module_number": 31070}, {"node_index": 693, "embedding": [-85.38326263427734, 138.22279357910156, 238.7244110107422, 10.301231384277344, -103.1139144897461, -41.75143051147461], "text": " ", "type": "Satz", "module_number": 31070}, {"node_index": 694, "embedding": [-8.006288528442383, 11.524595260620117, 22.60068702697754, -0.2800425887107849, -14.873590469360352, -4.62330436706543], "text": "So, das machen wir jetzt mit allen anderen auch,  links unten ist es relativ einfach,  okay, rechts oben sieht schon wieder komplizierter aus, da bekommen wir dann jeweils  immer diese Produkte, ja, das heisst da klammern wir mal i Quadrat, Omega Quadrat aus,  und dann bleibt uebrig e hoch i Omega t, dann aber minus,  hier hatten wir keinen minus, weil wir hier einen minus und hier eins hatten,", "type": "Satz", "module_number": 31070}, {"node_index": 695, "embedding": [-85.83516693115234, 139.4193572998047, 239.6310272216797, 10.240556716918945, -104.20417785644531, -41.72199630737305], "text": " ", "type": "Satz", "module_number": 31070}, {"node_index": 696, "embedding": [-14.557498931884766, -32.070552825927734, 84.8883285522461, -3.694674491882324, -23.785856246948242, -44.21761703491211], "text": "jetzt haben wir hier aber plus Zeichen und da ein minus, also steht da minus und dann e hoch  minus i Omega t. So, und jetzt noch das letzte, und da koennen wir auch wieder i Omega ausklammern,  e hoch i Omega t plus e hoch minus i Omega t.", "type": "Satz", "module_number": 31070}, {"node_index": 697, "embedding": [-85.56391906738281, 138.4813690185547, 239.27957153320312, 10.325922012329102, -103.32025909423828, -41.86618423461914], "text": " ", "type": "Satz", "module_number": 31070}, {"node_index": 698, "embedding": [-11.438066482543945, 15.88601303100586, 33.840484619140625, -2.5547983646392822, -28.56704330444336, -8.229785919189453], "text": "Okay, jetzt sind wir irgendwie fertig, das ist die Loesung oder das ist jedenfalls schon e hoch tA,  und das haben wir jetzt bestimmt mit einem Vektor, konstanten Multibezirnern sind wir fertig,  aber was haben wir denn hier gesagt, wir haben jetzt festgestellt, dass diese Linearkombination  schon alles Loesungen sind, aber irgendwie sieht das doch jetzt hier nicht nach Cosinus", "type": "Satz", "module_number": 31070}, {"node_index": 699, "embedding": [-85.8110580444336, 139.50865173339844, 239.5096435546875, 10.278764724731445, -103.96221160888672, -41.62484359741211], "text": " ", "type": "Satz", "module_number": 31070}, {"node_index": 700, "embedding": [-8.262048721313477, -1.1424813270568848, 31.537622451782227, 2.5537619590759277, -10.276693344116211, -11.652488708496094], "text": "oder Sinus", "type": "Satz", "module_number": 31070}, {"node_index": 701, "embedding": [-8.415773391723633, 3.5892508029937744, 28.18855094909668, 2.6851043701171875, -15.32204532623291, -8.841922760009766], "text": "aus, ja, oder doch, wenn wir noch mal naeher hinschauen, das was hier so steht,  ja, wir erinnern uns nochmal,  und zwar naemlich e hoch i Omega t, was war das nochmal, das ist nichts anderes als der Cosinus  von Omega t plus i Sinus Omega t, und was gilt dafuer, wenn wir noch mal an den Realteil denken,  also der Realteil davon ist ja offensichtlich der Cosinus,", "type": "Satz", "module_number": 31070}, {"node_index": 702, "embedding": [-86.21139526367188, 139.73202514648438, 240.90960693359375, 10.444997787475586, -104.58053588867188, -42.051429748535156], "text": " ", "type": "Satz", "module_number": 31070}, {"node_index": 703, "embedding": [-8.609450340270996, 9.707915306091309, 27.372989654541016, -1.7344837188720703, -18.0216064453125, -7.474337577819824], "text": "und wir haben ja nochmal den Realteil in einer komplexen Zahl bestimmt, das war so was wie,  wenn ich die Zahl z nenne, dann war das z plus z quer das gesamte durch 2,  naja und das z ist jetzt eben das hier, also  ein halb e hoch i, also das ist jetzt z plus z quer, wir haetten das schon mal gesehen, z quer ist", "type": "Satz", "module_number": 31070}, {"node_index": 704, "embedding": [-86.11196899414062, 139.8761749267578, 240.4979705810547, 10.231420516967773, -104.40779876708984, -41.900386810302734], "text": " ", "type": "Satz", "module_number": 31070}, {"node_index": 705, "embedding": [-6.68588924407959, 4.8242573738098145, 22.843233108520508, -0.359219491481781, -9.130515098571777, -6.900041103363037], "text": "einfach, wenn wir dann jetzt hier das minus Zeichen schreiben, das haben wir auch schon mal auf der e-Kreide  gemacht, okay und das gleiche koennen wir fuer den Sinus machen", "type": "Satz", "module_number": 31070}, {"node_index": 706, "embedding": [-9.164973258972168, 3.7860677242279053, 34.61796188354492, -3.3986423015594482, -20.124507904052734, -12.822662353515625], "text": ", das war naemlich,  das ist jetzt hier der Imaginaerteil, und wie war die Formel fuer eine komplexe Zahl fuer den  Imaginaerteil, das war z minus z quer und das gesamte geteilt durch 2i, also haben wir hier den", "type": "Satz", "module_number": 31070}, {"node_index": 707, "embedding": [-86.35309600830078, 139.67015075683594, 241.7003173828125, 10.125463485717773, -104.80378723144531, -42.45913314819336], "text": " ", "type": "Satz", "module_number": 31070}, {"node_index": 708, "embedding": [-7.554082870483398, -7.694652080535889, 36.37385177612305, -1.1538357734680176, -13.063863754272461, -16.61310577392578], "text": "Vorfaktor 1 durch 2i, e hoch i omega t minus e hoch minus i omega t, gut und jetzt schreibe ich mal  in schwarz weiter, ja was sehen wir denn jetzt hier, ja also wenn ich das hier mal rein multiply,  dann kuerzt sich das alles weg und dann steht also das da mit Vorfaktor 1 halb, ja und das ist  cos omega t, also  cos omega t, okay weiter, jetzt hier das ganze, das koennen wir nochmal dazuschreiben,", "type": "Satz", "module_number": 31070}, {"node_index": 709, "embedding": [-86.0707015991211, 139.7356414794922, 240.3976593017578, 10.382951736450195, -104.07886505126953, -41.859371185302734], "text": " ", "type": "Satz", "module_number": 31070}, {"node_index": 710, "embedding": [-13.43720817565918, -29.7670841217041, 77.3446044921875, -2.1885805130004883, -21.78834342956543, -40.27858352661133], "text": "das ist ja einfach nur minus 1, also haben wir da minus omega  quadrat, ja was haben wir noch jetzt hier, wenn wir das multiplizieren mit diesem jetzt hier,  denn kuerzt sich 1 omega heraus, dann steht minus omega und dann steht 1 durch 2i mal diesem Ausdruck,  aber das ist doch der Sinus, das heisst der Vorfaktor hier ist minus omega und dann kommt", "type": "Satz", "module_number": 31070}, {"node_index": 711, "embedding": [-86.12074279785156, 139.52854919433594, 240.74169921875, 10.412887573242188, -103.97599029541016, -42.05138397216797], "text": " ", "type": "Satz", "module_number": 31070}, {"node_index": 712, "embedding": [-6.808657646179199, 7.7018351554870605, 21.03632354736328, -0.27022725343704224, -13.499714851379395, -5.273299217224121], "text": "sinus omega t, so und dann geht es weiter, hier haben wir wieder so ein Ausdruck der hier steht  und dann haben wir hier also noch 1 durch 2i, uebrig bleibt einfach nur der Vorfaktor 1 durch omega  und dann steht hier sinus omega t, so und das gleiche machen wir jetzt noch mit dem letzten,  das schreit ja foermlich nach cos, das steht hier da, das iw kuerzt sich weg,", "type": "Satz", "module_number": 31070}, {"node_index": 713, "embedding": [-8.175065040588379, 4.564983367919922, 28.276599884033203, -1.1719348430633545, -17.759199142456055, -9.649356842041016], "text": "die 2, die brauchen", "type": "Satz", "module_number": 31070}, {"node_index": 714, "embedding": [-15.597670555114746, -19.766159057617188, 77.69488525390625, -1.727867603302002, -15.20073413848877, -37.11720657348633], "text": " wir da", "type": "Satz", "module_number": 31070}, {"node_index": 715, "embedding": [-5.869528770446777, -3.1625072956085205, 26.240711212158203, -1.1704063415527344, -9.921628952026367, -11.406118392944336], "text": "vor und dann steht da einfach nur cos omega t da, ja", "type": "Satz", "module_number": 31070}, {"node_index": 716, "embedding": [-11.195024490356445, -1.237373948097229, 47.41785430908203, -4.2827253341674805, -25.127368927001953, -19.59697914123535], "text": "und das ist nochmal, oben haben wir ja so  angefangen e hoch ta, ja so das war jetzt ein bisschen komplizierte Rechnung, aber wir haben  jetzt also gesehen, jetzt haben wir eine Loesung bekommen oder anders gesagt, wie sieht denn jetzt  die Loesung aus von unserem System, die Loesung ist jetzt hier also e hoch ta multipliziert mit", "type": "Satz", "module_number": 31070}, {"node_index": 717, "embedding": [-86.3459243774414, 139.9751434326172, 241.39183044433594, 10.311208724975586, -104.44778442382812, -42.180171966552734], "text": " ", "type": "Satz", "module_number": 31070}, {"node_index": 718, "embedding": [-19.370811462402344, 21.885700225830078, 63.69403076171875, -6.79634952545166, -50.61408996582031, -18.816007614135742], "text": "diesem Vektor c, nochmal ganz kurz, das ist also jetzt das hier und damit haben wir jetzt das  System, ich gehe mal ganz nach oben,", "type": "Satz", "module_number": 31070}, {"node_index": 719, "embedding": [-10.138111114501953, 0.8575946092605591, 41.363868713378906, -4.373940467834473, -24.534624099731445, -16.47355842590332], "text": "so wir wollten ja zuerst das hier loesen, okay dafuer haben wir  die Loesung, aber wir wissen auch die Loesung die wir jetzt haben y und von t, die koennen wir auch  gleich setzen diesen, ja so haben wir angefangen, das heisst also hier steht Ableitung x und die", "type": "Satz", "module_number": 31070}, {"node_index": 720, "embedding": [-86.44606018066406, 140.23927307128906, 241.63278198242188, 10.269681930541992, -104.61246490478516, -42.182273864746094], "text": " ", "type": "Satz", "module_number": 31070}, {"node_index": 721, "embedding": [-15.221169471740723, 9.414566040039062, 55.74059295654297, -5.207979202270508, -35.82478332519531, -19.436569213867188], "text": "Funktion x selbst, also schreiben wir das mal hierhin, dann steht hier da x, von t, x von t  so und wenn wir jetzt nochmal die Loesung hier aufschreiben, ich bin mal so frei und kopiere das  wieder, das ist ja genau das was wir gerade ausgerechnet haben, also das ist ja e hoch ta  so und das multiplizieren wir mit c, dann nehme ich wieder die Darstellung c1, c2, so", "type": "Satz", "module_number": 31070}, {"node_index": 722, "embedding": [-11.361123085021973, -24.21323013305664, 64.97773742675781, -2.307384490966797, -10.599720001220703, -33.772586822509766], "text": "wenn wir das", "type": "Satz", "module_number": 31070}, {"node_index": 723, "embedding": [-86.45755004882812, 139.7893524169922, 241.92027282714844, 10.439582824707031, -104.03729248046875, -42.421287536621094], "text": " ", "type": "Satz", "module_number": 31070}, {"node_index": 724, "embedding": [-8.726523399353027, 16.76902198791504, 22.95701026916504, -0.9342488646507263, -21.456146240234375, -3.0556862354278564], "text": "jetzt ausmultipizieren, dann steht da c1 cos omega t minus c2 omega sinus von omega t, das ist ja  Matrix-Vektor-Multipilgation, da kommt ein Vektor heraus und beim zweiten bekommen wir c1 durch omega  sinus omega t plus c2 cos omega t, so also das was jetzt hier steht ist jetzt also die Loesung des  Systems und wir hatten die differenzial gleichen zweite Ordnung umgewandelt in das System und zwar", "type": "Satz", "module_number": 31070}, {"node_index": 725, "embedding": [-86.78237915039062, 141.61239624023438, 242.01678466796875, 10.352132797241211, -105.6518783569336, -41.8407096862793], "text": " ", "type": "Satz", "module_number": 31070}, {"node_index": 726, "embedding": [-14.017919540405273, 22.967731475830078, 41.258541107177734, -4.154693126678467, -37.61616516113281, -8.908519744873047], "text": "mit dieser Substitution, naja jetzt haben wir diesen Vektor ist gleich diesen Vektor, also hier  steht x von t, also ist das x von t, das heisst wir lesen direkt die Loesung ab, x von t ist dann  gleich c1, 1 durch omega sinus omega t plus c2 cos omega t und damit haben wir die Loesung der  Differenzialgleichung bestimmt, genauer gesagt dieser und wir sehen auch wenn wir nochmal den Test", "type": "Satz", "module_number": 31070}, {"node_index": 727, "embedding": [-86.84355926513672, 141.5956573486328, 242.29722595214844, 10.301553726196289, -105.62503814697266, -41.97083282470703], "text": " ", "type": "Satz", "module_number": 31070}, {"node_index": 728, "embedding": [-85.784423828125, 132.9557647705078, 244.80943298339844, 10.191215515136719, -102.50556182861328, -45.98567199707031], "text": "machen", "type": "Satz", "module_number": 31070}, {"node_index": 729, "embedding": [-11.900294303894043, 19.591529846191406, 33.80817794799805, -2.4077062606811523, -31.15511703491211, -6.7501068115234375], "text": ", hier steht das ist die Ableitung, das muss also die Ableitung sein, wenn wir das mal  ableiten aus sinus wird cosus, das passt, die innere Ableitung kommt davor, dann kuerzt sich das omega  weg, es bleibt c1 stehen, okay super, cosus abgeleitet, ergibt minus sinus, sinus und minus und die  innere Ableitung das kommt davor, das steht auch da, also tatsaechlich das passt wunderbar,", "type": "Satz", "module_number": 31070}, {"node_index": 730, "embedding": [-85.88288879394531, 127.96260070800781, 249.22320556640625, 9.655477523803711, -103.28367614746094, -49.56558609008789], "text": "damit", "type": "Satz", "module_number": 31070}, {"node_index": 731, "embedding": [-87.02326202392578, 141.5082244873047, 242.9339599609375, 10.579687118530273, -104.79806518554688, -42.17427444458008], "text": " ", "type": "Satz", "module_number": 31070}, {"node_index": 732, "embedding": [-6.55049991607666, 6.771483898162842, 20.513261795043945, 0.31799250841140747, -9.511557579040527, -5.199212551116943], "text": "bekommen wir jetzt also die Loesung, das heisst tatsaechlich alle Loesungen sehen eben so aus und  nicht irritiert sein,", "type": "Satz", "module_number": 31070}, {"node_index": 733, "embedding": [-10.214797973632812, 11.226346969604492, 33.45561599731445, -3.1045005321502686, -26.513208389282227, -9.639606475830078], "text": "dass jetzt hier c1, c2, jetzt steht hier noch dieser Vorfaktor, das ist  einfach eine neue Konstante, das tut nichts zur Sache, c1 und c2 sind ja jetzt hier trotzdem aus R,  also hier koennen wir noch sagen mit c2 aus R, so das waere jetzt also die Differenzialgleichung", "type": "Satz", "module_number": 31070}, {"node_index": 734, "embedding": [-87.16349029541016, 141.5347900390625, 243.59129333496094, 10.353687286376953, -105.72079467773438, -42.48292922973633], "text": " ", "type": "Satz", "module_number": 31070}, {"node_index": 735, "embedding": [-10.042397499084473, -2.3958184719085693, 45.73625564575195, -3.6760969161987305, -20.79952621459961, -18.59041976928711], "text": "zu loesen und wenn man jetzt aber noch eine eindeutige Loesung haben moechte, dann hatten wir in den  letzten Videos gesehen, haben wir das Ganze in einem Anfangswertproblem ueberfuehrt und das kann man  jetzt hier auch machen, also eindeutige Loesung bekommt man dann durch die durch die Angabe  von Anfangswerten, wie war das bisher, wir hatten bei der Differenzialgleichung", "type": "Satz", "module_number": 31070}, {"node_index": 736, "embedding": [-10.192803382873535, 11.586858749389648, 32.20541763305664, 1.0410213470458984, -13.44329833984375, -7.768794059753418], "text": "1.", "type": "Satz", "module_number": 31070}, {"node_index": 737, "embedding": [-4.666736125946045, -4.709768772125244, 20.827220916748047, 2.669257402420044, -4.9910101890563965, -8.811784744262695], "text": "Ordnung  hatten wir einen Anfangswert bestimmt und bei dem System hatten wir einen Vektor und jetzt ist es so  dadurch, dass wir eine skalare Differenzialgleichung, also eine kein System haben, 2.", "type": "Satz", "module_number": 31070}, {"node_index": 738, "embedding": [-8.297184944152832, 1.3239668607711792, 32.34221267700195, -0.6381046175956726, -18.498241424560547, -12.07667350769043], "text": "Ordnung brauchen wir  2 Anfangswerte und das heisst wir machen jetzt hier so was x von t0 geben wir an, das ist dann so in  der Interpretation der Startort und dann geben wir jetzt noch was fuer die erste Ableitung an,  das liegt daran, dass wir die zweite Ordnung haben, haetten wir die dritte Ordnung braeuchten wir", "type": "Satz", "module_number": 31070}, {"node_index": 739, "embedding": [-87.42932891845703, 141.8617401123047, 244.4734649658203, 10.27023696899414, -106.38349914550781, -42.73750686645508], "text": " ", "type": "Satz", "module_number": 31070}, {"node_index": 740, "embedding": [-7.053128719329834, 9.335912704467773, 20.243900299072266, 0.29799050092697144, -12.080171585083008, -4.2135162353515625], "text": "drei solche Anfangswerte, dann wuerden wir noch einen Wert fuer die zweite Ableitung vorgeben und das ist  jetzt hier einfach als Interpretation die Startgeschwindigkeit, hatten wir ja schon mal gesehen  mit der Ableitung, als wir die Begriffe eingefuehrt haben.", "type": "Satz", "module_number": 31070}, {"node_index": 741, "embedding": [-7.797615051269531, 4.877335071563721, 26.117860794067383, -0.6715466380119324, -17.205642700195312, -8.24802017211914], "text": "Gut und zusammengefasst auf der Folie in  kurz Form sehen Sie jetzt nochmal hier die Idee, die ich jetzt gerade auf der e-Kreide praesentiert habe.", "type": "Satz", "module_number": 31070}, {"node_index": 742, "embedding": [-87.36437225341797, 141.4461669921875, 244.3048553466797, 10.485528945922852, -105.74810028076172, -42.74547576904297], "text": " ", "type": "Satz", "module_number": 31070}, {"node_index": 743, "embedding": [-13.054139137268066, 3.7426869869232178, 52.425201416015625, -4.529842376708984, -27.24313735961914, -19.662961959838867], "text": "Ich habe es jetzt mal wirklich komplett durchgerechnet, dass Sie mal sehen, wie man also das loest, dass  man jetzt also auch nicht nur einfach sagt, okay jetzt das sind die Loesungen und gibt es weitere  Loesungen, wir haben einfach alle Loesungen angegeben direkt und haben hier also gesehen,  wir haben also eine Differenzialgleichung 2.", "type": "Satz", "module_number": 31070}, {"node_index": 744, "embedding": [-6.883044719696045, 8.157684326171875, 24.4711856842041, -3.306905508041382, -19.874929428100586, -6.939509391784668], "text": "Ordnung ueberfuehrt in einem System von 2 Gleichungen  der ersten Ordnung und das geht dann auch mit hoeheren Ordnung, das heisst wenn Sie eine  Differenzialgleichung eine lineare Enteordnung haben, dann koennen Sie das einfach ueberfuehren in  ein System von Differenzialgleichung 1. Ordnung und zwar genauer gesagt mit N solchen Gleichungen.", "type": "Satz", "module_number": 31070}, {"node_index": 745, "embedding": [-87.36011505126953, 142.24830627441406, 244.09640502929688, 10.314720153808594, -106.1815185546875, -42.41143798828125], "text": "  ", "type": "Satz", "module_number": 31070}, {"node_index": 746, "embedding": [-7.867657661437988, 12.45639419555664, 20.347471237182617, 0.408059298992157, -14.874138832092285, -3.3318424224853516], "text": "Gut im Skript sehen Sie dann noch weitere Beispiele, auf die ich jetzt hier nicht eingehen werde,  wir koennen also jetzt hier zu dieser Gleichung, die wir hier eigentlich betrachtet haben,  da fehlt jetzt zum Beispiel noch die erste Ableitung, die kann man noch hinzufuegen,  der Trick laeuft aber analog zu dem, was wir gerade gemacht haben, die Ueberfuehrung in", "type": "Satz", "module_number": 31070}, {"node_index": 747, "embedding": [-87.54718780517578, 142.47987365722656, 244.17478942871094, 10.566707611083984, -106.12435913085938, -42.352783203125], "text": " ", "type": "Satz", "module_number": 31070}, {"node_index": 748, "embedding": [-7.5151214599609375, -6.467153072357178, 35.03915786743164, -0.7760640978813171, -8.009522438049316, -15.497496604919434], "text": "ein System, um es dann zu loesen.", "type": "Satz", "module_number": 31070}, {"node_index": 749, "embedding": [-6.162332057952881, -3.288780927658081, 29.162765502929688, -0.6277615427970886, -12.856576919555664, -11.754179000854492], "text": "So das war jetzt also der Crash Course Lineare Differenzialgleichung,  wie schon gesagt am Anfang der Vorlesung in den Kursen Differenzialgleichung fuer  Ingenieurwissenschaften und auch dem Kurs ITP.tg wird das noch mal alles ausfuehrlich behandelt,  wenn Sie daran also Interesse haben, koennen Sie das gerne besuchen.", "type": "Satz", "module_number": 31070}, {"node_index": 750, "embedding": [-5.516186714172363, -4.927857875823975, 26.45782470703125, -0.7385310530662537, -10.664423942565918, -11.404791831970215], "text": "Ja und damit sind wir dann  auch schon am Ende angekommen, nach 43 Vorlesungen.", "type": "Satz", "module_number": 31070}, {"node_index": 751, "embedding": [-6.870656490325928, -15.842081069946289, 40.76601791381836, -3.270750045776367, -7.519510746002197, -20.945619583129883], "text": "Es war jetzt relativ viel Stoff, die lineare Algebra  ist jetzt ja damit abgeschlossen, die Analysis ist in dem Sinne abgeschlossen, dass wir also  die Behandlung von Funktionen von R nach R jetzt abschliessen koennen und die Fortsetzung dieser  Vorlesung ist dann die Analysis 2 fuer Ingenieurwissenschaften und da geht es dann um die", "type": "Satz", "module_number": 31070}, {"node_index": 752, "embedding": [-87.4549789428711, 140.9095916748047, 245.260986328125, 10.361160278320312, -105.30974578857422, -43.29603576660156], "text": " ", "type": "Satz", "module_number": 31070}, {"node_index": 753, "embedding": [-5.671230792999268, 2.2043449878692627, 19.577302932739258, 1.2869420051574707, -6.287145614624023, -6.137652397155762], "text": "mehr dimensionale Analysis, das heisst da wollen wir dann solche Sachen klaeren.", "type": "Satz", "module_number": 31070}, {"node_index": 754, "embedding": [-7.634335517883301, -2.2621569633483887, 29.520063400268555, 2.5161051750183105, -14.48304557800293, -11.42674446105957], "text": "Wie leitet man eine  Funktion, die vom R hoch M in den R hoch N abbildet, wie leitet man die ab und ja wie integriert man  ueberhaupt, wir haben jetzt hier in diesem Kurs eben nur Funktionen von R nach R behandelt.", "type": "Satz", "module_number": 31070}, {"node_index": 755, "embedding": [-87.54244232177734, 141.58238220214844, 244.84274291992188, 10.683149337768555, -105.72496795654297, -42.87393569946289], "text": "  ", "type": "Satz", "module_number": 31070}, {"node_index": 756, "embedding": [-12.621197700500488, 10.77122974395752, 43.27170181274414, 3.644111394882202, -18.675954818725586, -10.908913612365723], "text": "Ich begruesse Sie recht herzlich zur 40. Vorlesung im Kurs Analysis 1 und linaere Algebra fuer Ingenieurwissenschaften.  ", "type": "Satz", "module_number": 31070}, {"node_index": 757, "embedding": [-2.3486084938049316, -5.831036567687988, 14.928302764892578, 1.01651930809021, -4.2381720542907715, -6.538670539855957], "text": "Wir naehern uns dem Semesterende und ich hoffe, Sie haben sich ein wenig erholt von den drei Vorlesungen ueber die Fourier-Analysis.  ", "type": "Satz", "module_number": 31070}, {"node_index": 758, "embedding": [-4.5678911209106445, -7.036666393280029, 23.68195152282715, -0.34270280599594116, -6.9760332107543945, -10.757828712463379], "text": "Wir sind jetzt in der 40. Vorlesung und fangen mit dem Gebiet Reihen an und das werden wir dann auch in den naechsten beiden Vorlesungen noch tun.", "type": "Satz", "module_number": 31070}, {"node_index": 759, "embedding": [-87.63825225830078, 141.59974670410156, 245.29531860351562, 10.550113677978516, -105.67545318603516, -43.041446685791016], "text": "  ", "type": "Satz", "module_number": 31070}, {"node_index": 760, "embedding": [-6.295123100280762, 3.603210687637329, 22.504833221435547, -0.7050673365592957, -7.5556488037109375, -7.202566623687744], "text": "Bevor wir jetzt mal erklaeren, was eine Reihe ist, wir hatten ja schon mal Reihen gesehen, aber wissen eigentlich gar nicht genau, was die formale Definition ist.  ", "type": "Satz", "module_number": 31070}, {"node_index": 761, "embedding": [-7.058687686920166, -8.573141098022461, 34.89625930786133, -3.1202280521392822, -7.7952494621276855, -16.60825538635254], "text": "Vielleicht eine kleine Anfangsmotivation, und zwar ist jetzt zum Beispiel eine unendliche Reihe.  ", "type": "Satz", "module_number": 31070}, {"node_index": 762, "embedding": [-8.473219871520996, -15.183972358703613, 43.81105422973633, -2.982537269592285, -8.060309410095215, -22.2943172454834], "text": "Und so schauen wir uns mal ein kleines Beispiel an.", "type": "Satz", "module_number": 31070}, {"node_index": 763, "embedding": [-87.8349609375, 141.1038360595703, 246.39414978027344, 10.487062454223633, -105.59912109375, -43.668338775634766], "text": "  ", "type": "Satz", "module_number": 31070}, {"node_index": 764, "embedding": [-6.34276008605957, 4.4913763999938965, 22.002901077270508, -0.6898002028465271, -8.99425220489502, -6.728363037109375], "text": "Also, formal hatten wir schon gesehen, das war also das Summenzeichen, hatten einen Startindex und jetzt geht das Ganze nicht bis zu einem endlichen Index, sondern eben unendlich.  ", "type": "Satz", "module_number": 31070}, {"node_index": 765, "embedding": [-6.50396728515625, -9.020355224609375, 34.463993072509766, -4.224918365478516, -9.363822937011719, -16.843847274780273], "text": "Und wenn ich jetzt zum Beispiel mal, das waere jetzt eine Reihe und wenn ich die jetzt mal ausschreibe, was steht da?  ", "type": "Satz", "module_number": 31070}, {"node_index": 766, "embedding": [-11.413341522216797, -24.474348068237305, 66.29515075683594, -4.804523944854736, -18.436832427978516, -34.59236526489258], "text": "Ja, dann sehe ich halt, hier kommt immer 1 und minus 1 heraus.", "type": "Satz", "module_number": 31070}, {"node_index": 767, "embedding": [-87.59658813476562, 141.66824340820312, 245.1765899658203, 10.525676727294922, -105.46966552734375, -42.99156951904297], "text": "  ", "type": "Satz", "module_number": 31070}, {"node_index": 768, "embedding": [-7.243107795715332, -0.1655675321817398, 28.144319534301758, -0.08205980807542801, -13.169778823852539, -10.730525970458984], "text": "1, minus 1, plus 1, minus 1, plus 1, minus 1, plus minus, und so weiter.  ", "type": "Satz", "module_number": 31070}, {"node_index": 769, "embedding": [-9.806777000427246, -17.38871192932129, 50.82585906982422, 0.3219936490058899, -9.44314956665039, -25.507314682006836], "text": "Und die Frage ist, was kommt jetzt hier eigentlich heraus bei dieser Reihe?  ", "type": "Satz", "module_number": 31070}, {"node_index": 770, "embedding": [-5.120254039764404, -13.926765441894531, 29.188146591186523, -0.3355545401573181, -4.755367279052734, -15.70676326751709], "text": "Ja, das ist gar nicht mal so einfach zu beantworten, wir hatten jetzt zwei Moeglichkeiten.", "type": "Satz", "module_number": 31070}, {"node_index": 771, "embedding": [-87.80194854736328, 141.57894897460938, 246.0276336669922, 10.51687240600586, -105.64745330810547, -43.34159469604492], "text": "  ", "type": "Satz", "module_number": 31070}, {"node_index": 772, "embedding": [-12.835481643676758, 3.0316519737243652, 49.23359680175781, -2.588881015777588, -29.11147689819336, -18.564489364624023], "text": "Wir koennten zum Beispiel auch, betrachten das nochmal separat, ich koennte jetzt auch sagen, schreibt das nochmal auf, minus 1, 1, minus 1, plus 1, minus 1, plus 1, minus 1, so.  ", "type": "Satz", "module_number": 31070}, {"node_index": 773, "embedding": [-8.323442459106445, -13.6957368850708, 44.7432861328125, -3.758909225463867, -10.764470100402832, -22.60089683532715], "text": "Und dann geht das ja irgendwie so weiter.  ", "type": "Satz", "module_number": 31070}, {"node_index": 774, "embedding": [-13.135920524597168, -21.447677612304688, 70.39571380615234, -4.270374298095703, -23.473934173583984, -35.19473648071289], "text": "Und jetzt sehen wir natuerlich, das ist 0, das ist 0, und das ist auch 0.  Und so koennen wir das ja eigentlich weiter machen und am Ende kommt 0 heraus.", "type": "Satz", "module_number": 31070}, {"node_index": 775, "embedding": [-87.72625732421875, 141.98013305664062, 245.48394775390625, 10.547517776489258, -105.61200714111328, -42.99650955200195], "text": "  ", "type": "Satz", "module_number": 31070}, {"node_index": 776, "embedding": [-6.9037766456604, 3.7343595027923584, 25.214683532714844, -0.757487952709198, -7.681685447692871, -8.305408477783203], "text": "Aber ist das wirklich richtig?  ", "type": "Satz", "module_number": 31070}, {"node_index": 777, "embedding": [-7.2753005027771, -8.973773002624512, 37.32810592651367, -2.6415371894836426, -7.638782501220703, -17.661314010620117], "text": "Ich schreibe nochmal ein Fragezeichen dazu.  ", "type": "Satz", "module_number": 31070}, {"node_index": 778, "embedding": [-10.888790130615234, -10.726652145385742, 51.77877426147461, -2.628603458404541, -21.63221549987793, -24.075586318969727], "text": "Wir koennen das Ganze auch anders betrachten, indem ich 1 und dann minus 1, plus 1, minus 1, plus 1, minus 1, plus 1 mache.  ", "type": "Satz", "module_number": 31070}, {"node_index": 779, "embedding": [-13.60073184967041, -21.203834533691406, 72.27893829345703, -4.849481582641602, -23.97848129272461, -35.91868209838867], "text": "Ja, jetzt koennte ich aber auch behaupten, na gut, jetzt koennte ich einfach sagen, das ist ja immer 0.  Ja, dann bleibt aber eigentlich diese 1 uebrig, das heisst, dann kommt hier 1 heraus.", "type": "Satz", "module_number": 31070}, {"node_index": 780, "embedding": [-87.80915832519531, 142.11769104003906, 245.72637939453125, 10.541799545288086, -105.71244049072266, -43.045433044433594], "text": "  ", "type": "Satz", "module_number": 31070}, {"node_index": 781, "embedding": [-5.398047924041748, 0.8707689046859741, 21.018596649169922, 0.3237742781639099, -5.1388397216796875, -7.347997665405273], "text": "Ja, irgendwas kann hier nicht stimmen.  ", "type": "Satz", "module_number": 31070}, {"node_index": 782, "embedding": [-4.768988132476807, -13.953014373779297, 30.999929428100586, -1.316246509552002, -3.205397605895996, -16.662647247314453], "text": "Das muessen wir uns also naeher anschauen bei Reihen, dadurch, dass wir eben unendliche Summation haben.  ", "type": "Satz", "module_number": 31070}, {"node_index": 783, "embedding": [-6.153899669647217, -15.391963958740234, 38.63410949707031, -3.514719009399414, -6.641711235046387, -20.5898494720459], "text": "Und was wir aber schon kennen, also Reihen sind uns nicht komplett unbekannt, wir haben sie aber nie so wirklich naeher definiert, wir kennen aber schon Taylor rein.", "type": "Satz", "module_number": 31070}, {"node_index": 784, "embedding": [-88.09618377685547, 142.0785369873047, 247.06040954589844, 10.382625579833984, -106.123046875, -43.61396408081055], "text": "  ", "type": "Satz", "module_number": 31070}, {"node_index": 785, "embedding": [-6.061963081359863, 2.833698272705078, 22.598669052124023, -1.034769058227539, -7.560331344604492, -7.55625057220459], "text": "Da jetzt zum Beispiel hatten wir das dann so gemacht, da haben wir das End-Tayler-Polynome genommen und dann haben wir einfach End gegen unendlich geschickt.  ", "type": "Satz", "module_number": 31070}, {"node_index": 786, "embedding": [-6.075821876525879, -11.956849098205566, 34.393856048583984, -2.8187313079833984, -6.571423530578613, -17.57916831970215], "text": "Da haben wir das so ein Zeichen nochmal schoen.  ", "type": "Satz", "module_number": 31070}, {"node_index": 787, "embedding": [-5.641005992889404, -13.896512985229492, 34.587764739990234, -3.372159719467163, -5.8191704750061035, -18.38059425354004], "text": "Also k gleich 0 bis n.  Und jetzt nehme ich hier mal das End-Tayler-Polynome der Exponentialfunktion und das hatten wir dann formal so aufgeschrieben.", "type": "Satz", "module_number": 31070}, {"node_index": 788, "embedding": [-88.10531616210938, 142.0227813720703, 247.11354064941406, 10.460323333740234, -106.04386901855469, -43.62477493286133], "text": "  ", "type": "Satz", "module_number": 31070}, {"node_index": 789, "embedding": [-7.4607133865356445, -2.7345786094665527, 30.6938533782959, 0.0667601153254509, -10.137100219726562, -12.483652114868164], "text": "k gleich 0 bis unendlich x hoch k durch k-Fakultaet.  ", "type": "Satz", "module_number": 31070}, {"node_index": 790, "embedding": [-7.692385673522949, -12.332901000976562, 41.2464485168457, -0.749591052532196, -11.255366325378418, -19.672571182250977], "text": "Und das hatten wir schon gesehen, das ist dann die Exponentialfunktion.  ", "type": "Satz", "module_number": 31070}, {"node_index": 791, "embedding": [-4.678368091583252, -14.751307487487793, 31.238630294799805, -1.7510643005371094, -5.179526329040527, -16.94972801208496], "text": "Und das Ganze hier war ja nichts anderes als das End-Tayler-Polynome.  ", "type": "Satz", "module_number": 31070}, {"node_index": 792, "embedding": [-4.884568691253662, -12.659284591674805, 32.79448699951172, -2.4043381214141846, -6.022884368896484, -16.713735580444336], "text": "Also enden gerade der Exponentialfunktion.  ", "type": "Satz", "module_number": 31070}, {"node_index": 793, "embedding": [-8.778355598449707, -19.91538429260254, 52.38564682006836, -2.854207992553711, -13.538352012634277, -27.141542434692383], "text": "Und zwar hier mit dem Entwicklungspunkt x 0 gleich 0.", "type": "Satz", "module_number": 31070}, {"node_index": 794, "embedding": [-88.029052734375, 142.4654998779297, 246.34825134277344, 10.643741607666016, -106.01541137695312, -43.14329147338867], "text": "  ", "type": "Satz", "module_number": 31070}, {"node_index": 795, "embedding": [-6.076890468597412, -3.8184046745300293, 29.053564071655273, -0.2902044653892517, -7.801910400390625, -11.470623016357422], "text": "Ja und was wir auch hatten in den letzten drei Vorlesungen, da hatten wir dann auch schon Fourier-Reihen kennengelernt.  ", "type": "Satz", "module_number": 31070}, {"node_index": 796, "embedding": [-5.095270156860352, -10.21976089477539, 27.015336990356445, -0.48608559370040894, -3.335512638092041, -13.510913848876953], "text": "Wie sahen die aus?  ", "type": "Satz", "module_number": 31070}, {"node_index": 797, "embedding": [-6.514913558959961, -14.288476943969727, 34.88871765136719, -0.6352779269218445, -3.7770280838012695, -18.384496688842773], "text": "Dann nehmen wir mal das Beispiel der Segezahnkurve, auch hier hatten wir gesagt Limes n gegen unendlich und zwar vom Enten Fourier-Polynome.  ", "type": "Satz", "module_number": 31070}, {"node_index": 798, "embedding": [-9.309118270874023, -13.991086959838867, 47.085960388183594, -1.3888533115386963, -14.200309753417969, -23.178712844848633], "text": "Also hier k gleich 0 bis n.", "type": "Satz", "module_number": 31070}, {"node_index": 799, "embedding": [-88.17796325683594, 142.6114959716797, 246.81398010253906, 10.652517318725586, -106.2302474975586, -43.279911041259766], "text": "  ", "type": "Satz", "module_number": 31070}, {"node_index": 800, "embedding": [-7.839658737182617, -3.3305554389953613, 33.9251594543457, -1.1438779830932617, -8.870725631713867, -14.266268730163574], "text": "Und bei der Segezahnkurve hatten wir ja ausgerechnet, dass die Koffizienten hier 2 durch k-P und dann mal Sinus k-P-T.  Und das als Reihe ist dann eben genau, diese Abkuerzung hatten wir dann dafuer verwendet, dass wir den Limes also vom Enten Fourier-Polynome nehmen.  ", "type": "Satz", "module_number": 31070}, {"node_index": 801, "embedding": [-5.8202056884765625, -8.568248748779297, 32.22816848754883, -3.6574840545654297, -8.810650825500488, -15.754209518432617], "text": "Schreibe ich das hier nochmal dazu, das ist also Entes Fourier-Polynome.  ", "type": "Satz", "module_number": 31070}, {"node_index": 802, "embedding": [-5.951214790344238, -11.625694274902344, 35.20637130737305, -2.8495380878448486, -9.026398658752441, -17.70038604736328], "text": "Der zwei periodischen Segezahnkurve.", "type": "Satz", "module_number": 31070}, {"node_index": 803, "embedding": [-88.31367492675781, 142.65382385253906, 247.4473419189453, 10.657129287719727, -106.42520904541016, -43.500335693359375], "text": "  ", "type": "Satz", "module_number": 31070}, {"node_index": 804, "embedding": [-5.795087814331055, 2.7645018100738525, 20.722192764282227, -0.2635144591331482, -6.6643900871276855, -6.708024978637695], "text": "Gut, das heisst wir kennen schon Reihen, aber so richtig wissen wir trotzdem nicht, wie wir damit umgehen sollen.  ", "type": "Satz", "module_number": 31070}, {"node_index": 805, "embedding": [-5.8604655265808105, -10.684998512268066, 31.6198673248291, -2.3252551555633545, -5.581161975860596, -15.873231887817383], "text": "Und das schauen wir uns jetzt als erste Definition an.  ", "type": "Satz", "module_number": 31070}, {"node_index": 806, "embedding": [-8.428327560424805, -19.955991744995117, 49.261993408203125, -1.6231284141540527, -7.194270133972168, -25.858768463134766], "text": "Und zwar was ist eine Reihe.  ", "type": "Satz", "module_number": 31070}, {"node_index": 807, "embedding": [-7.005539894104004, -14.77353286743164, 40.5439338684082, -2.150999069213867, -6.3774566650390625, -20.781007766723633], "text": "Und das Konzept dahinter ist relativ einfach.  ", "type": "Satz", "module_number": 31070}, {"node_index": 808, "embedding": [-6.768148899078369, -10.162799835205078, 35.921627044677734, -1.8527097702026367, -7.077469348907471, -17.102598190307617], "text": "Wir haben erstmal eine Folge an gegeben.  ", "type": "Satz", "module_number": 31070}, {"node_index": 809, "embedding": [-8.014972686767578, -8.575581550598145, 38.39234924316406, -1.500321388244629, -9.207136154174805, -17.300622940063477], "text": "Und aus dieser Folge an bilden wir eine neue Folge von Summen.  ", "type": "Satz", "module_number": 31070}, {"node_index": 810, "embedding": [-8.078792572021484, -12.588647842407227, 41.002498626708984, -1.0794267654418945, -8.707880973815918, -19.933801651000977], "text": "Und das sehen Sie hier, das ist also Sn.", "type": "Satz", "module_number": 31070}, {"node_index": 811, "embedding": [-88.33138275146484, 142.77313232421875, 247.3058624267578, 10.657781600952148, -106.26021575927734, -43.40617752075195], "text": "  ", "type": "Satz", "module_number": 31070}, {"node_index": 812, "embedding": [-6.967038154602051, -0.8164287805557251, 27.818294525146484, -0.17315834760665894, -9.187528610229492, -10.771491050720215], "text": "Sn ist einfach nur die Summe k gleich 0 bis n ueber die Ak's.  ", "type": "Satz", "module_number": 31070}, {"node_index": 813, "embedding": [-14.335125923156738, -22.228870391845703, 74.56959533691406, -3.3113784790039062, -15.251916885375977, -36.85935974121094], "text": "Und das hier nochmal ausgeschrieben.  ", "type": "Satz", "module_number": 31070}, {"node_index": 814, "embedding": [-5.805527687072754, -9.208642959594727, 29.628023147583008, -1.279327154159546, -6.364192962646484, -14.480167388916016], "text": "Und diese neue Folge, die nennen wir dann eine unendliche Reihe.  ", "type": "Satz", "module_number": 31070}, {"node_index": 815, "embedding": [-7.646153450012207, -8.81286907196045, 36.89126968383789, -1.8659124374389648, -8.855879783630371, -17.3122501373291], "text": "Deswegen hier als folgen schreibweise Sn mit dem Index n aus den natuerlichen Zahlen.  ", "type": "Satz", "module_number": 31070}, {"node_index": 816, "embedding": [-9.854486465454102, -16.939777374267578, 53.01106262207031, -2.956878662109375, -10.597421646118164, -26.558025360107422], "text": "Das ist also jetzt in unserem Kontext eine unendliche Reihe.", "type": "Satz", "module_number": 31070}, {"node_index": 817, "embedding": [-88.54165649414062, 142.83949279785156, 248.1282501220703, 10.594217300415039, -106.5405502319336, -43.71601486206055], "text": "  ", "type": "Satz", "module_number": 31070}, {"node_index": 818, "embedding": [-5.818774223327637, 3.1578423976898193, 21.095638275146484, -0.4145449995994568, -6.855639934539795, -6.681728363037109], "text": "Und fuer diese unendliche Reihe, besser gesagt fuer diese Folge schreiben wir als Notation eben auch dieses Symbol.  ", "type": "Satz", "module_number": 31070}, {"node_index": 819, "embedding": [-8.51846694946289, -19.421972274780273, 49.43107223510742, -3.1609091758728027, -7.278609275817871, -26.035200119018555], "text": "Das verstehen wir darunter.  ", "type": "Satz", "module_number": 31070}, {"node_index": 820, "embedding": [-5.384117603302002, -11.897923469543457, 31.3181209564209, -2.2661683559417725, -5.5157060623168945, -16.173830032348633], "text": "Also im Endeffekt so wie ich das hier am Anfang gemacht habe, ist das schon korrekt.  ", "type": "Satz", "module_number": 31070}, {"node_index": 821, "embedding": [-9.375629425048828, -24.448293685913086, 57.03561019897461, -2.0701518058776855, -8.1428861618042, -30.4392147064209], "text": "Dass ich das jetzt einfach mal so aufschreibe in dieser Form.  ", "type": "Satz", "module_number": 31070}, {"node_index": 822, "embedding": [-7.444601535797119, -12.003936767578125, 38.37968063354492, -1.9921228885650635, -7.909539222717285, -18.703393936157227], "text": "Aber das sozusagen die Idee dahinter, dass wir also die Folge von Summen bilden.", "type": "Satz", "module_number": 31070}, {"node_index": 823, "embedding": [-88.52781677246094, 143.0382080078125, 247.94139099121094, 10.564453125, -106.49036407470703, -43.56490707397461], "text": "  ", "type": "Satz", "module_number": 31070}, {"node_index": 824, "embedding": [-6.201502799987793, 4.5147318840026855, 21.31325340270996, 0.03666429966688156, -7.6593146324157715, -6.210306167602539], "text": "Und diese Sn, die haben einen bestimmten Namen, die nennen wir Enteparzialsumme der Reihe.  ", "type": "Satz", "module_number": 31070}, {"node_index": 825, "embedding": [-7.075467586517334, -6.3382792472839355, 33.41851806640625, -1.652695655822754, -8.884174346923828, -14.98827075958252], "text": "Und die Ak's, das sind dann einfach die Glieder der Reihe.  ", "type": "Satz", "module_number": 31070}, {"node_index": 826, "embedding": [-8.457489013671875, -12.868368148803711, 43.52936935424805, -2.8600354194641113, -9.661134719848633, -21.45008087158203], "text": "Weil wir sehen ja quasi, hier haben wir quasi diese Ak's.  ", "type": "Satz", "module_number": 31070}, {"node_index": 827, "embedding": [-8.496140480041504, -18.169189453125, 47.48538589477539, -3.10880184173584, -9.14497184753418, -24.81075096130371], "text": "Und die Enteparzialsumme, das sind dann ja eben genau diese Summen immer von k gleich 0 bis n.  Ja, das ist im Endeffekt schon alles.", "type": "Satz", "module_number": 31070}, {"node_index": 828, "embedding": [-88.63024139404297, 142.84439086914062, 248.4981231689453, 10.577690124511719, -106.63182067871094, -43.85897445678711], "text": "  ", "type": "Satz", "module_number": 31070}, {"node_index": 829, "embedding": [-6.341676712036133, -4.588284015655518, 30.20043182373047, -1.3870248794555664, -7.279274940490723, -12.960308074951172], "text": "Und natuerlich sind wir interessiert daran, ob eine Reihe konvergiert oder divergiert.  ", "type": "Satz", "module_number": 31070}, {"node_index": 830, "embedding": [-3.2462077140808105, -10.815173149108887, 23.119707107543945, -1.1190552711486816, -3.8580403327941895, -12.15641975402832], "text": "Das heisst natuerlich hier wollen wir wissen eben, ob die Folge der Enteparzialsum konvergiert.  ", "type": "Satz", "module_number": 31070}, {"node_index": 831, "embedding": [-7.471993923187256, -15.261903762817383, 43.75295639038086, -2.799306869506836, -8.168607711791992, -22.205530166625977], "text": "Und das ist eben genau dann die Tatsache.  ", "type": "Satz", "module_number": 31070}, {"node_index": 832, "embedding": [-8.577293395996094, -12.688448905944824, 46.002010345458984, -3.205200672149658, -10.809229850769043, -22.315900802612305], "text": "Das heisst also die Reihe konvergiert beziehungsweise divergiert, falls eben die Folge der Enteparzialsumme", "type": "Satz", "module_number": 31070}, {"node_index": 833, "embedding": [-4.650554180145264, -4.2194600105285645, 25.4085750579834, -0.7226538062095642, -11.286479949951172, -10.532508850097656], "text": "Sn konvergiert beziehungsweise divergiert.", "type": "Satz", "module_number": 31070}, {"node_index": 834, "embedding": [-88.50535583496094, 143.90391540527344, 247.47654724121094, 10.800888061523438, -107.10994720458984, -43.006099700927734], "text": "  ", "type": "Satz", "module_number": 31070}, {"node_index": 835, "embedding": [-8.405692100524902, -12.512982368469238, 43.34524917602539, -2.012477397918701, -8.139450073242188, -21.0129337310791], "text": "Und da wissen wir ja schon, wie das funktioniert bei Folgen.  ", "type": "Satz", "module_number": 31070}, {"node_index": 836, "embedding": [-5.004289627075195, -12.5403413772583, 30.118593215942383, -1.7136945724487305, -5.039944171905518, -15.790569305419922], "text": "Und wenn eine Reihe konvergiert, dann moechten wir natuerlich auch gerne wissen, welcher Wert kommt dann eigentlich heraus.  ", "type": "Satz", "module_number": 31070}, {"node_index": 837, "embedding": [-4.851197242736816, -14.688572883605957, 30.518321990966797, -2.1016674041748047, -4.874464988708496, -16.653886795043945], "text": "Konvergenz bedeutet also, dass dort etwas Endliches herauskommen muss.", "type": "Satz", "module_number": 31070}, {"node_index": 838, "embedding": [-88.70004272460938, 143.04428100585938, 248.60154724121094, 10.619611740112305, -106.67326354980469, -43.803890228271484], "text": "  ", "type": "Satz", "module_number": 31070}, {"node_index": 839, "embedding": [-7.027294158935547, 8.220071792602539, 21.664592742919922, -0.6050946116447449, -11.913389205932617, -5.377079963684082], "text": "Und hier ist eben die Idee, wenn ich also den Limes endginge und endlich der Enteparzialsum nehme Sn und dieser Grenzwert existiert und den, der ist jetzt mal hier S.  Dann nennen wir also S den Wert oder die Summe der gegebenen Reihe.  ", "type": "Satz", "module_number": 31070}, {"node_index": 840, "embedding": [-9.243194580078125, 5.689050674438477, 32.65854263305664, -3.1118974685668945, -20.770721435546875, -11.225934982299805], "text": "Und wir koennen dafuer dann auch kurz einfach diese Form schreiben, dass wir also diese Notation dieser Reihe aufschreiben und schreiben ist gleich S.", "type": "Satz", "module_number": 31070}, {"node_index": 841, "embedding": [-89.08553314208984, 144.40594482421875, 249.13018798828125, 10.527362823486328, -107.91785430908203, -43.59880447387695], "text": "  ", "type": "Satz", "module_number": 31070}, {"node_index": 842, "embedding": [-6.232259750366211, 2.6326630115509033, 22.387714385986328, -0.12243861705064774, -7.287174224853516, -7.440511703491211], "text": "Und was wir daran schon sehen, das Zeichen hier hat also eigentlich zwei verschiedene Bedeutungen.  ", "type": "Satz", "module_number": 31070}, {"node_index": 843, "embedding": [-10.939682006835938, -15.378966331481934, 55.25784683227539, -1.4234957695007324, -11.57270622253418, -26.625930786132812], "text": "Und das sehen wir nochmal auf der naechsten Folie.  ", "type": "Satz", "module_number": 31070}, {"node_index": 844, "embedding": [-6.042636871337891, -11.468216896057129, 33.78379440307617, -2.5319020748138428, -6.388701915740967, -17.097599029541016], "text": "Wenn das Ganze allein steht, wie wir das hier oben bei der Notation auch geschrieben haben, da haben wir ja gesagt, das nennen wir sozusagen die unendliche Reihe, also als Notation.  ", "type": "Satz", "module_number": 31070}, {"node_index": 845, "embedding": [-6.670897006988525, -14.417248725891113, 38.246585845947266, -2.6634020805358887, -7.252562522888184, -19.92750358581543], "text": "Dann steht das eben fuer die Folge Sn.", "type": "Satz", "module_number": 31070}, {"node_index": 846, "embedding": [-88.88301849365234, 143.5098419189453, 249.05206298828125, 10.630817413330078, -106.94815826416016, -43.83781814575195], "text": "  ", "type": "Satz", "module_number": 31070}, {"node_index": 847, "embedding": [-5.6923418045043945, 2.4186136722564697, 21.0175838470459, -0.5811466574668884, -7.196740627288818, -7.007089614868164], "text": "Wenn wir aber das Ganze in einer Gleichung schreiben, in dieser Form dann bezeichnet einfach diese Notation den Grenzwert der Parzialsummen.  ", "type": "Satz", "module_number": 31070}, {"node_index": 848, "embedding": [-6.05202054977417, -9.964365005493164, 33.0531120300293, -3.433238983154297, -7.847105026245117, -16.403200149536133], "text": "Jetzt hier haben wir K gegen und endlich geschrieben.  ", "type": "Satz", "module_number": 31070}, {"node_index": 849, "embedding": [-7.6002936363220215, -14.105321884155273, 42.38395309448242, -3.825406551361084, -9.76520824432373, -21.409135818481445], "text": "Das sind also zwei verschiedene Notationen.  ", "type": "Satz", "module_number": 31070}, {"node_index": 850, "embedding": [-7.673373699188232, -13.61184310913086, 42.35850143432617, -3.285175323486328, -10.347311973571777, -21.1216983795166], "text": "Wir werden jetzt auch nicht durcheinander kommen, wenn das einfach einzeln da steht, verstehen wir darunter diese Folge der Enden-Parzialsum.", "type": "Satz", "module_number": 31070}, {"node_index": 851, "embedding": [-89.00827026367188, 143.55364990234375, 249.60015869140625, 10.567131042480469, -107.1788558959961, -44.02888107299805], "text": "  ", "type": "Satz", "module_number": 31070}, {"node_index": 852, "embedding": [-8.113821029663086, -6.185934066772461, 37.22640609741211, -1.8041424751281738, -10.803365707397461, -16.525299072265625], "text": "Und wenn wir so etwas schreiben, dann wissen wir, hier wollen wir also den Wert oder die Summe der Reihe angeben.  ", "type": "Satz", "module_number": 31070}, {"node_index": 853, "embedding": [-9.55996322631836, -18.19041633605957, 52.62606430053711, -4.176661014556885, -12.518854141235352, -27.07236671447754], "text": "Und vielleicht noch als Zusatzbemerkung, jetzt haben wir hier bei der Notation hier oben auch immer K gleich 0 bis n geschrieben, beziehungsweise dann hier K gleich 0 bis unendlich.  ", "type": "Satz", "module_number": 31070}, {"node_index": 854, "embedding": [-3.9732208251953125, -13.560234069824219, 27.778358459472656, -2.007070779800415, -3.2607860565185547, -15.272802352905273], "text": "Man kann natuerlich auch andere Summationsbereiche verwenden.", "type": "Satz", "module_number": 31070}, {"node_index": 855, "embedding": [-8.655035018920898, -9.569794654846191, 43.155948638916016, -1.6821317672729492, -12.66950511932373, -19.857580184936523], "text": "  Das heisst also, manche Situationen muss man eben die 0 herausnehmen, zum Beispiel, wenn man hier fuer die AKs 1 durch K nimmt, aber man kann das Ganze eben auch auf Z erweitern.  ", "type": "Satz", "module_number": 31070}, {"node_index": 856, "embedding": [-6.790825843811035, -12.013334274291992, 36.41652297973633, -2.3400495052337646, -10.363359451293945, -18.3282527923584], "text": "Das heisst also, hier koennte ich jetzt auch irgendwie K gleich minus 10 anfangen und das Ganze bis unendlich schreiben.  ", "type": "Satz", "module_number": 31070}, {"node_index": 857, "embedding": [-4.536235332489014, -11.708100318908691, 26.84843635559082, -1.1744999885559082, -6.335050106048584, -14.033754348754883], "text": "Und das hatten wir ja auch schon in der letzten Folie so gesehen bei der komplexen Folieanalysis.", "type": "Satz", "module_number": 31070}, {"node_index": 858, "embedding": [-88.845703125, 143.44775390625, 248.95359802246094, 10.746700286865234, -106.80935668945312, -43.7587890625], "text": "  ", "type": "Satz", "module_number": 31070}, {"node_index": 859, "embedding": [-5.669069766998291, 0.979195237159729, 21.16813850402832, 0.016573242843151093, -4.897388935089111, -7.554705619812012], "text": "Da hatten wir ja auch Indizes aus den ganzen Zahlen.  ", "type": "Satz", "module_number": 31070}, {"node_index": 860, "embedding": [-6.44509744644165, -15.478748321533203, 38.68593215942383, -2.3017749786376953, -5.8109283447265625, -20.249391555786133], "text": "Gut, schauen wir uns mal Beispiele an und versuchen mal zu ueberlegen, wie wir dann Konvergenz von solchen Reihen untersuchen koennen.  ", "type": "Satz", "module_number": 31070}, {"node_index": 861, "embedding": [-7.334273338317871, -19.738117218017578, 43.21907424926758, -2.4180054664611816, -5.656886577606201, -23.533777236938477], "text": "Und dann fangen wir mal einfach an, einem einfachen Beispiel.  ", "type": "Satz", "module_number": 31070}, {"node_index": 862, "embedding": [-9.112427711486816, -19.624279022216797, 50.76656723022461, -2.492400646209717, -11.005942344665527, -26.588716506958008], "text": "Und zwar betrachten wir also die Reihe K gleich 0 bis unendlich von 1 durch 2 hoch K.", "type": "Satz", "module_number": 31070}, {"node_index": 863, "embedding": [-89.00713348388672, 143.86691284179688, 249.21438598632812, 10.711816787719727, -107.07866668701172, -43.75608444213867], "text": "  ", "type": "Satz", "module_number": 31070}, {"node_index": 864, "embedding": [-6.486069679260254, 0.6975545883178711, 25.09714698791504, -0.967380702495575, -11.129559516906738, -9.357460021972656], "text": "Wenn wir da mal die ersten Glieder der Reihe aufschreiben, dann sehen wir also fuer 0 kommt 1 heraus.  ", "type": "Satz", "module_number": 31070}, {"node_index": 865, "embedding": [-4.676213264465332, -9.199871063232422, 26.046236038208008, -3.018418312072754, -5.971174716949463, -13.32185173034668], "text": "Wenn ich K gleich 1 einsetze, bekomme ich einen halb, dann geht es so weiter, ein Viertel, ein Achtel, ein Sechzehnte.", "type": "Satz", "module_number": 31070}, {"node_index": 866, "embedding": [-89.12020111083984, 143.93943786621094, 249.7255096435547, 10.548254013061523, -107.28299713134766, -43.94532775878906], "text": " ", "type": "Satz", "module_number": 31070}, {"node_index": 867, "embedding": [-6.270669937133789, -4.103280067443848, 27.9773006439209, -0.9777995944023132, -6.964137554168701, -11.967264175415039], "text": "Und wir wollen uns jetzt die Frage stellen, konvergiert diese Reihe und wenn ja, welchen Wert hat die Reihe?  ", "type": "Satz", "module_number": 31070}, {"node_index": 868, "embedding": [-5.3428544998168945, -11.404037475585938, 30.179128646850586, -2.6191329956054688, -5.419485569000244, -15.674654960632324], "text": "Man muss sich das erstmal kurz ueberlegen, wir addieren also unendlich viele Zahlen, die jetzt hier in diesem Fall alle positiv sind.  ", "type": "Satz", "module_number": 31070}, {"node_index": 869, "embedding": [-6.41650915145874, -16.11307144165039, 39.1600227355957, -4.294878959655762, -6.585020065307617, -21.061124801635742], "text": "Und jetzt koennte man vom logischen her sagen, das kann doch gar nicht endlich sein, aber das kommt eben genau auf die Struktur dieser AKs an.", "type": "Satz", "module_number": 31070}, {"node_index": 870, "embedding": [-89.2441177368164, 143.85198974609375, 250.2990264892578, 10.549551010131836, -107.32604217529297, -44.2091064453125], "text": "  ", "type": "Satz", "module_number": 31070}, {"node_index": 871, "embedding": [-6.656315326690674, 4.113523483276367, 22.92241668701172, -1.1714832782745361, -8.766520500183105, -7.3664984703063965], "text": "Und wenn wir das mal geometrisch zeichnen, was wir hier haben, jetzt stellen wir uns mal vor, wir haben einen Kreis, wir koennen auch sagen, wir haben einen Kuchen.  ", "type": "Satz", "module_number": 31070}, {"node_index": 872, "embedding": [-11.283677101135254, -11.048547744750977, 52.77975082397461, -2.426849365234375, -13.435050964355469, -24.37430763244629], "text": "Dann ist sozusagen die 1, die dort steht.", "type": "Satz", "module_number": 31070}, {"node_index": 873, "embedding": [-10.770698547363281, -20.428409576416016, 57.79853439331055, -1.3497428894042969, -10.399112701416016, -29.37781524658203], "text": "Ich gucke hier das mal kurz.  ", "type": "Satz", "module_number": 31070}, {"node_index": 874, "embedding": [-5.960689067840576, -10.562257766723633, 29.725215911865234, -0.6649925112724304, -5.584967136383057, -14.939994812011719], "text": "Die 1, die jetzt hier steht, die eben spricht jetzt mal, wir haben einen ganzen Kuchen.", "type": "Satz", "module_number": 31070}, {"node_index": 875, "embedding": [-89.31913757324219, 144.1088104248047, 250.18077087402344, 10.71307373046875, -107.32068634033203, -44.0480842590332], "text": "  ", "type": "Satz", "module_number": 31070}, {"node_index": 876, "embedding": [-6.064746856689453, -8.452279090881348, 32.19917678833008, -1.0471751689910889, -5.273169040679932, -15.002508163452148], "text": "So, dann sieht man beim naechsten, machen das mal, so und dann vielleicht noch.  ", "type": "Satz", "module_number": 31070}, {"node_index": 877, "embedding": [-7.049374103546143, -14.952259063720703, 38.397525787353516, -1.0801377296447754, -6.843433856964111, -20.108640670776367], "text": "So, beim naechsten haben wir was stehen, naja, da steht ein halb, das heisst also hier haben wir irgendwie nur ein halben Kuchen.  ", "type": "Satz", "module_number": 31070}, {"node_index": 878, "embedding": [-8.612290382385254, -20.61532974243164, 50.397037506103516, -2.9571762084960938, -8.478521347045898, -26.966028213500977], "text": "Okay, das wird alles zusammenaddiert.  ", "type": "Satz", "module_number": 31070}, {"node_index": 879, "embedding": [-4.445808410644531, -15.207921981811523, 29.6495304107666, -1.2804350852966309, -3.5267186164855957, -16.71981430053711], "text": "So, bei einem Viertel, da muessen wir das Ganze also teilen.  ", "type": "Satz", "module_number": 31070}, {"node_index": 880, "embedding": [-5.895236015319824, -18.878158569335938, 35.815670013427734, -0.4265078902244568, -4.4264302253723145, -20.09943389892578], "text": "Da haben wir also nur noch einen Viertelkuchen.", "type": "Satz", "module_number": 31070}, {"node_index": 881, "embedding": [-89.4140853881836, 143.85992431640625, 250.65744018554688, 10.805427551269531, -107.40052032470703, -44.295196533203125], "text": "  ", "type": "Satz", "module_number": 31070}, {"node_index": 882, "embedding": [-12.06376838684082, -24.097749710083008, 65.62603759765625, -2.2128520011901855, -12.07199478149414, -33.654354095458984], "text": "Und dann machen wir noch eins, dann sehen wir also ein Achtel.  ", "type": "Satz", "module_number": 31070}, {"node_index": 883, "embedding": [-9.777420997619629, -27.517459869384766, 58.76262664794922, -2.758909225463867, -7.835135459899902, -32.29566955566406], "text": "Und dann sehen wir also, hier haben wir also nur noch ein Achtelkuchen.  ", "type": "Satz", "module_number": 31070}, {"node_index": 884, "embedding": [-4.864863395690918, -13.129096984863281, 29.432254791259766, -2.685626745223999, -4.9604105949401855, -15.795392990112305], "text": "Und so geht das weiter und wenn wir uns die Partial-Summen mal anschauen, also S0, das ist einfach nur die erste, das ist einfach nur die 1.  ", "type": "Satz", "module_number": 31070}, {"node_index": 885, "embedding": [-12.888228416442871, -26.3671875, 72.5878677368164, -4.256071090698242, -17.71429443359375, -37.586856842041016], "text": "Das waere ja dann die Summe K gleich 0 bis 0, da kommt also 1 heraus.", "type": "Satz", "module_number": 31070}, {"node_index": 886, "embedding": [-89.2882080078125, 144.55841064453125, 249.8581085205078, 10.749387741088867, -107.4326171875, -43.7563591003418], "text": "  ", "type": "Satz", "module_number": 31070}, {"node_index": 887, "embedding": [-5.622158527374268, -2.828413486480713, 23.783479690551758, -0.37988752126693726, -6.474495887756348, -9.826255798339844], "text": "Und wenn ich S1 bestimme, dann muss ich die ersten beiden zusammenaddieren, also 1 plus 1 halb und da kommt natuerlich 3 halbe heraus.  ", "type": "Satz", "module_number": 31070}, {"node_index": 888, "embedding": [-7.438539981842041, -16.118072509765625, 40.9575309753418, -1.5277631282806396, -8.817688941955566, -21.327980041503906], "text": "So, schreiben wir nochmal S2 auf, da bekommen wir dann also 1 plus 1 halb plus 1 Viertel.  ", "type": "Satz", "module_number": 31070}, {"node_index": 889, "embedding": [-9.29102897644043, -19.076190948486328, 52.88398742675781, -4.406785488128662, -14.144071578979492, -27.3953914642334], "text": "Wenn wir das jetzt mal zusammenfassen, 4 plus 2 plus 1 und zwar Viertel, dann sehen wir also, hier kommt 7 Viertel heraus.", "type": "Satz", "module_number": 31070}, {"node_index": 890, "embedding": [-89.35838317871094, 144.48651123046875, 250.26258850097656, 10.663057327270508, -107.53023529052734, -43.94411087036133], "text": "  ", "type": "Satz", "module_number": 31070}, {"node_index": 891, "embedding": [-6.29623556137085, 7.3861985206604, 19.442781448364258, -0.11355490237474442, -10.498384475708008, -4.61949348449707], "text": "Und wenn man das jetzt so weitermacht, hat man also fuer Sn, dann das waere jetzt die Entepartial-Summe.  ", "type": "Satz", "module_number": 31070}, {"node_index": 892, "embedding": [-12.552393913269043, -6.057835102081299, 55.96260070800781, -4.066380977630615, -27.699373245239258, -24.415651321411133], "text": "Das heisst, da betrachten wir jetzt einfach diesen Ausdruck hier oben, also quasi den gesamten Ausdruck, aber statt demunendlich einfach nur N.  Und da bekommen wir dann 1 plus 1 halb plus und dann geht das so weiter plus und dann 1 durch 2 hoch N.", "type": "Satz", "module_number": 31070}, {"node_index": 893, "embedding": [-89.39380645751953, 145.19407653808594, 249.78199768066406, 10.79641342163086, -107.75477600097656, -43.50665283203125], "text": "  ", "type": "Satz", "module_number": 31070}, {"node_index": 894, "embedding": [-5.368708610534668, 0.3663404583930969, 21.354360580444336, 0.08664613217115402, -3.994817018508911, -7.810779094696045], "text": "Und welche Vermutung haben wir jetzt?", "type": "Satz", "module_number": 31070}, {"node_index": 895, "embedding": [-10.305134773254395, -26.57036590576172, 60.891597747802734, -0.18141216039657593, -5.332729339599609, -32.77872085571289], "text": "Was kommt hier heraus?  ", "type": "Satz", "module_number": 31070}, {"node_index": 896, "embedding": [-8.113515853881836, -21.559900283813477, 46.859134674072266, -0.7597116827964783, -7.269911766052246, -25.6341609954834], "text": "Naja, wenn wir mal schauen, also ich habe schon mal 1 Kuchen, dann kommt hier 1 halbe hinzu, dann kommt hier 1 Viertel, 1 Achtel.  ", "type": "Satz", "module_number": 31070}, {"node_index": 897, "embedding": [-6.102233409881592, -14.140413284301758, 35.73858642578125, -3.746077299118042, -7.016022205352783, -19.020315170288086], "text": "Und dann hat man das Gefuehl, wenn ich diese Flaeche hier mal reinschreibe und diese, die hier steht, meinetwegen dann noch geteilt hier, dann geht das ja immer so weiter.", "type": "Satz", "module_number": 31070}, {"node_index": 898, "embedding": [-89.6132583618164, 144.6549835205078, 251.2437286376953, 10.507890701293945, -107.79915618896484, -44.30173873901367], "text": "  ", "type": "Satz", "module_number": 31070}, {"node_index": 899, "embedding": [-9.896334648132324, -13.126030921936035, 47.880008697509766, -2.2228145599365234, -10.373340606689453, -23.231700897216797], "text": "Dann wuerde ich als naechstes jetzt das hier noch mal teilen und all das zusammenaddiert und das sieht so aus, als ob am Ende bekommen wir tatsaechlich 2 Kuchen.  ", "type": "Satz", "module_number": 31070}, {"node_index": 900, "embedding": [-5.51283597946167, -10.963058471679688, 29.411630630493164, -1.3309381008148193, -6.561161041259766, -15.095609664916992], "text": "Das heisst, 2 ist das vermutete Ergebnis.", "type": "Satz", "module_number": 31070}, {"node_index": 901, "embedding": [-89.5587158203125, 144.89976501464844, 250.6522674560547, 10.887056350708008, -107.79564666748047, -43.9247932434082], "text": " ", "type": "Satz", "module_number": 31070}, {"node_index": 902, "embedding": [-6.153423309326172, 5.469598293304443, 20.096590042114258, -0.1272614598274231, -9.25025463104248, -5.565084934234619], "text": "Und allgemein auch, wenn wir das aber gleich zeigen, und zwar in der folgenden Form, in dem wir einfach mal folgende Reihe betrachten  Statt dem 1 halb nehmen wir mal ein allgemeines Kuh und versuchen die Fellets untersuchen, was passiert mit dieser Reihe.  ", "type": "Satz", "module_number": 31070}, {"node_index": 903, "embedding": [-6.6476731300354, -7.279228687286377, 32.72206115722656, -2.826908588409424, -9.863899230957031, -15.404266357421875], "text": "Also in dieser Form, dann steht hier 1 plus Kuh plus Kuh Quadrat und so weiter.", "type": "Satz", "module_number": 31070}, {"node_index": 904, "embedding": [-7.372564792633057, -17.142215728759766, 42.681758880615234, -4.033273696899414, -7.737546920776367, -22.910696029663086], "text": "  Und Kuh soll jetzt hier mal aus R sein, das muessen wir uns noch naeher anschauen.  ", "type": "Satz", "module_number": 31070}, {"node_index": 905, "embedding": [-7.286309242248535, -17.005353927612305, 41.84000778198242, -3.167398452758789, -9.091811180114746, -22.355810165405273], "text": "Und im Endeffekt hatten wir uns das auch schon mal ueberlegt, also das waere jetzt hier, das ist die geometrische Reihe.  ", "type": "Satz", "module_number": 31070}, {"node_index": 906, "embedding": [-5.537743091583252, -12.494104385375977, 30.99407386779785, -2.2273752689361572, -6.071705341339111, -16.321372985839844], "text": "Und die hatten wir uns auch schon mal angeschaut, da koennen Sie nochmal auf folge 10, folgen 18 nachschauen.", "type": "Satz", "module_number": 31070}, {"node_index": 907, "embedding": [-6.1929030418396, -10.700723648071289, 32.3628044128418, -1.4661402702331543, -7.891443729400635, -16.00823402404785], "text": " So, und was wissen wir ueber die Entenpartial-Summen?  ", "type": "Satz", "module_number": 31070}, {"node_index": 908, "embedding": [-10.908686637878418, -18.866085052490234, 59.67153549194336, -3.7840824127197266, -13.854783058166504, -29.739208221435547], "text": "Ja, das hatten wir uns auch schon angeschaut, ebenfalls in dieser Foliesung.  ", "type": "Satz", "module_number": 31070}, {"node_index": 909, "embedding": [-4.148471832275391, -15.83504867553711, 29.37386131286621, -1.7668578624725342, -3.2706241607666016, -16.558305740356445], "text": "Also wenn ich jetzt mal SN aufschreibe, das ist ja jetzt einfach die endliche Summe, also diese Partial-Summe.  ", "type": "Satz", "module_number": 31070}, {"node_index": 910, "embedding": [-5.7332234382629395, -19.948087692260742, 38.47484588623047, -2.787705898284912, -5.060007095336914, -21.70728302001953], "text": "Und da hatten wir doch schon gesehen, da kommt also was heraus, das ist ja dann nichts anderes als die geometrische Summe.", "type": "Satz", "module_number": 31070}, {"node_index": 911, "embedding": [-89.64934539794922, 144.6904754638672, 251.261962890625, 10.71310043334961, -107.7696762084961, -44.24990463256836], "text": "  ", "type": "Satz", "module_number": 31070}, {"node_index": 912, "embedding": [-4.927055358886719, -0.03159470856189728, 15.703521728515625, 3.563581943511963, -4.593935966491699, -5.126778602600098], "text": "1 minus 1 durch Kuh hoch", "type": "Satz", "module_number": 31070}, {"node_index": 913, "embedding": [-4.809067726135254, -15.993011474609375, 21.67278480529785, 8.075479507446289, -3.0782291889190674, -12.211782455444336], "text": "N plus 1, 1 minus Kuh, das ist sozusagen im Fall, wenn Kuh ungleich 1 ist und werden gesehen, wenn Kuh gleich 1 ist, dann kommt da N plus 1 heraus.  ", "type": "Satz", "module_number": 31070}, {"node_index": 914, "embedding": [-5.4440741539001465, -18.159137725830078, 31.454477310180664, 1.4847034215927124, -5.793891429901123, -17.663209915161133], "text": "Und jetzt betrachten wir mal die Konvergenz von SN, das ist ja genau dann diese Reihe, die wir hier bestimmen wollen.  ", "type": "Satz", "module_number": 31070}, {"node_index": 915, "embedding": [-6.798923015594482, -17.215782165527344, 40.9787483215332, -4.48441219329834, -7.860617637634277, -22.017656326293945], "text": "Und dann wuerden wir im ersten Fall schauen und nehmen einfach mal Kuh kleiner 1.", "type": "Satz", "module_number": 31070}, {"node_index": 916, "embedding": [-89.82111358642578, 144.77076721191406, 251.8677215576172, 10.639511108398438, -107.9979019165039, -44.46976089477539], "text": "  ", "type": "Satz", "module_number": 31070}, {"node_index": 917, "embedding": [-8.092461585998535, -6.9960150718688965, 37.03928756713867, -2.43611216545105, -9.020830154418945, -16.704944610595703], "text": "Ja, was passiert, wenn Kuh kleiner 1 ist, dann sind wir schon mal in diesem Fall hier.  ", "type": "Satz", "module_number": 31070}, {"node_index": 918, "embedding": [-6.9158830642700195, -12.184165954589844, 35.673946380615234, -3.019259214401245, -7.579226970672607, -18.135351181030273], "text": "Und dann wissen wir natuerlich, als erstes, wenn ich jetzt den Limes-Bilder von Kuh hoch N plus 1 und Kuhbetrag ist kleiner 1, das hatten wir schon gesehen, da kommt Null heraus.  ", "type": "Satz", "module_number": 31070}, {"node_index": 919, "embedding": [-8.481643676757812, -17.63374900817871, 47.3901481628418, -3.646430492401123, -8.970978736877441, -24.780202865600586], "text": "Das heisst also, wenn ich jetzt die geometrische Reihe betrachte, das ist ja dann nichts anderes als der Limes N gegen Unendlich.", "type": "Satz", "module_number": 31070}, {"node_index": 920, "embedding": [-89.8235092163086, 145.11251831054688, 251.6822967529297, 10.707151412963867, -108.08855438232422, -44.276973724365234], "text": "  ", "type": "Satz", "module_number": 31070}, {"node_index": 921, "embedding": [-5.1543288230896, 2.1458210945129395, 18.1343936920166, 0.9384835362434387, -6.369579315185547, -5.6063079833984375], "text": "Jetzt kommt die Entepazialsumme, das ist ja quasi jetzt einfach Limes N gegen Unendlich von SN.  ", "type": "Satz", "module_number": 31070}, {"node_index": 922, "embedding": [-4.850524425506592, -11.708746910095215, 27.608522415161133, -0.12044353038072586, -6.017788410186768, -14.233809471130371], "text": "SN haben wir hier angeschaut, wir haben also gesehen, wir sind in diesem Fall und wir haben gesehen, das geht dann gegen Null.  ", "type": "Satz", "module_number": 31070}, {"node_index": 923, "embedding": [-5.807941436767578, -16.72759437561035, 36.37517547607422, -2.391014575958252, -6.539506912231445, -19.828067779541016], "text": "Also schreiben wir diesen Ausdruck aber nochmal mit hin, noch sind wir nicht zum Grenzprozess uebergegangen.  ", "type": "Satz", "module_number": 31070}, {"node_index": 924, "embedding": [-5.681612968444824, -15.77535629272461, 31.395523071289062, 1.1734682321548462, -5.214199066162109, -16.95340347290039], "text": "1 minus Kuh.", "type": "Satz", "module_number": 31070}, {"node_index": 925, "embedding": [-12.258108139038086, -30.675920486450195, 71.28361511230469, -1.9312629699707031, -16.569496154785156, -38.09842300415039], "text": "  Naja, und wenn ich das jetzt ausnutze, dass ich ja weiss, dass das hier gegen Null geht, dann geht das gegen Null und der Wert ist dann tatsaechlich 1 durch 1 minus Kuh.  ", "type": "Satz", "module_number": 31070}, {"node_index": 926, "embedding": [-10.356693267822266, -22.240262985229492, 59.166439056396484, -2.4286928176879883, -12.6854248046875, -30.36444091796875], "text": "Das heisst also, die Reihe ist konvergent.  ", "type": "Satz", "module_number": 31070}, {"node_index": 927, "embedding": [-7.256890773773193, -14.893312454223633, 38.955169677734375, -2.3160557746887207, -7.059571743011475, -20.23290252685547], "text": "Okay, hier nutzen wir also schon wissen, was wir haben und jetzt koennen wir auch das Beispiel beantworten mit den Kuchen.", "type": "Satz", "module_number": 31070}, {"node_index": 928, "embedding": [-89.8973159790039, 145.24696350097656, 251.6929931640625, 10.785757064819336, -108.03181457519531, -44.222984313964844], "text": " ", "type": "Satz", "module_number": 31070}, {"node_index": 929, "embedding": [-5.320226192474365, -11.300094604492188, 30.06938362121582, 0.16370254755020142, -1.1530829668045044, -15.247889518737793], "text": "Wenn wir nochmal schauen, was hatten wir hier?  ", "type": "Satz", "module_number": 31070}, {"node_index": 930, "embedding": [-8.131096839904785, -20.900901794433594, 46.95863723754883, -0.8233360648155212, -7.830894470214844, -25.327144622802734], "text": "Ja, das was hier steht, ist ja nichts anderes als ein halb in Klammern hoch K.  ", "type": "Satz", "module_number": 31070}, {"node_index": 931, "embedding": [-7.3569183349609375, -15.965927124023438, 39.34811019897461, -1.5398597717285156, -7.686604976654053, -20.652006149291992], "text": "Das heisst also, unser Kuh ist jetzt hier in diesem Fall einfach ein halb.  ", "type": "Satz", "module_number": 31070}, {"node_index": 932, "embedding": [-8.674113273620605, -19.767017364501953, 44.24589920043945, 0.8465076088905334, -8.076502799987793, -23.48454475402832], "text": "Das heisst also zum Beispiel Kuh gleich ein halb.  ", "type": "Satz", "module_number": 31070}, {"node_index": 933, "embedding": [-6.5366668701171875, -12.360933303833008, 32.51283645629883, 1.13677978515625, -6.790152549743652, -16.355817794799805], "text": "Beispiel oben.  ", "type": "Satz", "module_number": 31070}, {"node_index": 934, "embedding": [-8.088545799255371, -10.930618286132812, 39.19412612915039, 0.6368258595466614, -9.334529876708984, -18.589168548583984], "text": "Dann bekommen wir also fuer die Reihe K gleich", "type": "Satz", "module_number": 31070}, {"node_index": 935, "embedding": [-9.696578979492188, -21.92733383178711, 55.47311782836914, -1.3050365447998047, -11.345215797424316, -28.874267578125], "text": "Null bis und endlich.  ", "type": "Satz", "module_number": 31070}, {"node_index": 936, "embedding": [-8.631819725036621, -17.153846740722656, 47.15925979614258, -2.8099260330200195, -11.674047470092773, -24.279024124145508], "text": "Und dann schreibe ich das genauso ein halb hoch K.", "type": "Satz", "module_number": 31070}, {"node_index": 937, "embedding": [-89.88300323486328, 145.4794158935547, 251.53346252441406, 10.838972091674805, -108.12228393554688, -44.067623138427734], "text": "  ", "type": "Satz", "module_number": 31070}, {"node_index": 938, "embedding": [-6.372180938720703, 2.7032320499420166, 23.10563850402832, -0.5305473208427429, -8.330904960632324, -7.783665657043457], "text": "Dort oben steht 1 durch 2 hoch K, aber das ist das gleiche.  ", "type": "Satz", "module_number": 31070}, {"node_index": 939, "embedding": [-8.946015357971191, -15.835153579711914, 46.907142639160156, -0.8467058539390564, -9.818296432495117, -23.428415298461914], "text": "Naja, und jetzt kann ich das eben ausnutzen.  ", "type": "Satz", "module_number": 31070}, {"node_index": 940, "embedding": [-7.766829967498779, -17.838815689086914, 41.42926788330078, -0.6496581435203552, -7.852042198181152, -21.92464256286621], "text": "Ich kenne den Wert und unser Kuh ist jetzt ein halb.  ", "type": "Satz", "module_number": 31070}, {"node_index": 941, "embedding": [-12.65683364868164, -30.105060577392578, 74.09212493896484, -3.299753189086914, -18.793411254882812, -39.270591735839844], "text": "Also steht da 1 durch 1 minus ein halb.  ", "type": "Satz", "module_number": 31070}, {"node_index": 942, "embedding": [-6.965649127960205, -14.574979782104492, 39.65678787231445, -3.259788990020752, -11.504507064819336, -20.543508529663086], "text": "Und wenn wir das mal ganz korrekt machen, steht da 1 durch 1, 1 durch ein halb.  ", "type": "Satz", "module_number": 31070}, {"node_index": 943, "embedding": [-6.935733318328857, -15.95358943939209, 39.94974136352539, -2.435624599456787, -8.75356674194336, -20.945823669433594], "text": "Und das ist 2.  ", "type": "Satz", "module_number": 31070}, {"node_index": 944, "embedding": [-7.658459186553955, -14.34583854675293, 40.83319854736328, -2.3875532150268555, -8.635698318481445, -20.63612174987793], "text": "Also wir hatten schon eine richtige Vermutung, da kommt wirklich 2 heraus.", "type": "Satz", "module_number": 31070}, {"node_index": 945, "embedding": [-90.04440307617188, 145.5863494873047, 252.03286743164062, 10.855260848999023, -108.24871063232422, -44.21310043334961], "text": "  ", "type": "Satz", "module_number": 31070}, {"node_index": 946, "embedding": [-6.554322242736816, -3.136949300765991, 27.32340431213379, -0.31649893522262573, -6.778323173522949, -11.373224258422852], "text": "Schauen wir uns noch die anderen Faelle an.  ", "type": "Satz", "module_number": 31070}, {"node_index": 947, "embedding": [-10.156112670898438, -23.249074935913086, 51.151283264160156, 2.2824647426605225, -9.822216033935547, -27.086458206176758], "text": "Und zwar, was ist, wenn Kuhbetrag Groesse 1 ist?  ", "type": "Satz", "module_number": 31070}, {"node_index": 948, "embedding": [-6.037237644195557, -11.982362747192383, 31.545866012573242, -0.965667188167572, -6.630006790161133, -16.115327835083008], "text": "Ja, dann ist klar, dann divergiert natuerlich dieser Ausdruck hier.  ", "type": "Satz", "module_number": 31070}, {"node_index": 949, "embedding": [-7.607082366943359, -10.869924545288086, 39.02836227416992, -3.469895839691162, -9.229047775268555, -19.099470138549805], "text": "Wenn Kuhbetrag Groesse 1 ist, dann geht das gegen unendlich und dann divergiert die Reihe.  ", "type": "Satz", "module_number": 31070}, {"node_index": 950, "embedding": [-12.173306465148926, -27.60081672668457, 70.34793090820312, -2.720229148864746, -12.115287780761719, -36.849544525146484], "text": "Das schreibe ich jetzt mal etwas kuerzer auf.  ", "type": "Satz", "module_number": 31070}, {"node_index": 951, "embedding": [-7.807065963745117, -12.291006088256836, 40.796485900878906, -3.5483760833740234, -9.519139289855957, -20.27809715270996], "text": "Dann divergiert Kuh N plus 1.  Und das bedeutet dann, dass die Reihe divergiert.", "type": "Satz", "module_number": 31070}, {"node_index": 952, "embedding": [-90.04582977294922, 145.7216339111328, 252.04766845703125, 10.766410827636719, -108.33280181884766, -44.19462966918945], "text": "  ", "type": "Satz", "module_number": 31070}, {"node_index": 953, "embedding": [-6.766361713409424, -3.608240842819214, 29.92591667175293, -0.6596989035606384, -7.80291223526001, -12.382844924926758], "text": "Okay, so der dritte Fall.  ", "type": "Satz", "module_number": 31070}, {"node_index": 954, "embedding": [-7.195778846740723, -10.346816062927246, 36.038761138916016, -0.3737592101097107, -7.4413323402404785, -16.9199161529541], "text": "Was fehlt jetzt noch?  ", "type": "Satz", "module_number": 31070}, {"node_index": 955, "embedding": [-12.382331848144531, -20.694486618041992, 63.82444763183594, -3.6977601051330566, -14.171061515808105, -32.144264221191406], "text": "Wir muessen jetzt noch schauen, was passiert, wenn Kuhbetrag gleich 1 ist.  ", "type": "Satz", "module_number": 31070}, {"node_index": 956, "embedding": [-10.950425148010254, -21.86441421508789, 58.654945373535156, -3.947540283203125, -11.5703125, -30.485517501831055], "text": "Naja, das erste was wir sehen, wenn nicht Kuh gleich 1, also wir brauchen jetzt die zwei Faelle.  ", "type": "Satz", "module_number": 31070}, {"node_index": 957, "embedding": [-7.623241901397705, -21.209728240966797, 39.046974182128906, 4.212043762207031, -7.031472682952881, -21.30886459350586], "text": "Kuh ist 1 oder Kuh ist minus 1.  ", "type": "Satz", "module_number": 31070}, {"node_index": 958, "embedding": [-6.232287406921387, -18.06892967224121, 32.5562629699707, 3.4120867252349854, -6.556920051574707, -17.819963455200195], "text": "Wenn Kuh gleich 1 ist, dann wissen wir, dass der Lime N gegen unendlich von Sn.  ", "type": "Satz", "module_number": 31070}, {"node_index": 959, "embedding": [-5.57852029800415, -11.732870101928711, 32.325592041015625, -1.303462028503418, -6.271414756774902, -16.423986434936523], "text": "Was ist das Sn?  ", "type": "Satz", "module_number": 31070}, {"node_index": 960, "embedding": [-9.658050537109375, -20.281190872192383, 54.10512161254883, -1.9970407485961914, -8.245631217956543, -28.186792373657227], "text": "Schauen wir nochmal kurz nach oben.", "type": "Satz", "module_number": 31070}, {"node_index": 961, "embedding": [-90.02783966064453, 145.63253784179688, 252.00537109375, 10.887945175170898, -108.06512451171875, -44.209144592285156], "text": "  ", "type": "Satz", "module_number": 31070}, {"node_index": 962, "embedding": [-5.880129337310791, 1.5803067684173584, 20.9873104095459, 0.381680428981781, -6.898196697235107, -7.076626777648926], "text": "Wir sind jetzt also in diesem Fall und da ist Sn nichts anderes als N plus 1.  ", "type": "Satz", "module_number": 31070}, {"node_index": 963, "embedding": [-6.358870506286621, -12.502806663513184, 34.0427131652832, -1.6992332935333252, -7.784601211547852, -17.324491500854492], "text": "Das bedeutet dann also, hier steht N plus 1.  N gegen unendlich ist offensichtlich dann unendlich.  ", "type": "Satz", "module_number": 31070}, {"node_index": 964, "embedding": [-6.218872547149658, -16.738162994384766, 38.66625213623047, -2.596938371658325, -7.922520637512207, -20.638933181762695], "text": "In diesem Fall wissen wir, dass die Reihe divergent ist.  ", "type": "Satz", "module_number": 31070}, {"node_index": 965, "embedding": [-6.757349491119385, -18.809926986694336, 37.18851852416992, 1.9549005031585693, -6.958211421966553, -20.117841720581055], "text": "Und was passiert, wenn ich Kuh gleich minus 1 einsetze?  ", "type": "Satz", "module_number": 31070}, {"node_index": 966, "embedding": [-9.561552047729492, -23.767986297607422, 54.72599792480469, -1.596184253692627, -7.638567924499512, -29.50126075744629], "text": "Naja, dann schauen wir uns nochmal Sn an.  ", "type": "Satz", "module_number": 31070}, {"node_index": 967, "embedding": [-5.0062432289123535, -12.495258331298828, 28.904891967773438, -1.3532171249389648, -3.874154567718506, -15.305652618408203], "text": "Das ist dann also die Entepaziasumme.  ", "type": "Satz", "module_number": 31070}, {"node_index": 968, "embedding": [-6.41728401184082, -17.507217407226562, 33.83150863647461, 3.441166400909424, -6.154987335205078, -18.0236873626709], "text": "Minus 1 hoch Kuh.", "type": "Satz", "module_number": 31070}, {"node_index": 969, "embedding": [-90.03861236572266, 145.7991943359375, 251.71022033691406, 11.155632019042969, -108.25745391845703, -43.96091079711914], "text": "  ", "type": "Satz", "module_number": 31070}, {"node_index": 970, "embedding": [-5.657932758331299, 2.7525601387023926, 19.798715591430664, 0.028296642005443573, -6.721037864685059, -6.273354530334473], "text": "Und das kommt uns bekannt vor, das war das Motivationsbeispiel am Anfang.  ", "type": "Satz", "module_number": 31070}, {"node_index": 971, "embedding": [-6.116184711456299, -9.502425193786621, 30.437442779541016, -1.3104939460754395, -6.599371910095215, -14.847063064575195], "text": "Das heisst, die Frage koennen wir auch gleich beantworten.  ", "type": "Satz", "module_number": 31070}, {"node_index": 972, "embedding": [-17.329612731933594, -22.794231414794922, 87.984375, -5.0579833984375, -33.04271697998047, -42.74264907836914], "text": "Wenn wir das jetzt nochmal aufschreiben, also 1 minus 1 plus 1 minus 1 plus 1 minus 1 plus minus und dann geht es irgendwie weiter plus minus 1 hoch N.  Denn sehen wir also, das haengt jetzt davon ab, ob das N gerade oder ungerade ist.", "type": "Satz", "module_number": 31070}, {"node_index": 973, "embedding": [-90.07251739501953, 146.29722595214844, 251.66990661621094, 10.926488876342773, -108.43966674804688, -43.82712936401367], "text": "  ", "type": "Satz", "module_number": 31070}, {"node_index": 974, "embedding": [-6.925755023956299, -6.949638843536377, 32.57633590698242, -0.9696220755577087, -7.391465187072754, -14.675555229187012], "text": "Den Wert, den koennen wir natuerlich jetzt hier angeben.  ", "type": "Satz", "module_number": 31070}, {"node_index": 975, "embedding": [-10.951680183410645, -23.872581481933594, 60.39057922363281, -0.0173305943608284, -8.730737686157227, -31.505443572998047], "text": "Was kommt denn da heraus?  ", "type": "Satz", "module_number": 31070}, {"node_index": 976, "embedding": [-15.614067077636719, -24.643205642700195, 82.23941040039062, -3.9591550827026367, -19.094463348388672, -40.80910873413086], "text": "Naja, das ist ja jetzt auch wieder das, was wir oben berechnet haben.  ", "type": "Satz", "module_number": 31070}, {"node_index": 977, "embedding": [-10.920951843261719, -23.18526840209961, 59.448116302490234, -3.9345388412475586, -10.895635604858398, -31.384126663208008], "text": "Wir sind ja jetzt hier im Fall, also Kuh gleich eins ist dieser Fall.  ", "type": "Satz", "module_number": 31070}, {"node_index": 978, "embedding": [-12.64731502532959, -20.558074951171875, 66.5401840209961, -3.753817081451416, -21.05965805053711, -33.24410629272461], "text": "Wir sind jetzt aber auch wieder in diesem Fall, weil ja minus 1 offensichtlich ungleich eins ist.", "type": "Satz", "module_number": 31070}, {"node_index": 979, "embedding": [-11.431099891662598, -30.951204299926758, 64.9201431274414, 1.0388870239257812, -13.997198104858398, -35.18466567993164], "text": "  Das heisst also, hier bekommen wir 1 minus 1 hoch N plus 1 durch 1 minus minus 1.  Also unser Kuh ist jetzt minus 1.  ", "type": "Satz", "module_number": 31070}, {"node_index": 980, "embedding": [-8.944588661193848, 0.3110722303390503, 35.82046890258789, -2.876615524291992, -21.668140411376953, -14.252364158630371], "text": "Und wenn wir das mal naeher aufschreiben, nehmen wir mal an N ist gerade, ich schreibe den Aufstueck nochmal auf.  ", "type": "Satz", "module_number": 31070}, {"node_index": 981, "embedding": [-9.638702392578125, -22.996204376220703, 53.67988204956055, -0.3198520541191101, -13.738215446472168, -28.421770095825195], "text": "So, 1 minus minus 1.  Ja, was passiert, wenn N gerade ist?  ", "type": "Satz", "module_number": 31070}, {"node_index": 982, "embedding": [-6.2659807205200195, -16.670251846313477, 33.766693115234375, 1.8676824569702148, -8.644365310668945, -18.14043617248535], "text": "Wenn N gerade ist, ist N plus 1 ungerade, also wird aus diesem Ausdruck minus 1.", "type": "Satz", "module_number": 31070}, {"node_index": 983, "embedding": [-90.07974243164062, 146.13694763183594, 251.7536163330078, 11.016599655151367, -108.34717559814453, -43.893798828125], "text": "  ", "type": "Satz", "module_number": 31070}, {"node_index": 984, "embedding": [-11.796862602233887, -20.523902893066406, 61.80400466918945, -2.488025665283203, -13.182504653930664, -30.819164276123047], "text": "Das heisst, wir bekommen hier 2 durch 2.  ", "type": "Satz", "module_number": 31070}, {"node_index": 985, "embedding": [-16.2503719329834, -15.54570198059082, 76.61930847167969, -1.4665288925170898, -17.815135955810547, -34.906795501708984], "text": "Da kommt 1 heraus.  ", "type": "Satz", "module_number": 31070}, {"node_index": 986, "embedding": [-14.500480651855469, -34.86078643798828, 84.00201416015625, -2.264338493347168, -21.364459991455078, -44.5279426574707], "text": "Und dann kommt 1 minus, falls N gerade.  ", "type": "Satz", "module_number": 31070}, {"node_index": 987, "embedding": [-5.5765252113342285, -15.619195938110352, 32.50938034057617, -1.1831045150756836, -5.071913242340088, -17.89060401916504], "text": "So, und in dem anderen Fall, was bekomme ich da?  ", "type": "Satz", "module_number": 31070}, {"node_index": 988, "embedding": [-13.120218276977539, -32.264442443847656, 76.70397186279297, -3.080913543701172, -12.107461929321289, -40.966209411621094], "text": "Ja, das koennen wir jetzt vielleicht auch direkt aufschreiben.  ", "type": "Satz", "module_number": 31070}, {"node_index": 989, "embedding": [-7.344886302947998, -19.490497589111328, 40.3192138671875, 1.1164084672927856, -8.767023086547852, -21.723356246948242], "text": "Also wenn N ungerade ist, ist N plus 1 gerade.  ", "type": "Satz", "module_number": 31070}, {"node_index": 990, "embedding": [-16.227094650268555, -29.261608123779297, 87.45524597167969, -3.844329833984375, -27.947126388549805, -44.4111213684082], "text": "Und dann haben wir hier also 1 minus 1 durch 1 minus 1 stehen.  ", "type": "Satz", "module_number": 31070}, {"node_index": 991, "embedding": [-13.68211841583252, -35.282752990722656, 82.14278411865234, -3.671322822570801, -19.374788284301758, -44.168861389160156], "text": "Ja, das ist einfach 0 durch 2.", "type": "Satz", "module_number": 31070}, {"node_index": 992, "embedding": [-90.14859008789062, 146.32260131835938, 251.96139526367188, 10.940832138061523, -108.3972396850586, -43.922183990478516], "text": "  ", "type": "Satz", "module_number": 31070}, {"node_index": 993, "embedding": [-13.570744514465332, -32.91456604003906, 79.58012390136719, -3.0619101524353027, -18.360918045043945, -42.2259635925293], "text": "Da kommt also 0 heraus, falls N ungerade.  ", "type": "Satz", "module_number": 31070}, {"node_index": 994, "embedding": [-6.088929653167725, -11.881299018859863, 32.61790084838867, -1.4786474704742432, -9.517370223999023, -16.6453800201416], "text": "Ja, das heisst also dann bei dem Paziasum sehen wir also die Folge SN konvergiert,  Entschuldigung, konvergiert nicht, weil wir jetzt sehen, wenn N gerade ist, kommt 1 heraus  und wenn N ungerade ist, kommt 0 heraus.  ", "type": "Satz", "module_number": 31070}, {"node_index": 995, "embedding": [-6.636897563934326, -7.446653366088867, 32.202110290527344, -3.0379605293273926, -11.923803329467773, -15.205309867858887], "text": "Und das ist genau das, was ich am Anfang gemacht habe, wenn wir nochmal schauen.", "type": "Satz", "module_number": 31070}, {"node_index": 996, "embedding": [-90.4149169921875, 146.27247619628906, 253.1697998046875, 10.75827407836914, -108.85143280029297, -44.431880950927734], "text": "  ", "type": "Satz", "module_number": 31070}, {"node_index": 997, "embedding": [-5.087144374847412, -6.779713153839111, 27.4628849029541, -1.0827949047088623, -4.502748966217041, -12.501073837280273], "text": "Das war ja so ein bisschen das, wo ich gesagt habe, naja, wie koennen wir das machen?  ", "type": "Satz", "module_number": 31070}, {"node_index": 998, "embedding": [-8.235315322875977, -7.771132946014404, 39.23320007324219, -2.783414125442505, -14.719900131225586, -18.164934158325195], "text": "Einmal hatten wir 0 und einmal hatten wir 1.  Und jetzt sehen wir also, dass das bedeutet, dass die Reihe nicht konvergent ist.  ", "type": "Satz", "module_number": 31070}, {"node_index": 999, "embedding": [-9.907291412353516, -21.330493927001953, 55.99845886230469, -2.165433883666992, -10.508410453796387, -28.85951805114746], "text": "Also ich schreibe nochmal auf.  ", "type": "Satz", "module_number": 31070}, {"node_index": 1000, "embedding": [-4.742846488952637, -12.133994102478027, 27.07088279724121, -0.06239587813615799, -3.895944595336914, -14.245548248291016], "text": "Die Paziasum waere jetzt dann einfach", "type": "Satz", "module_number": 31070}, {"node_index": 1001, "embedding": [-3.631035327911377, -13.893543243408203, 23.2785701751709, 1.474944829940796, -1.410101056098938, -13.286277770996094], "text": "SN ist 1, SN ist 0, SN ist 2, SN ist 1 und so weiter.  ", "type": "Satz", "module_number": 31070}, {"node_index": 1002, "embedding": [-8.786589622497559, -21.826021194458008, 53.596439361572266, -2.122946262359619, -10.62695026397705, -28.14359474182129], "text": "Und das heisst dann eben, dass die Reihe divergent ist.", "type": "Satz", "module_number": 31070}, {"node_index": 1003, "embedding": [-90.31460571289062, 146.33665466308594, 252.68142700195312, 10.976882934570312, -108.62883758544922, -44.18521499633789], "text": "  ", "type": "Satz", "module_number": 31070}, {"node_index": 1004, "embedding": [-8.424933433532715, -15.525062561035156, 45.56125259399414, -1.2489776611328125, -8.032821655273438, -22.725908279418945], "text": "Und hier schreibe ich nochmal, ich mach das mal so.  ", "type": "Satz", "module_number": 31070}, {"node_index": 1005, "embedding": [-6.058138847351074, -14.85244083404541, 32.11153793334961, 2.149304151535034, -4.828590393066406, -16.819581985473633], "text": "Das ist dann die Reihe vom Anfang.  ", "type": "Satz", "module_number": 31070}, {"node_index": 1006, "embedding": [-10.646507263183594, -10.37024974822998, 52.65726852416992, -3.7781944274902344, -18.60635757446289, -24.238035202026367], "text": "So und damit haben wir das also auch schon geklaert, diese Reihe ist also divergent.  ", "type": "Satz", "module_number": 31070}, {"node_index": 1007, "embedding": [-7.841902256011963, -11.986322402954102, 40.694122314453125, -2.6489644050598145, -8.979516983032227, -19.7579402923584], "text": "So und was man jetzt hier aber auch noch sieht, ist natuerlich im Endeffekt ist ja die Entepaziasumme,  wie wir es hier oben auch stehen haben, wieder eine neue Folge.", "type": "Satz", "module_number": 31070}, {"node_index": 1008, "embedding": [-90.46141052246094, 146.50914001464844, 253.12583923339844, 10.883953094482422, -108.72356414794922, -44.31309127807617], "text": "  ", "type": "Satz", "module_number": 31070}, {"node_index": 1009, "embedding": [-5.695472717285156, 2.6553761959075928, 19.858963012695312, 0.17826133966445923, -6.869237899780273, -6.319726467132568], "text": "Und deswegen gilt natuerlich jetzt hier auch, dass die Reihe auch noch nicht konvergent ist.  ", "type": "Satz", "module_number": 31070}, {"node_index": 1010, "embedding": [-5.736258029937744, -8.638324737548828, 28.785507202148438, -1.0621230602264404, -7.349071979522705, -13.830717086791992], "text": "Die Relation, dass sozusagen endlich Gelieder der Reihe nicht die Konvergenz beeinflussen oder die Divergenz.  ", "type": "Satz", "module_number": 31070}, {"node_index": 1011, "embedding": [-13.850979804992676, -30.669477462768555, 82.05776977539062, -4.568717002868652, -17.5147647857666, -42.40391159057617], "text": "Das heisst also, wenn wir wissen, dass diese Reihe hier die konvergiert, genau dann, wenn eben auch diese Reihe konvergiert.  ", "type": "Satz", "module_number": 31070}, {"node_index": 1012, "embedding": [-6.7721638679504395, -16.559898376464844, 40.66960525512695, -1.0265240669250488, -6.840730667114258, -21.15705680847168], "text": "Und zwar kann man sich das ueberlegen, hier steht ein M.", "type": "Satz", "module_number": 31070}, {"node_index": 1013, "embedding": [-90.3852767944336, 146.6602020263672, 252.72862243652344, 11.019372940063477, -108.6648178100586, -44.07929229736328], "text": "  ", "type": "Satz", "module_number": 31070}, {"node_index": 1014, "embedding": [-7.224596977233887, 10.377861976623535, 20.51312255859375, -0.5315142273902893, -14.333390235900879, -4.312804222106934], "text": "Wenn das M groesser 0 ist, dann koennen wir das ja aufschreiben, indem wir A0 bis Am-1 schreiben  und dann sieht man natuerlich, dass konvergiert, genau dann, wenn dieses konvergiert und voellig analog, wenn M kleiner 0 ist,  dann kann man hier eben die ersten, also Am bis Am-1, da vorschreiben und auch dann sieht man also diese Reihe konvergiert, genau dann, wenn diese konvergiert.", "type": "Satz", "module_number": 31070}, {"node_index": 1015, "embedding": [-90.7212142944336, 147.86561584472656, 253.11065673828125, 10.91717529296875, -109.69346618652344, -43.86887741088867], "text": "  ", "type": "Satz", "module_number": 31070}, {"node_index": 1016, "embedding": [-7.808403015136719, -10.423469543457031, 38.9205207824707, -1.6702806949615479, -9.170427322387695, -18.32916831970215], "text": "Und das hier vorne sind ja einfach nur endliche Werte, die beeinflussen, wie wir schon wissen, bei Folgen auch die Konvergenz nicht.  ", "type": "Satz", "module_number": 31070}, {"node_index": 1017, "embedding": [-5.525885581970215, -8.464794158935547, 28.517248153686523, -1.9235851764678955, -8.81937313079834, -13.929756164550781], "text": "Das heisst also, die ersten Summanden spielen keine Rolle, aber jetzt muessen wir trotzdem ein bisschen aufpassen, weil natuerlich der Wert der Reihe, dafuer sind diese Werte hier natuerlich mit entscheidend.", "type": "Satz", "module_number": 31070}, {"node_index": 1018, "embedding": [-8.467358589172363, -19.227001190185547, 49.65517044067383, -3.188978672027588, -11.469843864440918, -25.906696319580078], "text": "  Das heisst also, wenn wir jetzt zum Beispiel die Konvergenz hier von haben und dann diese Reihe betrachten und hier von den Wert bestimmen muessen,  dann muessen wir aber immer noch diese Zahlen dazu addieren, damit wir auch wirklich den korrekten Wert dieser Reihe bekommen.", "type": "Satz", "module_number": 31070}, {"node_index": 1019, "embedding": [-90.56034088134766, 146.93096923828125, 253.22982788085938, 10.906583786010742, -108.9759521484375, -44.20951461791992], "text": "  ", "type": "Satz", "module_number": 31070}, {"node_index": 1020, "embedding": [-6.415585994720459, -4.462573051452637, 29.240285873413086, -1.6656277179718018, -7.391091823577881, -12.624370574951172], "text": "Gut, das genuegt jetzt erstmal zu diesem ersten Teil und im zweiten Teil schauen wir uns nochmal zwei Anwendungen der geometrischen Reihe an.", "type": "Satz", "module_number": 31070}, {"node_index": 1021, "embedding": [-90.58718872070312, 147.12171936035156, 253.1466827392578, 10.98518180847168, -108.91046142578125, -44.09677505493164], "text": "  ", "type": "Satz", "module_number": 31070}, {"node_index": 1022, "embedding": [-6.104570388793945, -0.6420419812202454, 25.696226119995117, 2.9967355728149414, -10.453097343444824, -8.330061912536621], "text": "Herzlich Willkommen zum zweiten Teil der 40. Foliesung im Kurs Analysis 1 und  linieere Algebra fuer Ingenieurwissenschaften.", "type": "Satz", "module_number": 31070}, {"node_index": 1023, "embedding": [-8.831097602844238, -11.748069763183594, 45.340335845947266, -2.060945987701416, -13.389008522033691, -21.254192352294922], "text": "So werden uns jetzt im ersten Teil mit  rein beschaeftigt, haben jetzt gesehen, das ganze ist im Endeffekt auch wieder eine  Folge und zwar betrachten wir hier einfach die Folge der Partialsummen, das heisst  SN, hatten wir das bezeichnet und das ist dann einfach die endliche Summe und das  als Folge betrachtet.", "type": "Satz", "module_number": 31070}, {"node_index": 1024, "embedding": [-8.204730033874512, -21.934436798095703, 52.31454849243164, -3.4930167198181152, -9.828601837158203, -27.756147384643555], "text": "Diese untersuchen wir auf Konvergenz und wissen dann, ob die  Reihe, die unendliche Reihe konvergiert oder divergiert.", "type": "Satz", "module_number": 31070}, {"node_index": 1025, "embedding": [-4.456418514251709, -3.6746954917907715, 21.34410285949707, -1.5607209205627441, -9.330195426940918, -9.351264953613281], "text": "So und im letzten Video  hatten wir am Ende noch die geometrische Reihe kennengelernt, die sehr wichtig ist  und in diesem Video moechte ich gerne noch zwei Anwendungen dazu anbringen und  das erste ist ein sogenanntes Paradoxon aus der griechischen Mythologie und zwar  geht es da um einen Laeufer und eine Schildkroete und der Laeufer der heisst", "type": "Satz", "module_number": 31070}, {"node_index": 1026, "embedding": [-8.938813209533691, 10.770513534545898, 26.44896125793457, -1.4645614624023438, -23.826480865478516, -6.723468780517578], "text": " Arilles, der ist sportlich und schnell und ja in allen Wettkaempfen unbesiegt und  dann haben wir noch eine Schildkroete, ohne Vorteile, die wird jetzt nicht die  schnellste sein und Arilles und Arilles werde ich jetzt im folgenden Mal mit  A bezeichnen und die Schildkroete mit S. So und die beiden wollen einen Wettlauf  machen und wir haben folgende Annahmen.", "type": "Satz", "module_number": 31070}, {"node_index": 1027, "embedding": [-91.05836486816406, 148.5424041748047, 253.8495635986328, 10.963674545288086, -110.4435043334961, -43.91364288330078], "text": "  ", "type": "Satz", "module_number": 31070}, {"node_index": 1028, "embedding": [-5.032400608062744, 2.532276153564453, 16.51714515686035, 1.393251895904541, -5.873260498046875, -4.798221111297607], "text": "Und zwar, also die erste Annahme ist Arilles ist 100 Meter von der  Schildkroete entfernt.  ", "type": "Satz", "module_number": 31070}, {"node_index": 1029, "embedding": [-5.868087291717529, -2.7989819049835205, 22.128442764282227, 1.9903380870819092, -10.591651916503906, -8.89173412322998], "text": "So, das ist die erste Annahme und die zweite, das heisst also die Schildkroete  bekommt einen Vorsprung und die zweite Annahme ist, dass Arilles 10 mal so schnell ist wie  die Schildkroete.", "type": "Satz", "module_number": 31070}, {"node_index": 1030, "embedding": [-90.88597106933594, 147.5695343017578, 253.8153076171875, 11.147703170776367, -109.6601333618164, -44.18704605102539], "text": " ", "type": "Satz", "module_number": 31070}, {"node_index": 1031, "embedding": [-5.889384746551514, 4.351243019104004, 18.991146087646484, 0.23974543809890747, -7.211370468139648, -5.452669143676758], "text": "So und dann ist die Frage, die wir uns stellen oder die sich quasi die griechischen Philosophen  damals gestellt haben, wann hat Arilles die Schildkroete eingeholt?  ", "type": "Satz", "module_number": 31070}, {"node_index": 1032, "embedding": [-6.340645790100098, -5.0780839920043945, 27.908491134643555, -0.7734047770500183, -7.235688209533691, -12.433591842651367], "text": "Ja und das Ganze geht zurueck auf als Paradoxon bezeichnen nach dem Philosophen  Xenon von Elegha.", "type": "Satz", "module_number": 31070}, {"node_index": 1033, "embedding": [-11.385493278503418, -16.5865535736084, 58.05284118652344, -3.6298928260803223, -12.390119552612305, -28.45341682434082], "text": "Das ist jetzt nicht ganz belegt, aber das ist sozusagen ein gutes  Beispiel wie man sozusagen zur damaligen Zeit sich sozusagen dahinter steckt ja eine  unendliche Reihe und was man sozusagen davon gehalten hat, dass man jetzt hier eine  unendliche Reihe hat.", "type": "Satz", "module_number": 31070}, {"node_index": 1034, "embedding": [-6.442687511444092, -10.747310638427734, 34.03377914428711, -2.5375330448150635, -7.8978753089904785, -16.972854614257812], "text": "Also ich will jetzt noch nicht so viel verraten, ich sage das gleich noch.", "type": "Satz", "module_number": 31070}, {"node_index": 1035, "embedding": [-90.83560943603516, 147.14410400390625, 254.18386840820312, 10.899599075317383, -109.26815795898438, -44.50865936279297], "text": "  ", "type": "Satz", "module_number": 31070}, {"node_index": 1036, "embedding": [-6.595623970031738, 8.720441818237305, 18.962400436401367, -0.1492893099784851, -11.64553451538086, -4.148642063140869], "text": "Also wie gesagt, die Quellenangabe ist jetzt hier duerftig, aber die Idee dahinter  ist schon klar, das heisst also hier haben wir jetzt also einen Paradoxon und die  Behauptung ist jetzt wie folgt und zwar ging man davon aus, dass Arilles die Schildkroete nie  einholt, da ja die Schildkroete immer noch einen hinreichenden kleinen Vorsprung hat.", "type": "Satz", "module_number": 31070}, {"node_index": 1037, "embedding": [-90.97348022460938, 148.25498962402344, 253.8110809326172, 11.000774383544922, -109.7751693725586, -43.98038101196289], "text": "  ", "type": "Satz", "module_number": 31070}, {"node_index": 1038, "embedding": [-6.183231353759766, 7.766341686248779, 18.302616119384766, 0.07237832993268967, -10.87230110168457, -4.072608947753906], "text": "Wenn man so darueber nachdenkt, koennte man sagen, ja das stimmt doch eigentlich, das heisst also in  jedem Zeitintervall hat die Schildkroete immer noch einen Vorsprung der positiv ist.  ", "type": "Satz", "module_number": 31070}, {"node_index": 1039, "embedding": [-7.3405656814575195, 1.863101601600647, 28.171045303344727, -1.6780061721801758, -15.883312225341797, -10.405261039733887], "text": "Wir wissen natuerlich, dass das jetzt nicht stimmt und da liegt naemlich schon der Fehler,  dass er immer noch einen hinreichenden kleinen Vorsprung hat.  ", "type": "Satz", "module_number": 31070}, {"node_index": 1040, "embedding": [-7.950735569000244, -8.006640434265137, 39.8358154296875, -3.636857509613037, -13.104259490966797, -18.576770782470703], "text": "Ja und das ist aber falsch.", "type": "Satz", "module_number": 31070}, {"node_index": 1041, "embedding": [-91.04723358154297, 147.2180633544922, 255.1019744873047, 10.828514099121094, -109.46578216552734, -44.84675979614258], "text": "  ", "type": "Satz", "module_number": 31070}, {"node_index": 1042, "embedding": [-7.380894184112549, -8.645198822021484, 34.95473861694336, -0.056745000183582306, -6.8632354736328125, -16.25242805480957], "text": "Ja und wo liegt jetzt hier der Fehler?", "type": "Satz", "module_number": 31070}, {"node_index": 1043, "embedding": [-5.44740104675293, -8.718297958374023, 28.59811782836914, -1.5803987979888916, -5.4353179931640625, -13.956687927246094], "text": "Ja der Fehler zur damaligen Zeit liegt darin,  dass eben das unklar war, dass unendliche Reihen eine endliche Summe haben koennen.  ", "type": "Satz", "module_number": 31070}, {"node_index": 1044, "embedding": [-6.7097296714782715, -10.63520622253418, 35.41843795776367, -2.752413749694824, -7.680126667022705, -17.420961380004883], "text": "Das heisst also wie gesagt nichts gegen die Schildkroete, aber Arilles wird sie einholen  und das wollen wir uns mal anschauen.", "type": "Satz", "module_number": 31070}, {"node_index": 1045, "embedding": [-91.06327819824219, 147.44468688964844, 254.82838439941406, 10.934286117553711, -109.48819732666016, -44.642333984375], "text": "  ", "type": "Satz", "module_number": 31070}, {"node_index": 1046, "embedding": [-7.276374340057373, -4.718964576721191, 32.76552200317383, -1.6169319152832031, -8.780698776245117, -14.170501708984375], "text": "Da steckt nichts anderes als eine geometrische Reihe dahinter, ich schreibe das mal hier auf die naechste Seite.  ", "type": "Satz", "module_number": 31070}, {"node_index": 1047, "embedding": [-5.4487385749816895, -10.06282901763916, 27.119468688964844, 0.9780053496360779, -5.747983455657959, -13.381563186645508], "text": "Ja ueberlegen wir uns nochmal, also nach der Annahme ist sozusagen Arilles 100 Meter von der Schildkroete entfernt.", "type": "Satz", "module_number": 31070}, {"node_index": 1048, "embedding": [-90.97972106933594, 147.38348388671875, 254.44874572753906, 11.115581512451172, -109.28942108154297, -44.48141860961914], "text": " ", "type": "Satz", "module_number": 31070}, {"node_index": 1049, "embedding": [-8.068645477294922, 2.9821388721466064, 27.24911117553711, 1.2759443521499634, -14.54649543762207, -9.1417236328125], "text": "So und dann steht da eben auch Arilles ist 10 mal so schnell, das heisst also wie ist der Vorsprung?  ", "type": "Satz", "module_number": 31070}, {"node_index": 1050, "embedding": [-6.626629829406738, -8.562211990356445, 31.031587600708008, -0.7807695269584656, -9.596891403198242, -14.884958267211914], "text": "Also nach 100 Metern ist dann der Vorsprung von der Schildkroete, ja, sind dann 10 Meter.", "type": "Satz", "module_number": 31070}, {"node_index": 1051, "embedding": [-91.1573257446289, 147.33517456054688, 255.22991943359375, 10.986175537109375, -109.51888275146484, -44.82680130004883], "text": " ", "type": "Satz", "module_number": 31070}, {"node_index": 1052, "embedding": [-7.660989284515381, -6.381924629211426, 34.724334716796875, -1.5864927768707275, -8.769392013549805, -15.552799224853516], "text": "Wenn wir dann 110 Meter haben, dann ist der Vorsprung also 1 Meter und das geht dann einfach so weiter,  das heisst also jetzt hier 111 Meter, da ist dann der Vorsprung, ja was ist der Vorsprung, noch ein Zehntelmeter.", "type": "Satz", "module_number": 31070}, {"node_index": 1053, "embedding": [-91.17158508300781, 147.843505859375, 254.9635772705078, 10.956216812133789, -109.62995910644531, -44.55760955810547], "text": " ", "type": "Satz", "module_number": 31070}, {"node_index": 1054, "embedding": [-7.46766471862793, -12.932729721069336, 39.42683029174805, -0.8432251811027527, -5.893756866455078, -19.54469871520996], "text": "So und wenn wir das jetzt so weitermachen und mal zusammen addieren, ja was bekommen wir da?  ", "type": "Satz", "module_number": 31070}, {"node_index": 1055, "embedding": [-5.925561904907227, -33.7476806640625, 50.017276763916016, -0.7238416075706482, 3.8984718322753906, -31.103450775146484], "text": "Was haben wir stehen?  ", "type": "Satz", "module_number": 31070}, {"node_index": 1056, "embedding": [-5.012303352355957, -16.271770477294922, 31.74457359313965, -1.4258930683135986, -2.468377113342285, -17.812959671020508], "text": "Also am Anfang haben wir quasi 100 Meter Differenz, ja das war ja der Start.  ", "type": "Satz", "module_number": 31070}, {"node_index": 1057, "embedding": [-6.826256275177002, -16.360092163085938, 39.129974365234375, -3.0807945728302, -7.169592380523682, -20.83987808227539], "text": "Dann bekommen wir also dann nach den Vorsprung 10, dann 1, dann ein Zehntel, ein Hundertstel und so weiter.", "type": "Satz", "module_number": 31070}, {"node_index": 1058, "embedding": [-91.28462982177734, 147.3612823486328, 255.79519653320312, 10.88340950012207, -109.70108795166016, -45.04645919799805], "text": "  ", "type": "Satz", "module_number": 31070}, {"node_index": 1059, "embedding": [-8.528316497802734, -7.806214332580566, 39.67580795288086, -2.37522292137146, -12.014297485351562, -18.19822120666504], "text": "So und wenn wir das mal aufschreiben als Reihe, dann koennen wir jetzt zum Beispiel die ersten beiden Summanten,  ich bezeichne das jetzt hier mal mit A-2 und das mit A-1, dann addiere ich die beiden zusammen  und das andere was dort steht, ja das ist jetzt also eine unendliche Reihe, K gleich 0 bis unendlich und zwar von 1 Zehntel hoch K, ja.", "type": "Satz", "module_number": 31070}, {"node_index": 1060, "embedding": [-91.23246002197266, 148.2893829345703, 254.85069274902344, 11.010589599609375, -109.81974029541016, -44.35519027709961], "text": "  ", "type": "Satz", "module_number": 31070}, {"node_index": 1061, "embedding": [-12.860219955444336, -16.73497772216797, 64.40994262695312, -4.227021217346191, -18.716297149658203, -31.198965072631836], "text": "Und wenn ich hier K gleich 0 einsetze, dann kommt eben genau die 1 heraus, K gleich 1 liefert das und K gleich 2 liefert dann das und so weiter.  ", "type": "Satz", "module_number": 31070}, {"node_index": 1062, "embedding": [-5.898758411407471, -4.560754299163818, 27.826217651367188, -3.0895557403564453, -11.460916519165039, -12.654254913330078], "text": "Ja und das koennen wir ausrechnen, das haben wir am letzten Teil gesehen und wir wissen, dass die geometrische Reihe konvergiert,  wenn unser Q, das war diese Zahl betragsmaessig kleiner 1 ist und ein Zehntel ist offensichtlich kleiner 1.", "type": "Satz", "module_number": 31070}, {"node_index": 1063, "embedding": [-91.32442474365234, 148.3672332763672, 255.29356384277344, 10.908918380737305, -110.09733581542969, -44.5165901184082], "text": "  ", "type": "Satz", "module_number": 31070}, {"node_index": 1064, "embedding": [-12.214276313781738, 1.542805552482605, 49.072147369384766, -3.7209300994873047, -26.46778678894043, -19.21575355529785], "text": "Also hatten wir hier gesehen, dass die Summenformel, also das Ergebnis davon ist ja einfach 1 durch 1 minus Q  und das Q ist jetzt hier ein Zehntel, das heisst also hier steht 1 minus ein Zehntel, so und dann ja schreiben wir das nochmal auf,  dann haben wir hier also was stehen, das ist dann Zehntel und das ergibt dann einfach 111,11 Periode Meter,", "type": "Satz", "module_number": 31070}, {"node_index": 1065, "embedding": [-5.980496883392334, -0.8361515998840332, 23.835952758789062, -1.396430492401123, -13.432823181152344, -9.648069381713867], "text": " das heisst also als Fazit haben wir jetzt also gesehen, das Errilles, die Schildkroete nach 111,1 Periode Metern einholt.", "type": "Satz", "module_number": 31070}, {"node_index": 1066, "embedding": [-91.36954498291016, 148.43409729003906, 255.22975158691406, 11.10342788696289, -110.11019134521484, -44.43946838378906], "text": " ", "type": "Satz", "module_number": 31070}, {"node_index": 1067, "embedding": [-6.761410236358643, 7.986250400543213, 20.24159049987793, -0.6008285880088806, -11.895833969116211, -4.9814300537109375], "text": "Ja, gut, das war sozusagen eine erste Anwendung, mal ein wenig geschichtlich orientiert und jetzt haben wir hier auch noch 1 Periode  und da gibt es immer noch ein weiteres schoenes Beispiel, und zwar wenn wir jetzt zeigen, wenn Sie einfach mal 0,9 Periode haben,  dann wollen wir jetzt zeigen, dass das 1 ist, das klingt erstmal ein wenig komisch, dahinter steckt aber nichts anderes als eine unendliche Reihe", "type": "Satz", "module_number": 31070}, {"node_index": 1068, "embedding": [-91.50175476074219, 149.06895446777344, 255.3332061767578, 11.025871276855469, -110.38941192626953, -44.28160858154297], "text": " ", "type": "Satz", "module_number": 31070}, {"node_index": 1069, "embedding": [-5.057279586791992, -0.4284321069717407, 19.10201644897461, 0.552498996257782, -5.507997512817383, -7.081966400146484], "text": "und wenn wir mal 0,9 Periode aufschreiben, was steht eigentlich da?  ", "type": "Satz", "module_number": 31070}, {"node_index": 1070, "embedding": [-5.205476760864258, -16.26542091369629, 31.442197799682617, 0.008768610656261444, -5.301551818847656, -17.431459426879883], "text": "Ja, da steht dann irgendwie da 9 mal 0,1 plus 9 mal 0,01 plus 9 mal 0,01 und so weiter.  ", "type": "Satz", "module_number": 31070}, {"node_index": 1071, "embedding": [-10.869301795959473, -21.085371017456055, 59.583038330078125, -3.2777132987976074, -11.891743659973145, -30.56012535095215], "text": "Das heisst also, was hier steht, ist also nichts anderes als eine Reihe, eine unendliche Reihe.  ", "type": "Satz", "module_number": 31070}, {"node_index": 1072, "embedding": [-4.709457874298096, -12.794937133789062, 27.713274002075195, -0.4368268847465515, -4.915130138397217, -14.74275016784668], "text": "Die 9 taucht ueberall auf, die bleibt also hier fix stehen.", "type": "Satz", "module_number": 31070}, {"node_index": 1073, "embedding": [-7.375174045562744, -32.100711822509766, 54.00829315185547, -0.4767598509788513, 0.8991145491600037, -32.01474380493164], "text": " Ja, und was haben wir dann?  ", "type": "Satz", "module_number": 31070}, {"node_index": 1074, "embedding": [-8.618420600891113, -19.739334106445312, 49.497371673583984, -2.992382049560547, -11.869298934936523, -26.262310028076172], "text": "Naja, also 0,1 ist ja ein Zehntel, dann haben wir hier ein Hundertstel, das heisst also aehnlich wie bei dem Beispiel mit Errilles und der Schildkroete bekommen wir hier also ein Zehntel hochk.  ", "type": "Satz", "module_number": 31070}, {"node_index": 1075, "embedding": [-5.740780830383301, -8.71463394165039, 28.435958862304688, -1.3492333889007568, -7.690512180328369, -14.036094665527344], "text": "So, und die 9 koennen wir jetzt davor schreiben.", "type": "Satz", "module_number": 31070}, {"node_index": 1076, "embedding": [-91.5340805053711, 148.55235290527344, 255.76832580566406, 11.106779098510742, -110.1290054321289, -44.607513427734375], "text": "  ", "type": "Satz", "module_number": 31070}, {"node_index": 1077, "embedding": [-4.901306629180908, -7.904355049133301, 28.76726722717285, -2.1171820163726807, -4.156346321105957, -13.58552360534668], "text": "Ich gebe zu, dass das eigentlich erst die Rechenregeln sind, die wir im naechsten Video anschauen, aber Sie glauben mir das jetzt mal.  ", "type": "Satz", "module_number": 31070}, {"node_index": 1078, "embedding": [-8.92288875579834, -15.561748504638672, 47.47093200683594, -3.3248257637023926, -11.496854782104492, -23.972379684448242], "text": "Die 9 koennen wir davor schreiben und dann haben wir noch ein Zehntel hochk.  ", "type": "Satz", "module_number": 31070}, {"node_index": 1079, "embedding": [-17.142078399658203, -9.953180313110352, 77.23623657226562, -5.938882350921631, -34.83130645751953, -34.52291488647461], "text": "Jetzt muessen wir etwas aufpassen, weil wir hier mit k gleich 1 anfangen, das heisst also hier muessen wir das Ganze noch in eine Reihenform bringen, dass wir k gleich 0 haben.", "type": "Satz", "module_number": 31070}, {"node_index": 1080, "embedding": [-91.44353485107422, 148.74815368652344, 255.39012145996094, 11.02911376953125, -110.11463165283203, -44.39839172363281], "text": "  ", "type": "Satz", "module_number": 31070}, {"node_index": 1081, "embedding": [-17.855560302734375, -23.301258087158203, 89.69497680664062, -4.856254577636719, -31.81939125061035, -43.578548431396484], "text": "Und wenn ich k gleich 0 einsetze, kommt ja 1 heraus, das heisst also ich schreibe mal minus 1 plus 1 plus diese Reihe, die da steht.  ", "type": "Satz", "module_number": 31070}, {"node_index": 1082, "embedding": [-5.901886940002441, -15.596395492553711, 34.020870208740234, -1.3000633716583252, -7.097623825073242, -18.351900100708008], "text": "1 Zehntel hochk.  ", "type": "Satz", "module_number": 31070}, {"node_index": 1083, "embedding": [-9.17093563079834, -17.102270126342773, 48.40250778198242, -1.4015636444091797, -10.310189247131348, -24.504037857055664], "text": "Ja, und das, was jetzt hier steht, das ist jetzt die Reihe in der Form, wie wir sie haben wollen, das ist k gleich 0 bis unendlich.  ", "type": "Satz", "module_number": 31070}, {"node_index": 1084, "embedding": [-7.691727638244629, -20.07179069519043, 42.712928771972656, 0.45734602212905884, -8.333695411682129, -22.938318252563477], "text": "1 Zehntel hochk.", "type": "Satz", "module_number": 31070}, {"node_index": 1085, "embedding": [-91.4999771118164, 148.27723693847656, 255.74427795410156, 11.313009262084961, -109.95006561279297, -44.641666412353516], "text": "  ", "type": "Satz", "module_number": 31070}, {"node_index": 1086, "embedding": [-17.44666290283203, -8.885567665100098, 78.20240020751953, -5.919722557067871, -36.707977294921875, -34.537445068359375], "text": "Und da hatten wir ja schon gesehen, ich kann es aber nochmal aufschreiben, das ist also 1 durch 1 minus 1 Zehntel.  ", "type": "Satz", "module_number": 31070}, {"node_index": 1087, "embedding": [-7.008631706237793, -11.611696243286133, 36.01384735107422, -1.621340274810791, -8.291816711425781, -17.86786460876465], "text": "Okay, wir wollen ja am Ende zeigen, dass wirklich 1 heraus kommt.  ", "type": "Satz", "module_number": 31070}, {"node_index": 1088, "embedding": [-20.259838104248047, -15.387571334838867, 94.4704818725586, -7.048476219177246, -41.29320526123047, -43.31511688232422], "text": "Dann setzen wir mal ein, das heisst also hier steht 1 durch 1 minus 1 Zehntel und wir hatten das oben ja schon ausgerechnet.  ", "type": "Satz", "module_number": 31070}, {"node_index": 1089, "embedding": [-8.951247215270996, -20.462785720825195, 48.15846252441406, -0.1822618842124939, -11.366244316101074, -25.387229919433594], "text": "Das heisst also hier kommt 10 neunthel heraus.", "type": "Satz", "module_number": 31070}, {"node_index": 1090, "embedding": [-91.50753784179688, 148.4459686279297, 255.6779327392578, 11.286710739135742, -109.9552001953125, -44.559234619140625], "text": "  ", "type": "Satz", "module_number": 31070}, {"node_index": 1091, "embedding": [-4.983871936798096, 1.6867505311965942, 18.63121223449707, -0.09475607424974442, -5.519168853759766, -6.148775100708008], "text": "Sie sehen, ich mache das gerade ganz ausfuehrlich, damit es auch wirklich jeder glaubt.  ", "type": "Satz", "module_number": 31070}, {"node_index": 1092, "embedding": [-6.912562847137451, -11.679606437683105, 36.620948791503906, -2.393035888671875, -8.578792572021484, -18.219467163085938], "text": "So, 9 mal und dann haben wir hier also minus 9 plus 10, ich habe also beides zusammengefasst unter einen Bruch.  ", "type": "Satz", "module_number": 31070}, {"node_index": 1093, "embedding": [-7.667507171630859, -17.97571563720703, 44.580257415771484, -3.885995864868164, -9.747509956359863, -23.706384658813477], "text": "Ja, und dann sehen wir also, dass wir hier stehen haben, 9 mal 1 neunthel und das ist 1.", "type": "Satz", "module_number": 31070}, {"node_index": 1094, "embedding": [-91.60101318359375, 148.46400451660156, 256.24334716796875, 11.025846481323242, -110.09474182128906, -44.81732177734375], "text": "  ", "type": "Satz", "module_number": 31070}, {"node_index": 1095, "embedding": [-10.171881675720215, -13.75671672821045, 52.23738479614258, -3.169851779937744, -11.005030632019043, -25.153648376464844], "text": "Ja, also das heisst hinter periodischen Dezimalzahlen stecken dann eben unendliche Reihen, die wir hier also so ausrechnen koennen.  ", "type": "Satz", "module_number": 31070}, {"node_index": 1096, "embedding": [-8.80687427520752, -13.782588005065918, 45.16940689086914, -2.582810401916504, -13.190345764160156, -22.517732620239258], "text": "Und da sehen wir jetzt also sehr schoen, dass also 0,9 Periode gleich 1 ist.", "type": "Satz", "module_number": 31070}, {"node_index": 1097, "embedding": [-6.087884902954102, -13.735918045043945, 34.7916374206543, -1.9950225353240967, -6.78855562210083, -18.183847427368164], "text": " So, das waren jetzt zwei schoene Anwendungen zur geometrischen Reihe und wie gesagt, ich habe jetzt hier in diesem einen Schritt eben schon verwendet,  dass ich diese 9 jetzt hier davor schreiben kann, also hier.  ", "type": "Satz", "module_number": 31070}, {"node_index": 1098, "embedding": [-4.855364799499512, -13.126806259155273, 30.097898483276367, -2.4209301471710205, -5.250241756439209, -16.1633358001709], "text": "Und das werden wir dann gleich sehen im naechsten Teil bei den Rechenregeln.", "type": "Satz", "module_number": 31070}, {"node_index": 1099, "embedding": [-91.6561279296875, 148.50926208496094, 256.4818115234375, 11.034730911254883, -110.14006042480469, -44.891048431396484], "text": "  ", "type": "Satz", "module_number": 31070}, {"node_index": 1100, "embedding": [-8.484046936035156, -17.664390563964844, 49.33549880981445, -3.097268581390381, -9.463339805603027, -24.959186553955078], "text": "Die Rechenregeln fuer Konvergente rein und dann werden wir uns auch noch ein notwendiges Konvergenzkriterium anschauen.  ", "type": "Satz", "module_number": 31070}, {"node_index": 1101, "embedding": [-3.7022504806518555, -11.343209266662598, 23.920406341552734, -1.1403846740722656, -4.238389492034912, -12.742681503295898], "text": "Also das muss dann erfuellt sein, damit die Reihe ueberhaupt konvergieren kann.", "type": "Satz", "module_number": 31070}, {"node_index": 1102, "embedding": [-91.6343765258789, 148.67323303222656, 256.26300048828125, 11.122293472290039, -110.12771606445312, -44.72331237792969], "text": "  ", "type": "Satz", "module_number": 31070}, {"node_index": 1103, "embedding": [-5.995657444000244, -1.8145594596862793, 26.257186889648438, 3.272712469100952, -10.565401077270508, -8.823392868041992], "text": "Herzlich willkommen zum dritten Teil der 40. Foliesung im Kurs Analysis 1 und  linearer Algebra fuer Ingenieurwissenschaften.", "type": "Satz", "module_number": 31070}, {"node_index": 1104, "embedding": [-3.8392722606658936, -7.074717044830322, 20.926240921020508, 0.08530550450086594, -6.184855937957764, -9.83996868133545], "text": "Wir hatten jetzt im  letzten Video noch zwei schoene Anwendungen der geometrischen Reihe gesehen und  da habe ich ja schon mal an einer Stelle die Rechenregeln fuer  konvergente Reihen angewandt und das wollen wir uns gleich als erstes anschauen  auf den Folien und wir ahnen schon, dass da alles genauso funktioniert, wie wir das", "type": "Satz", "module_number": 31070}, {"node_index": 1105, "embedding": [-91.68182373046875, 149.0360565185547, 256.16552734375, 11.135780334472656, -110.30333709716797, -44.56280517578125], "text": " ", "type": "Satz", "module_number": 31070}, {"node_index": 1106, "embedding": [-5.889658451080322, 4.133548259735107, 18.112628936767578, 1.9415016174316406, -6.077491760253906, -4.789294719696045], "text": "eigentlich erwartet haben.", "type": "Satz", "module_number": 31070}, {"node_index": 1107, "embedding": [-8.482027053833008, -13.559736251831055, 44.173240661621094, -0.9719182848930359, -10.598511695861816, -21.394559860229492], "text": "Das heisst also wenn wir zwei konvergente Reihen haben  hier mit Gliedern", "type": "Satz", "module_number": 31070}, {"node_index": 1108, "embedding": [-8.18972110748291, 0.8870872259140015, 30.413076400756836, 0.9891150593757629, -17.302030563354492, -11.09872817993164], "text": "Ak und hier mit Bk und C ist eine Konstante aus R, dann  konvergieren eben auch diese Reihen also die Reihe mit den Gliedern Ak plus Bk  und auch die Reihe mit den Gliedern Ca Ak und wir koennen natuerlich dann auch die  Reihen direkt angeben, indem wir eben wissen, dass diese Reihe nichts anderes ist  als die Summe von diesen beiden Reihen, das heisst von den Werten diese Reihe", "type": "Satz", "module_number": 31070}, {"node_index": 1109, "embedding": [-91.91326904296875, 149.7258758544922, 256.45623779296875, 11.160608291625977, -110.94658660888672, -44.46017837524414], "text": " ", "type": "Satz", "module_number": 31070}, {"node_index": 1110, "embedding": [-4.712709426879883, -11.157244682312012, 32.41921615600586, -1.370131492614746, -1.765586018562317, -15.90418815612793], "text": "und voellig analog ist eben hier", "type": "Satz", "module_number": 31070}, {"node_index": 1111, "embedding": [-6.310903072357178, -13.528883934020996, 38.81521987915039, -2.66648530960083, -8.645870208740234, -19.5947208404541], "text": "koennen wir das C davor schreiben und bekommen  dann genau diesen Ausdruck.", "type": "Satz", "module_number": 31070}, {"node_index": 1112, "embedding": [-5.557597637176514, -5.311333656311035, 28.755250930786133, -2.9174089431762695, -10.801919937133789, -12.869209289550781], "text": "Die letzte Regel, die hatte ich wie gesagt im  letzten Video schon mal an einer Stelle verwendet, wichtig hierbei ist nur, dass  Sie das Ganze nur machen koennen, wenn Sie wirklich wissen, dass diese beiden  Reihen konvergent sind, ansonsten hatten wir ja auch schon bei Folgen gesehen,  dass es dagegen Beispiele gibt, wenn Sie diese Regeln anwenden und nicht wissen,", "type": "Satz", "module_number": 31070}, {"node_index": 1113, "embedding": [-91.9361343383789, 149.6165008544922, 256.86279296875, 10.980390548706055, -110.92020416259766, -44.66179275512695], "text": " ", "type": "Satz", "module_number": 31070}, {"node_index": 1114, "embedding": [-7.409007549285889, -9.639580726623535, 37.317161560058594, -1.465416669845581, -9.215993881225586, -17.402666091918945], "text": "dass Konvergenz vorhanden ist und die Beweise dazu, die das klappt eben voellig  analog beziehungsweise folgt das sofort aus den Grenzwerts setzen fuer Folgen,  die wir in Vorlesung 18 schon eingefuehrt hatten.", "type": "Satz", "module_number": 31070}, {"node_index": 1115, "embedding": [-91.83590698242188, 149.36990356445312, 256.50726318359375, 11.147781372070312, -110.45063018798828, -44.58330535888672], "text": " ", "type": "Satz", "module_number": 31070}, {"node_index": 1116, "embedding": [-8.22364330291748, 8.151762008666992, 27.969831466674805, -2.363483428955078, -17.524391174316406, -8.067185401916504], "text": "So diese Regeln koennen wir also verwenden und das war es auch schon zu den Rechenregeln,  mehr moechte ich dazu gar nicht sagen, wie gesagt, dass Aufsplitten hier in dieser Form  und in dieser Form, das duerfen Sie also verwenden, sofern Sie wissen, dass die  Reihen konvergieren.", "type": "Satz", "module_number": 31070}, {"node_index": 1117, "embedding": [-7.76405143737793, -0.7754122018814087, 31.426794052124023, -2.315316915512085, -14.630084991455078, -12.602088928222656], "text": "So und vielleicht jetzt mal eine Frage,  allgemeiner Art, wann eigentlich eine Reihe konvergiert?  ", "type": "Satz", "module_number": 31070}, {"node_index": 1118, "embedding": [-9.595242500305176, -23.206037521362305, 58.25833511352539, -4.31184196472168, -12.066069602966309, -30.572799682617188], "text": "Und zwar wollen wir uns ueberlegen, wie wir ein notwendiges Kriterium angeben  koennen fuer die Konvergenz einer Reihe.  ", "type": "Satz", "module_number": 31070}, {"node_index": 1119, "embedding": [-6.245889186859131, -17.74185562133789, 39.00332260131836, -2.2600011825561523, -6.413751602172852, -21.028871536254883], "text": "Ja und dazu betrachten wir mal Folgen die Ueberlegung.", "type": "Satz", "module_number": 31070}, {"node_index": 1120, "embedding": [-4.52077054977417, -12.363373756408691, 26.859342575073242, -0.019367165863513947, -3.066215991973877, -14.254491806030273], "text": "Wir schauen uns mal eine Reihe an  ueber Gliedern", "type": "Satz", "module_number": 31070}, {"node_index": 1121, "embedding": [-5.499153137207031, -13.58004379272461, 31.56125831604004, 0.20140725374221802, -4.655376434326172, -16.480051040649414], "text": "AK und wir nehmen jetzt mal an, dass diese konvergent ist und dem  zufolge hier die Notation eben ein Reihenwert hat, den bezeichnen wir mit S.", "type": "Satz", "module_number": 31070}, {"node_index": 1122, "embedding": [-91.97994232177734, 149.03451538085938, 257.3211669921875, 11.182062149047852, -110.54875183105469, -45.006141662597656], "text": " ", "type": "Satz", "module_number": 31070}, {"node_index": 1123, "embedding": [-9.370782852172852, -11.115118026733398, 46.57535171508789, -2.542896270751953, -13.778881072998047, -21.95087432861328], "text": "Was wir dann aber wissen, was bedeutet das nochmal, das hiess also, dass die Summe  der Partialfolgen, also die Entepartialsumme als Folge, also mit SN bezeichnet,  die konvergiert dann gegen S.", "type": "Satz", "module_number": 31070}, {"node_index": 1124, "embedding": [-6.84025239944458, -12.249497413635254, 35.54914855957031, 0.6537688374519348, -10.643537521362305, -17.665241241455078], "text": "Das heisst also, Limes SN ist gleich S und  zur Wiederholung SN war ja dann einfach die Summe der ersten N plus 1  Folgendlieder, also K gleich 0 bis N, AK.", "type": "Satz", "module_number": 31070}, {"node_index": 1125, "embedding": [-10.400434494018555, -14.475761413574219, 53.17515182495117, -3.5724267959594727, -18.065277099609375, -25.996381759643555], "text": "So und das wiederum bedeutet aber auch,  wenn diese Folge konvergiert, also SN ist ja jetzt nichts anderes als eine Folge,  dann wissen wir natuerlich auch, dass die Folge SN plus 1 ebenfalls konvergiert und  auch gegen den Grenzwert S konvergiert.", "type": "Satz", "module_number": 31070}, {"node_index": 1126, "embedding": [-6.739633083343506, -13.942832946777344, 37.8514518737793, -2.341459274291992, -8.60116958618164, -19.457807540893555], "text": "Wir machen jetzt so einen aehnlichen Trick,  den wir schon mal gemacht haben, als es darum ging, bei der Wurzelfolge den Grenzwert zu bestimmen.", "type": "Satz", "module_number": 31070}, {"node_index": 1127, "embedding": [-91.88082885742188, 149.3394012451172, 256.7666931152344, 11.129892349243164, -110.4280014038086, -44.692989349365234], "text": "  ", "type": "Satz", "module_number": 31070}, {"node_index": 1128, "embedding": [-7.080235481262207, -2.7879085540771484, 29.329816818237305, 0.9678205847740173, -12.116863250732422, -11.817626953125], "text": "Wir wissen also, Limes SN ist gleich S und der Limes von SN plus 1 ist aber auch S.  ", "type": "Satz", "module_number": 31070}, {"node_index": 1129, "embedding": [-7.092214107513428, -3.5227956771850586, 29.880138397216797, 0.18403226137161255, -17.264766693115234, -12.6573486328125], "text": "Das heisst also, wir nehmen mal die Differenz und das heisst also, wenn ich S minus S schreibe,  ist das offensichtlich 0 und wenn ich das mal ausschreibe, verwende ich hier im ersten Schritt  SN plus 1 minus Limes SN.", "type": "Satz", "module_number": 31070}, {"node_index": 1130, "embedding": [-6.51917028427124, -1.0891780853271484, 27.37846565246582, -1.5711801052093506, -17.418819427490234, -10.97589111328125], "text": "So jetzt kann ich hier natuerlich ganz normal  Grenzwertsaetze anwenden, das sind konvergente Folgen, also kann ich das auch zusammenschreiben.  ", "type": "Satz", "module_number": 31070}, {"node_index": 1131, "embedding": [-9.907048225402832, -18.69025993347168, 54.679813385009766, -2.1643543243408203, -17.22079849243164, -27.750871658325195], "text": "Das heisst also, hier steht SN plus 1 minus SN.", "type": "Satz", "module_number": 31070}, {"node_index": 1132, "embedding": [-19.387441635131836, -26.318527221679688, 98.82090759277344, -6.205357551574707, -34.83305358886719, -48.396602630615234], "text": "Ja jetzt ueberlegen wir uns nochmal,  das ist jetzt einfach k gleich 0 bis N plus 1 ak und das hier, das ist das ganze bis N.", "type": "Satz", "module_number": 31070}, {"node_index": 1133, "embedding": [-9.625228881835938, -17.049888610839844, 51.38212203979492, -3.1374893188476562, -13.854364395141602, -25.95230484008789], "text": " Naja und wenn wir das jetzt hier mal, jetzt haben wir hier ein Minus Zeichen,  das heisst also, was bleibt am Ende uebrig?", "type": "Satz", "module_number": 31070}, {"node_index": 1134, "embedding": [-3.664242744445801, -10.481803894042969, 22.81373405456543, -1.3854188919067383, -4.049162864685059, -12.231213569641113], "text": "Am Ende bleibt nur uebrig ak fuer k gleich N plus 1.", "type": "Satz", "module_number": 31070}, {"node_index": 1135, "embedding": [-91.96074676513672, 149.2540740966797, 257.1379089355469, 11.159414291381836, -110.50321960449219, -44.86123275756836], "text": " ", "type": "Satz", "module_number": 31070}, {"node_index": 1136, "embedding": [-8.440805435180664, -1.0438740253448486, 33.80218505859375, -2.015460968017578, -13.189781188964844, -13.508346557617188], "text": "Alles andere hebt sich auf, das heisst wir bekommen jetzt hier  der Limes N gegen und endlich von an plus 1 und was wir jetzt gesehen haben ist,  unter anderem, dass die Reihe konvergiert, haben wir also gesehen, dass der Limes der Glieder,  das heisst also hier an plus 1, der muss 0 sein.", "type": "Satz", "module_number": 31070}, {"node_index": 1137, "embedding": [-15.132369995117188, -28.316028594970703, 83.2895278930664, -4.227105617523193, -23.372690200805664, -42.40681076049805], "text": "Das heisst also Fazit ist,  dass also die ak's eine 0 folge bilden muessen.", "type": "Satz", "module_number": 31070}, {"node_index": 1138, "embedding": [-4.731514930725098, -4.010344505310059, 21.71583366394043, -1.1075150966644287, -10.273234367370605, -9.727079391479492], "text": "Das heisst das ist also ein notwendiges Kriterium,  das heisst also hier Limes N gegen und endlich von an plus 1, das ist gleich 0.", "type": "Satz", "module_number": 31070}, {"node_index": 1139, "embedding": [-8.643242835998535, -18.08167266845703, 48.62788009643555, -1.55828857421875, -10.92236614227295, -25.02958869934082], "text": "Und das ist genau  das notwendige Kriterium, was wir also jetzt hierfuer rein haben und das schauen wir uns nochmal  zusammengefasst auf den Folien an.", "type": "Satz", "module_number": 31070}, {"node_index": 1140, "embedding": [-9.236873626708984, -7.1793975830078125, 43.64853286743164, -2.485016345977783, -15.924860954284668, -19.46463966369629], "text": "Also notwendiges Kriterium ist also, wenn wir wissen,  dass die Reihe konvergiert, dann bilden die ak's eine 0 folge.", "type": "Satz", "module_number": 31070}, {"node_index": 1141, "embedding": [-6.600254058837891, 0.10495565831661224, 28.28156089782715, -3.7405471801757812, -15.400472640991211, -11.412189483642578], "text": "Und es ist noch kein hinreichendes  Kriterium, wie wir auch gleich noch sehen werden, aber es ist eben notwendig und wir wissen ja,  wenn wir ein notwendiges Kriterium haben, was jetzt nicht hinreichend ist, dann verwenden wir das  oftmals, um zu zeigen, dass etwas nicht konvergiert.", "type": "Satz", "module_number": 31070}, {"node_index": 1142, "embedding": [-9.590418815612793, 5.375946044921875, 36.31851577758789, -5.1055378913879395, -23.7061824798584, -13.159008026123047], "text": "Das heisst also hier nochmal in der Bemerkung,  wenn also der Limes von ak fuer k gegen und endlich ungleich 0 ist oder eben die folge gar nicht  konvergiert, dann konvergiert eben auch die Reihe nicht.", "type": "Satz", "module_number": 31070}, {"node_index": 1143, "embedding": [-9.845641136169434, 1.3375028371810913, 39.492191314697266, -4.490311622619629, -22.10852813720703, -15.618392944335938], "text": "Das heisst dieses notwendige Kriterium ist  fuer uns ein Test, um zu schauen, ob eine Reihe divergent ist.", "type": "Satz", "module_number": 31070}, {"node_index": 1144, "embedding": [-7.737883567810059, -7.182488918304443, 37.17886734008789, -3.427039623260498, -14.26052188873291, -17.23116683959961], "text": "Wenn wir also eine Reihe haben  und wir wissen, dass die ak's eine 0 folge bilden, sind wir erst mal nicht wirklich schlauer.", "type": "Satz", "module_number": 31070}, {"node_index": 1145, "embedding": [-4.913095951080322, -10.357053756713867, 27.009733200073242, -1.8198792934417725, -6.150123119354248, -13.804224014282227], "text": "Das heisst,  wir muessen weitere Untersuchungen ansetzen.", "type": "Satz", "module_number": 31070}, {"node_index": 1146, "embedding": [-8.409701347351074, -18.608917236328125, 49.199283599853516, -3.350207805633545, -12.003778457641602, -25.498815536499023], "text": "Aber wenn wir wissen, wir haben eine Reihe und die ak's  sind keine 0 folge, dann wissen wir automatisch, dass die Reihe divergent ist.", "type": "Satz", "module_number": 31070}, {"node_index": 1147, "embedding": [-7.585495948791504, -2.9836339950561523, 34.82781219482422, -4.488495826721191, -16.044912338256836, -15.106578826904297], "text": "Wichtig bei diesem  Kriterium ist auf jeden Fall noch, dass die Umkehrung eben im Allgemeinen falsch ist, ja, deswegen eben  kein hinreichendes Kriterium, sondern nur ein notwendiges und hierzu vielleicht ein kleines  Gegenbeispiel.", "type": "Satz", "module_number": 31070}, {"node_index": 1148, "embedding": [-6.05576229095459, -6.8479437828063965, 30.92890739440918, -3.324335813522339, -10.683247566223145, -14.54317855834961], "text": "Und zwar schauen wir uns hier die harmonische Reihe an.", "type": "Satz", "module_number": 31070}, {"node_index": 1149, "embedding": [-7.366513729095459, -15.892353057861328, 42.97397994995117, -4.5762810707092285, -9.951680183410645, -22.441415786743164], "text": "Die harmonische Reihe,  das ist nichts anderes als die Reihe k gleich eins bis und endlich von eins durch k. Wenn wir das mal  aufschreiben, also haben wir hier eins, ein halb, ein Drittel, ein Viertel und so weiter.  ", "type": "Satz", "module_number": 31070}, {"node_index": 1150, "embedding": [-7.185240268707275, -15.394403457641602, 41.63002395629883, -3.546980857849121, -8.549293518066406, -21.493715286254883], "text": "So, das Ganze ist die harmonische Reihe.", "type": "Satz", "module_number": 31070}, {"node_index": 1151, "embedding": [-6.988214015960693, -8.897077560424805, 33.989227294921875, -1.877082347869873, -7.504524230957031, -16.089488983154297], "text": "Die sollten Sie sich merken.", "type": "Satz", "module_number": 31070}, {"node_index": 1152, "embedding": [-7.816840648651123, -12.438911437988281, 39.94195556640625, -2.081892490386963, -6.8091511726379395, -19.724376678466797], "text": " Ja, und warum ist die jetzt eigentlich, warum ist die jetzt divergent?", "type": "Satz", "module_number": 31070}, {"node_index": 1153, "embedding": [-19.2371826171875, -48.42247772216797, 114.27533721923828, -4.977110862731934, -17.134105682373047, -61.445499420166016], "text": "Ja, das wollen wir uns jetzt  mal kurz ueberlegen.", "type": "Satz", "module_number": 31070}, {"node_index": 1154, "embedding": [-7.167037010192871, -12.488390922546387, 39.42927932739258, -2.3270254135131836, -9.537811279296875, -19.587621688842773], "text": "Und zwar, ich schreibe sie nochmal auf, das heisst also diese Reihe ist divergent.", "type": "Satz", "module_number": 31070}, {"node_index": 1155, "embedding": [-8.592886924743652, -4.554808139801025, 38.91178512573242, -3.396371364593506, -18.90491485595703, -17.064451217651367], "text": " Denn und jetzt ist die Idee wie folgt, wir setzen mal fuer n gleich 2 hoch m ein und betrachten mal  jetzt die Partialsumfolge, das heisst jetzt hier die Entepartialsumme,", "type": "Satz", "module_number": 31070}, {"node_index": 1156, "embedding": [-5.102643013000488, -7.7783637046813965, 27.17913055419922, -2.356363296508789, -8.755860328674316, -13.329533576965332], "text": "also sn ist ja dann s2  hoch m, m ist jetzt irgendwie eine natuerliche Zahl.", "type": "Satz", "module_number": 31070}, {"node_index": 1157, "embedding": [-11.626448631286621, -6.878261089324951, 53.42007827758789, -5.667301654815674, -23.774343490600586, -24.034648895263672], "text": "So, und wenn wir die Reihe mal aufschreiben,  also k gleich eins, jetzt haben wir hier bis 2 hoch m, eins durch k,  ja was haben wir da stehen, ich schreibe das mal auf die naechste Zeile.  ", "type": "Satz", "module_number": 31070}, {"node_index": 1158, "embedding": [-9.633949279785156, -23.797670364379883, 57.04391098022461, -3.3845486640930176, -12.265042304992676, -30.612751007080078], "text": "Ja, dann haben wir jetzt hier also eins, dann ein halb,  plus ein Drittel, plus ein Viertel.", "type": "Satz", "module_number": 31070}, {"node_index": 1159, "embedding": [-4.718421459197998, -12.807809829711914, 28.57830238342285, -2.290872812271118, -5.329699516296387, -15.468942642211914], "text": "Ich schreibe jetzt mal ein bisschen mehr Glieder auf, weil wir  wollen die geeignet jetzt abschaetzen nach unten durch etwas Unbeschraenktes.", "type": "Satz", "module_number": 31070}, {"node_index": 1160, "embedding": [-17.890531539916992, -16.959749221801758, 86.09251403808594, -6.1181254386901855, -36.988075256347656, -40.32941436767578], "text": "So, und dann geht das so  weiter plus und dann haben wir hier eins durch zwei hoch m, minus eins, plus eins durch  zwei hoch m, minus eins plus eins.", "type": "Satz", "module_number": 31070}, {"node_index": 1161, "embedding": [-3.468942642211914, -8.203689575195312, 20.14484405517578, -1.5026025772094727, -5.365326881408691, -10.440616607666016], "text": "Das geht dann weiter bis zum letzten Summand,  eins durch zwei hoch m.", "type": "Satz", "module_number": 31070}, {"node_index": 1162, "embedding": [-6.077077388763428, -15.076210021972656, 35.9163703918457, -1.7124876976013184, -6.365721225738525, -18.848276138305664], "text": "Ich habe jetzt erstmal nur das ganze ausgeschrieben.  ", "type": "Satz", "module_number": 31070}, {"node_index": 1163, "embedding": [-10.736355781555176, -20.783815383911133, 59.34962844848633, -4.1762309074401855, -15.3316068649292, -30.5905818939209], "text": "So, und was wir jetzt aber sehen ist, also dieser Ausdruck hier,  das ist ja ein halb, also das kann ich nach unten abschaetzen durch die Zahl selbst.", "type": "Satz", "module_number": 31070}, {"node_index": 1164, "embedding": [-4.601108074188232, -9.132523536682129, 26.37274932861328, -2.3029820919036865, -5.790511131286621, -13.355314254760742], "text": "Okay,  das ist erstmal noch nicht so weiter spektakulaer.", "type": "Satz", "module_number": 31070}, {"node_index": 1165, "embedding": [-7.600533485412598, -16.32154083251953, 44.395294189453125, -3.7508749961853027, -9.62730884552002, -23.081876754760742], "text": "Wenn ich diese beiden hier abschaetze,  dann weiss ich also, ein Viertel ist die kleinere Zahl, also kann ich das nach unten abschaetzen  durch zweimal ein Viertel.", "type": "Satz", "module_number": 31070}, {"node_index": 1166, "embedding": [-8.253425598144531, -17.2430477142334, 48.252532958984375, -5.008692741394043, -10.769525527954102, -25.08879852294922], "text": "Also genauer gesagt wuerde ich jetzt ein Drittel nach unten abschaetzen  durch ein Viertel, dann habe ich zweimal ein Viertel dastehen und das liefert dann wieder  ein halb.", "type": "Satz", "module_number": 31070}, {"node_index": 1167, "embedding": [-5.60476541519165, -7.931275844573975, 31.17111587524414, -4.6157684326171875, -10.233343124389648, -15.139497756958008], "text": "Und so machen wir das weiter, jetzt nehmen wir vier Summanden und alle Summanden,  also ein Fuenftel, ein Sechstel und ein Siemdel, schaetzen wir nach unten durch ein Achtel ab  und bekommen dann viermal ein Achtel und viermal ein Achtel, aha, das ist ein halb.", "type": "Satz", "module_number": 31070}, {"node_index": 1168, "embedding": [-13.007634162902832, 0.8718972206115723, 52.7234992980957, -5.167899131774902, -29.710018157958984, -21.119958877563477], "text": " So, und das Gleiche machen wir jetzt hier hinten, indem wir das ganze hier ebenso abschaetzen,  jeden einzelnen und zwar durch 1 durch 2 hoch m, das heisst also  also hier stimmt was nicht, Moment, hier sehe ich gerade hier fehlt was, hier muss 1 stehen,  ja, unter dem Bruchstrich, so passt es dann.", "type": "Satz", "module_number": 31070}, {"node_index": 1169, "embedding": [-10.042215347290039, -27.15440559387207, 60.76033401489258, -1.81964111328125, -6.345656394958496, -33.22286605834961], "text": "Ja und was ist das jetzt, wenn wir das mal betrachten?  ", "type": "Satz", "module_number": 31070}, {"node_index": 1170, "embedding": [-9.484031677246094, -11.131900787353516, 47.80850601196289, -4.268604278564453, -17.576942443847656, -22.96705436706543], "text": "Da habe ich jetzt also 1 durch 2 hoch m minus 1 plus 1,  dann geht das immer so weiter bis ich dann  bei 1 durch 2 hoch m lande, das heisst also hier kann ich schreiben,  das ist dann, jetzt kommt die Anzahl der Faktoren, das heisst all diese hier schaetze ich also", "type": "Satz", "module_number": 31070}, {"node_index": 1171, "embedding": [-91.95160675048828, 149.7571258544922, 256.6993103027344, 11.145511627197266, -110.58496856689453, -44.52742004394531], "text": " ", "type": "Satz", "module_number": 31070}, {"node_index": 1172, "embedding": [-5.258662700653076, 1.3328527212142944, 17.487924575805664, 2.829435110092163, -5.25297212600708, -5.530108451843262], "text": "nach unten", "type": "Satz", "module_number": 31070}, {"node_index": 1173, "embedding": [-91.6047134399414, 148.96080017089844, 255.66635131835938, 11.406852722167969, -110.00884246826172, -44.36906051635742], "text": "ab", "type": "Satz", "module_number": 31070}, {"node_index": 1174, "embedding": [-6.442222595214844, 0.9295181035995483, 24.849212646484375, -1.5936317443847656, -11.78852367401123, -9.360152244567871], "text": "durch diesen, ja, all die davor sind und das sind dann eben 2 hoch m minus 1  mal 1 durch 2 hoch m und siehe da, wenn wir das anschauen, da kommt dann wieder ein halb heraus.", "type": "Satz", "module_number": 31070}, {"node_index": 1175, "embedding": [-92.08521270751953, 149.98838806152344, 257.0289611816406, 11.156856536865234, -110.77940368652344, -44.5792121887207], "text": " ", "type": "Satz", "module_number": 31070}, {"node_index": 1176, "embedding": [-7.879936695098877, -3.6354587078094482, 33.7838134765625, -1.6850924491882324, -13.141883850097656, -14.397870063781738], "text": "So, das heisst alles in allem, wenn wir das so machen, bekommen wir also  1 plus, ja und jetzt haben wir hier, das heisst also immer ein halb stehen und das ganze m mal,  das heisst also hier steht 1 plus m mal ein halb, ja und das bedeutet also,  dass dann sn unbeschraenkt ist und der limes sn fuer n gegen unendlich, das ist dann unendlich.", "type": "Satz", "module_number": 31070}, {"node_index": 1177, "embedding": [-92.15950012207031, 150.2118682861328, 257.1703186035156, 11.157600402832031, -110.93217468261719, -44.55936050415039], "text": "  ", "type": "Satz", "module_number": 31070}, {"node_index": 1178, "embedding": [-7.0775275230407715, 9.134105682373047, 20.43302345275879, -0.379951536655426, -13.132953643798828, -4.725709915161133], "text": "Also vielleicht nochmal, warum ist das jetzt so, also hier starte ich, hier habe ich jetzt das m,  wenn ich jetzt m also gross waehle, ja, das heisst ich moechte ja hier die Reihe dann irgendwann haben,  dann sieht man also, das wird genauso gross, es ist also nach unten einfach nicht beschraenkt  und geht dann quasi gegen unendlich, ich kann ja auf beiden Seiten den limes bilden", "type": "Satz", "module_number": 31070}, {"node_index": 1179, "embedding": [-92.40979766845703, 150.73585510253906, 257.7260437011719, 11.171037673950195, -111.50560760498047, -44.60982131958008], "text": " ", "type": "Satz", "module_number": 31070}, {"node_index": 1180, "embedding": [-8.07661247253418, -3.102067470550537, 34.97017288208008, -2.2670702934265137, -13.106868743896484, -14.7156400680542], "text": "und dann geht dieser Ausdruck hier fuer m gegen unendlich eben gegen unendlich und dann muss  das natuerlich hier auch unendlich sein, aber wir sehen an diesem Beispiel und deswegen auch  nochmal, der hinweist, dass das notwendige Kriterium nicht umkehrbar ist, dass also die Folge 1 durch k,  k aus n ist eine Nullfolge  und das bedeutet also, dass notwendige Kriterium  also nicht umkehrbar  ist", "type": "Satz", "module_number": 31070}, {"node_index": 1181, "embedding": [-11.27645492553711, -3.9111385345458984, 50.15793228149414, -5.171308517456055, -21.319263458251953, -21.542856216430664], "text": " das heisst also hier in diesem Beispiel haben wir also eine Reihe betrachtet,  genau gesagt hier die harmonische Reihe und die Glieder, die stehen, die bilden eine Nullfolge,  trotzdem ist diese Reihe divergent, das heisst also  das Kriterium koennen wir tatsaechlich nur anwenden, wenn wir zeigen wollen, dass eine Reihe", "type": "Satz", "module_number": 31070}, {"node_index": 1182, "embedding": [-92.35296630859375, 150.3950958251953, 257.8985595703125, 11.060094833374023, -111.33348846435547, -44.79619216918945], "text": " ", "type": "Satz", "module_number": 31070}, {"node_index": 1183, "embedding": [-9.29680061340332, -3.4846689701080322, 41.43677520751953, -3.325810432434082, -17.017295837402344, -17.58257484436035], "text": "divergent ist, wenn sie jetzt die Reihe zum Beispiel k gleich null bis unendlich von k nehmen,  dann wissen sie k, das ist keine Nullfolge, also diese Reihe ist automatisch divergent,  das heisst das Kriterium ist schon ganz gut, aber eben bei solchen speziellen Reihen  muss man sich dann doch noch andere Sachen ueberlegen, das heisst da kann man dann nichts", "type": "Satz", "module_number": 31070}, {"node_index": 1184, "embedding": [-92.33722686767578, 150.4762725830078, 257.7264099121094, 11.141357421875, -111.22857666015625, -44.68428421020508], "text": " ", "type": "Satz", "module_number": 31070}, {"node_index": 1185, "embedding": [-11.217350006103516, -23.504161834716797, 65.31468963623047, -4.211324691772461, -13.657092094421387, -33.38601303100586], "text": "aussagen ueber die Konvergenz, es ist eben nur ein Kriterium, was uns dann aussagt,  wann eine Reihe divergent ist.", "type": "Satz", "module_number": 31070}, {"node_index": 1186, "embedding": [-5.6890339851379395, -15.5555419921875, 35.53639602661133, -2.199281930923462, -7.087837219238281, -18.87485694885254], "text": "Gut, das genuegt jetzt dazu,  wir haben jetzt also die Rechenregeln gesehen und das notwendige Kriterium  und jetzt brauchen wir noch ein paar ja Konvergenzkriterien, also wann konvergiert dann eigentlich  eine Reihe, bekommen wir dann auch irgendwelche Hilfsmittel und im naechsten Video werden wir  uns dann das Integralvergleichskriterium und das Leibnizkriterium anschauen.", "type": "Satz", "module_number": 31070}, {"node_index": 1187, "embedding": [-92.28841400146484, 150.30088806152344, 257.6440124511719, 11.211572647094727, -111.01250457763672, -44.68631362915039], "text": "  ", "type": "Satz", "module_number": 31070}, {"node_index": 1188, "embedding": [-11.149324417114258, 5.43860387802124, 41.74250793457031, 4.258871078491211, -17.62212371826172, -11.850120544433594], "text": "Herzlich Willkommen zum vierten Teil der vierzigsten Vorlesung im Kurs Analysis 1 und  linearer Algebra fuer Ingenieurwissenschaften.  ", "type": "Satz", "module_number": 31070}, {"node_index": 1189, "embedding": [-9.348780632019043, -0.5386174917221069, 39.75759506225586, -3.118828773498535, -19.37827491760254, -15.779305458068848], "text": "Wir hatten jetzt im letzten Video das notwendige Kriterium kennengelernt, das heisst also die  AKs, also die Glieder der Reihe, die muessen eine Nullfolge bilden, ansonsten wissen wir  schon mal automatisch, dass die Reihe nicht konvergent ist.", "type": "Satz", "module_number": 31070}, {"node_index": 1190, "embedding": [-92.39761352539062, 150.4924774169922, 257.99078369140625, 11.154153823852539, -111.2787857055664, -44.77102279663086], "text": "  ", "type": "Satz", "module_number": 31070}, {"node_index": 1191, "embedding": [-6.698973178863525, -1.1636220216751099, 28.69286346435547, -2.6819186210632324, -10.978151321411133, -11.673030853271484], "text": "Jetzt hatten wir aber auch ein Gegenbeispiel gesehen und hatten halt gesehen bei der harmonischen Reihe,  dass natuerlich wir eine Nullfolge haben und trotzdem divergiert die Reihe.  ", "type": "Satz", "module_number": 31070}, {"node_index": 1192, "embedding": [-5.7740583419799805, -15.58683967590332, 38.009639739990234, -3.3808035850524902, -8.041672706604004, -19.757360458374023], "text": "Und jetzt wollen wir weitere Konvergenzkriterien kennenlernen und genauer gesagt in diesem Video  das Integral-Vergleichskriterium und das Leibniz-Kriterium.", "type": "Satz", "module_number": 31070}, {"node_index": 1193, "embedding": [-92.35813903808594, 150.12034606933594, 258.1789855957031, 11.15414810180664, -111.02696228027344, -44.948726654052734], "text": "  ", "type": "Satz", "module_number": 31070}, {"node_index": 1194, "embedding": [-6.382091999053955, -2.2920236587524414, 26.810731887817383, -1.0386059284210205, -8.451927185058594, -11.024554252624512], "text": "Und vorbereitet fuer das Integral-Vergleichskriterium wollen wir uns folgende Frage stellen,  und zwar konvergiert die folgende Reihe,  jetzt sage ich hier mal K gleich 1 bis unendlich von 1 durch K hoch S", "type": "Satz", "module_number": 31070}, {"node_index": 1195, "embedding": [-5.4556145668029785, -4.3970255851745605, 24.818593978881836, -0.5860626101493835, -10.095985412597656, -10.946250915527344], "text": "fuer S groesser 1.  Ja und wie der Name es schon sagt, Integral-Vergleichskriterium.", "type": "Satz", "module_number": 31070}, {"node_index": 1196, "embedding": [-92.51921081542969, 150.40296936035156, 258.4792175292969, 11.299449920654297, -111.3993911743164, -44.961708068847656], "text": " ", "type": "Satz", "module_number": 31070}, {"node_index": 1197, "embedding": [-4.353269100189209, 1.9752634763717651, 16.588621139526367, -0.3635255694389343, -5.6091790199279785, -5.215056419372559], "text": "Wir wollen jetzt einen Kriterium durch Integrale entwickeln, um festzustellen,  ob diese Reihen von diesem Typ konvergent oder divergent sind.  ", "type": "Satz", "module_number": 31070}, {"node_index": 1198, "embedding": [-6.0261054039001465, -13.252354621887207, 38.55669403076172, -4.209569454193115, -6.156733989715576, -19.582096099853516], "text": "Und die Idee ist wie folgt, wir betrachten dazu uneigentliche Integrale.  ", "type": "Satz", "module_number": 31070}, {"node_index": 1199, "embedding": [-7.199737071990967, -17.310922622680664, 44.7702751159668, -3.9252285957336426, -7.576423645019531, -23.497936248779297], "text": "Zwar zum Beispiel jetzt fuer diesen konkreten Fall  koennten wir uns jetzt das F anschauen, indem wir sagen, gut von 1 bis unendlich.", "type": "Satz", "module_number": 31070}, {"node_index": 1200, "embedding": [-92.58040618896484, 150.2182159423828, 258.9449462890625, 11.131927490234375, -111.22510528564453, -45.231624603271484], "text": "  ", "type": "Satz", "module_number": 31070}, {"node_index": 1201, "embedding": [-8.544071197509766, 4.396051406860352, 30.61258888244629, -0.9590958952903748, -19.286937713623047, -10.3728666305542], "text": "Und dann schauen wir uns die Funktion an X bildet ab auf 1 durch X hoch S  mit S groesser 1.  ", "type": "Satz", "module_number": 31070}, {"node_index": 1202, "embedding": [-5.584223747253418, -0.03375805914402008, 22.316076278686523, -0.7113872170448303, -12.549145698547363, -8.476895332336426], "text": "So ich mache das mal auf die naechste Seite mal eine kleine Grafik, also angenommen.  ", "type": "Satz", "module_number": 31070}, {"node_index": 1203, "embedding": [-15.967361450195312, -26.318370819091797, 85.70536804199219, -4.336724281311035, -20.663654327392578, -42.68828201293945], "text": "So und dann haben wir jetzt hier irgendwie so eine Funktion.  ", "type": "Satz", "module_number": 31070}, {"node_index": 1204, "embedding": [-10.550970077514648, -18.364961624145508, 57.09294128417969, -0.9671887755393982, -13.433716773986816, -27.98957633972168], "text": "Dann haben wir die mal gruen und das ist jetzt die Funktion F.", "type": "Satz", "module_number": 31070}, {"node_index": 1205, "embedding": [-92.5784912109375, 150.30699157714844, 258.8102722167969, 11.199897766113281, -111.2186508178711, -45.13611602783203], "text": "  ", "type": "Satz", "module_number": 31070}, {"node_index": 1206, "embedding": [-6.7484235763549805, -5.512021541595459, 33.73800277709961, -2.6003952026367188, -6.703531742095947, -15.014912605285645], "text": "Wenn wir jetzt also das Integral bestimmen wuerden, dann nehme ich hier mal Unterteilung 1, 2, 3, 4, 5 und so weiter.  ", "type": "Satz", "module_number": 31070}, {"node_index": 1207, "embedding": [-6.141371250152588, -10.469087600708008, 33.484134674072266, -3.3942673206329346, -7.082615852355957, -16.780658721923828], "text": "Und dann hatten wir ja gesehen, dann koennte ich jetzt hier das Ganze mal so machen, indem ich jetzt hier nach oben gehe und dann hier.  ", "type": "Satz", "module_number": 31070}, {"node_index": 1208, "embedding": [-6.975564479827881, -15.806312561035156, 39.80648422241211, -4.098011493682861, -6.70033073425293, -21.18889617919922], "text": "So, dann koennte ich also diese Rechtecke ja vom Flaecheninhalt bestimmen.  ", "type": "Satz", "module_number": 31070}, {"node_index": 1209, "embedding": [-17.407194137573242, -38.835914611816406, 99.61884307861328, -5.000591278076172, -16.561491012573242, -52.74741744995117], "text": "Dann geht es jetzt hier mal so weiter.  ", "type": "Satz", "module_number": 31070}, {"node_index": 1210, "embedding": [-11.271352767944336, -24.815082550048828, 65.18419647216797, -3.6408920288085938, -10.768638610839844, -34.29543685913086], "text": "So und dann noch am Ende.", "type": "Satz", "module_number": 31070}, {"node_index": 1211, "embedding": [-92.57528686523438, 150.52017211914062, 258.6176452636719, 11.234504699707031, -111.16278076171875, -44.99016189575195], "text": "  ", "type": "Satz", "module_number": 31070}, {"node_index": 1212, "embedding": [-5.357731819152832, 1.7565172910690308, 19.239017486572266, 0.1246059462428093, -5.345416069030762, -6.487713813781738], "text": "So und die Flaecheninhalte fuer diesen Rechtecken, die kennen wir ja.  ", "type": "Satz", "module_number": 31070}, {"node_index": 1213, "embedding": [-6.216177463531494, -11.33188247680664, 31.5357723236084, -0.8381564021110535, -4.888995170593262, -16.023134231567383], "text": "Also wir nehmen jetzt wirklich mal an, dass wir hier 1, 2, 3 die Achse so aufteilen.  ", "type": "Satz", "module_number": 31070}, {"node_index": 1214, "embedding": [-6.8690104484558105, -12.61684799194336, 36.248966217041016, -2.556311845779419, -8.272815704345703, -18.60456085205078], "text": "Dann wissen wir ja, der Flaecheninhalt dieser roten Rechtecke zusammen erdiert, ist jetzt nichts anderes als K gleich 1.  Bis unendlich, das geht jetzt hier also weiter.  ", "type": "Satz", "module_number": 31070}, {"node_index": 1215, "embedding": [-8.119738578796387, -15.756467819213867, 39.9653205871582, 2.6211650371551514, -5.445653438568115, -20.428525924682617], "text": "Und zwar von F von K.", "type": "Satz", "module_number": 31070}, {"node_index": 1216, "embedding": [-92.75995635986328, 150.5830078125, 259.0724792480469, 11.479928970336914, -111.28662109375, -45.11476516723633], "text": "  ", "type": "Satz", "module_number": 31070}, {"node_index": 1217, "embedding": [-11.917375564575195, -0.04232276976108551, 47.96281814575195, -3.0720176696777344, -24.043909072875977, -19.158960342407227], "text": "Wenn wir jetzt hier bei 1 nehmen wir den Funktionswert, das ist dann also die Hoehe und das hier hat ja immer die Breite 1.  Deswegen koennen wir das hier oben in der Formel weglassen.  ", "type": "Satz", "module_number": 31070}, {"node_index": 1218, "embedding": [-10.30150032043457, -19.780946731567383, 57.08445739746094, -3.8298754692077637, -12.760063171386719, -29.50385093688965], "text": "So und jetzt machen wir das Gleiche,", "type": "Satz", "module_number": 31070}, {"node_index": 1219, "embedding": [-4.905301570892334, -11.505985260009766, 28.79092025756836, -2.396799325942993, -4.653872013092041, -15.199029922485352], "text": "indem wir mal kleinere 3 Ecke als die Funktion, als den Grafen anschauen und zwar nehme ich jetzt mal so etwas hier.  ", "type": "Satz", "module_number": 31070}, {"node_index": 1220, "embedding": [-10.554858207702637, -23.237136840820312, 58.93219757080078, -1.913546085357666, -10.051497459411621, -30.88452911376953], "text": "Guck mal, ob ich das gerade bekomme.", "type": "Satz", "module_number": 31070}, {"node_index": 1221, "embedding": [-92.67757415771484, 150.52769470214844, 258.9859313964844, 11.28315544128418, -111.28250122070312, -45.11713790893555], "text": "  ", "type": "Satz", "module_number": 31070}, {"node_index": 1222, "embedding": [-5.313629627227783, 0.6397588849067688, 20.61699104309082, -0.5115360617637634, -5.813474655151367, -7.558104991912842], "text": "Ne, ich wollte das daneben zeichnen, ich mach das mal so.  ", "type": "Satz", "module_number": 31070}, {"node_index": 1223, "embedding": [-11.63237476348877, -23.12047576904297, 65.62236022949219, -4.953533172607422, -12.118842124938965, -34.10175704956055], "text": "Und dann geht es hier weiter.  ", "type": "Satz", "module_number": 31070}, {"node_index": 1224, "embedding": [-6.643115997314453, -12.386423110961914, 35.282371520996094, -3.3969016075134277, -6.312441349029541, -18.111032485961914], "text": "Das sind jetzt also die kleinen.  ", "type": "Satz", "module_number": 31070}, {"node_index": 1225, "embedding": [-18.539321899414062, -21.530216217041016, 91.88086700439453, -3.0803050994873047, -18.414762496948242, -43.32978439331055], "text": "So und hier noch.  ", "type": "Satz", "module_number": 31070}, {"node_index": 1226, "embedding": [-4.257882118225098, -7.894690036773682, 22.804359436035156, -0.799846351146698, -4.6566009521484375, -11.43651294708252], "text": "So, jetzt sieht man also, dass die blauen Rechtecke da habe ich auch wieder F von K, aber ich starte hier fuer das erste Rechteck,  bin ich hier den Funktionswert F von 2.  ", "type": "Satz", "module_number": 31070}, {"node_index": 1227, "embedding": [-13.378763198852539, -18.9713134765625, 67.90948486328125, -2.50510311126709, -15.648992538452148, -32.95640182495117], "text": "Und das ist auch wieder alles die Breite 1.", "type": "Satz", "module_number": 31070}, {"node_index": 1228, "embedding": [-92.84098815917969, 150.7932891845703, 259.4679870605469, 11.25050163269043, -111.55690002441406, -45.217037200927734], "text": "  ", "type": "Satz", "module_number": 31070}, {"node_index": 1229, "embedding": [-5.8116044998168945, 1.5832923650741577, 20.483158111572266, 0.30465906858444214, -6.60698127746582, -6.963252544403076], "text": "Also habe ich jetzt hier K gleich 2 bis unendlich stehen.  ", "type": "Satz", "module_number": 31070}, {"node_index": 1230, "embedding": [-10.713364601135254, -21.831144332885742, 63.117889404296875, -6.109889030456543, -11.147014617919922, -32.56576156616211], "text": "Und was wir feststellen ist, wenn wir das uneigentliche Integral der Funktion betrachten,  dann liegt das zwischen dieser Summe und diesen beiden Reihen.  ", "type": "Satz", "module_number": 31070}, {"node_index": 1231, "embedding": [-6.13495397567749, -11.032448768615723, 34.33102035522461, -3.6267871856689453, -7.693157196044922, -17.20936393737793], "text": "Das Blaue ist immer unterhalb, das wird also nicht ausreichen, um den Flaechen halt zu bestimmen.", "type": "Satz", "module_number": 31070}, {"node_index": 1232, "embedding": [-92.79959869384766, 150.7656707763672, 259.3881530761719, 11.186874389648438, -111.5283432006836, -45.19426727294922], "text": "  ", "type": "Satz", "module_number": 31070}, {"node_index": 1233, "embedding": [-4.566679954528809, 1.0945161581039429, 17.425643920898438, 0.11365633457899094, -5.968780517578125, -5.905871391296387], "text": "Das Rote wiederum ist komplett oberhalb von diesem Grafen, das heisst das uneigentliche Integral muss genau dazwischen liegen.  ", "type": "Satz", "module_number": 31070}, {"node_index": 1234, "embedding": [-8.557587623596191, -20.71853256225586, 49.528385162353516, -2.2585201263427734, -7.1766815185546875, -26.55130958557129], "text": "Also Beobachtung.  ", "type": "Satz", "module_number": 31070}, {"node_index": 1235, "embedding": [-5.8706135749816895, -10.484460830688477, 31.42580795288086, -1.5638055801391602, -6.71668004989624, -15.83614730834961], "text": "Wir haben jetzt also K gleich 2 bis unendlich von F von K und diese Flaeche ist,  haben wir das mal schwarz, ist kleiner gleich dem uneigentlichen Integral.  ", "type": "Satz", "module_number": 31070}, {"node_index": 1236, "embedding": [-7.304047584533691, -6.3876118659973145, 34.03071594238281, -0.8112217783927917, -13.666962623596191, -15.441349029541016], "text": "1 bis unendlich F von X dx.", "type": "Satz", "module_number": 31070}, {"node_index": 1237, "embedding": [-92.94422912597656, 151.06289672851562, 259.6841125488281, 11.329973220825195, -112.03184509277344, -45.211429595947266], "text": "  ", "type": "Satz", "module_number": 31070}, {"node_index": 1238, "embedding": [-4.98215389251709, 0.47528475522994995, 18.32417106628418, 0.681887686252594, -5.379319190979004, -6.375149726867676], "text": "Das ist ja jetzt hier im Endeffekt genau der komplette Flaecheninhalt, den wir hier sehen.  ", "type": "Satz", "module_number": 31070}, {"node_index": 1239, "embedding": [-8.792381286621094, -18.653099060058594, 52.51925277709961, -3.9277491569519043, -8.783554077148438, -26.807004928588867], "text": "Das waere ja das Integral und das geht dann so weiter.  ", "type": "Satz", "module_number": 31070}, {"node_index": 1240, "embedding": [-5.883677005767822, -11.346826553344727, 32.95189666748047, -2.63358736038208, -6.91330623626709, -16.663833618164062], "text": "Und das Ganze ist dann aber auch kleiner gleich, und zwar den Flaecheninhalt von diesen roten Rechtecken.  ", "type": "Satz", "module_number": 31070}, {"node_index": 1241, "embedding": [-10.161593437194824, -17.498947143554688, 53.333457946777344, -2.5628395080566406, -14.219217300415039, -26.900562286376953], "text": "Das heisst also K gleich 1 bis unendlich F von K.", "type": "Satz", "module_number": 31070}, {"node_index": 1242, "embedding": [-92.86556243896484, 150.88368225097656, 259.5046081542969, 11.251495361328125, -111.5861587524414, -45.20071792602539], "text": " ", "type": "Satz", "module_number": 31070}, {"node_index": 1243, "embedding": [-7.842236042022705, -13.811697959899902, 41.50447082519531, -1.6878612041473389, -5.850786209106445, -20.83060646057129], "text": "So, das heisst also, was erkennen wir?  ", "type": "Satz", "module_number": 31070}, {"node_index": 1244, "embedding": [-9.902125358581543, -24.93492317199707, 63.15361404418945, -5.031684398651123, -10.695418357849121, -33.19296646118164], "text": "Wir erkennen also daran, dass diese Reihen, die wir eigentlich durchsuchen wollen,  dass die konvergieren, wenn genau dann, wenn das uneigentliche Integral existiert,  oder eben auch konvergiert, je nachdem wie man es sagen moechte.  ", "type": "Satz", "module_number": 31070}, {"node_index": 1245, "embedding": [-18.907135009765625, -18.242387771606445, 91.14271545410156, -1.649153709411621, -18.519433975219727, -41.65044021606445], "text": "Also Fazit.  ", "type": "Satz", "module_number": 31070}, {"node_index": 1246, "embedding": [-6.524251461029053, -15.263010025024414, 37.6557731628418, -1.0878145694732666, -5.735073089599609, -19.603687286376953], "text": "Also hier schreibe ich jetzt mal beide auf.  ", "type": "Satz", "module_number": 31070}, {"node_index": 1247, "embedding": [-9.08901309967041, -17.870140075683594, 50.45355987548828, -2.056117057800293, -10.98617172241211, -25.507305145263672], "text": "Also diese beiden Reihen konvergieren.", "type": "Satz", "module_number": 31070}, {"node_index": 1248, "embedding": [-92.87198638916016, 151.06932067871094, 259.4273376464844, 11.261510848999023, -111.58728790283203, -45.094364166259766], "text": " ", "type": "Satz", "module_number": 31070}, {"node_index": 1249, "embedding": [-6.664156913757324, -2.3651161193847656, 28.29199981689453, 0.8144600987434387, -11.711175918579102, -11.380414962768555], "text": "Genau dann,  wenn also das uneigentliche Integral 1 bis unendlich F von X dx konvergiert.  ", "type": "Satz", "module_number": 31070}, {"node_index": 1250, "embedding": [-4.079811096191406, -13.554780960083008, 27.48295021057129, -0.5762841105461121, -5.107934951782227, -15.05528736114502], "text": "Also wie gesagt, wir hatten ja auch gesagt, es existiert.  ", "type": "Satz", "module_number": 31070}, {"node_index": 1251, "embedding": [-9.956316947937012, -23.935503005981445, 63.08181381225586, -6.376042366027832, -10.538163185119629, -33.2646369934082], "text": "Da hatten wir auch gesagt, man kann das auch als das Integral konvergiert verstehen.  ", "type": "Satz", "module_number": 31070}, {"node_index": 1252, "embedding": [-9.00083065032959, -26.693714141845703, 65.68004608154297, -8.304622650146484, -8.30540943145752, -35.22167205810547], "text": "Ja und das Ganze fuehrt uns eben auf das Integral-Vergleichskriterium.  ", "type": "Satz", "module_number": 31070}, {"node_index": 1253, "embedding": [-13.252755165100098, -36.013519287109375, 79.65359497070312, -2.108004570007324, -10.174062728881836, -43.33507537841797], "text": "Und das schauen wir uns jetzt auf der Folie an.", "type": "Satz", "module_number": 31070}, {"node_index": 1254, "embedding": [-92.88229370117188, 150.99510192871094, 259.4648742675781, 11.305990219116211, -111.50656127929688, -45.132259368896484], "text": "  ", "type": "Satz", "module_number": 31070}, {"node_index": 1255, "embedding": [-6.5538225173950195, -0.2737196683883667, 27.60782814025879, -0.864968478679657, -10.211430549621582, -10.40970230102539], "text": "Zusammengefasst nochmal und auch die Grafik nochmal, dass Sie das sozusagen auf einer Folie sehen.  ", "type": "Satz", "module_number": 31070}, {"node_index": 1256, "embedding": [-14.992382049560547, -37.11769104003906, 88.06148529052734, -4.300490379333496, -12.230927467346191, -47.448123931884766], "text": "Und jetzt muessen wir noch mal schauen.  ", "type": "Satz", "module_number": 31070}, {"node_index": 1257, "embedding": [-15.194328308105469, -38.329933166503906, 89.275390625, -4.302907943725586, -12.012693405151367, -48.3843879699707], "text": "Und jetzt muessen wir noch mal schauen.  ", "type": "Satz", "module_number": 31070}, {"node_index": 1258, "embedding": [-9.431350708007812, -14.889791488647461, 48.529884338378906, -1.0595026016235352, -9.589473724365234, -23.68829345703125], "text": "Ich habe jetzt hier die Funktion so eingezeichnet.  ", "type": "Satz", "module_number": 31070}, {"node_index": 1259, "embedding": [-4.689164638519287, -10.399642944335938, 25.309534072875977, -0.4425364136695862, -4.773961544036865, -13.005431175231934], "text": "Da gibt es eben noch ein paar Bedingungen an die Funktion.  ", "type": "Satz", "module_number": 31070}, {"node_index": 1260, "embedding": [-8.874350547790527, -19.979984283447266, 51.59950637817383, -2.238283157348633, -10.876693725585938, -26.727758407592773], "text": "Und zwar muss das F, das ist jetzt hier also von M bis unendlich erklaert.  ", "type": "Satz", "module_number": 31070}, {"node_index": 1261, "embedding": [-7.15690803527832, -14.99929141998291, 40.11723709106445, -1.9080445766448975, -8.934355735778809, -20.733186721801758], "text": "M ist eine natuerliche Zahl.", "type": "Satz", "module_number": 31070}, {"node_index": 1262, "embedding": [-93.01836395263672, 151.0047607421875, 260.0036315917969, 11.338159561157227, -111.75471496582031, -45.33785629272461], "text": "  ", "type": "Satz", "module_number": 31070}, {"node_index": 1263, "embedding": [-3.860590696334839, -0.1860458105802536, 16.944833755493164, -0.08205253630876541, -4.134514808654785, -6.113395690917969], "text": "Und F ist eine monotonfallende Funktion, die aber nicht negativ ist.  ", "type": "Satz", "module_number": 31070}, {"node_index": 1264, "embedding": [-4.184824466705322, -13.241250038146973, 28.865673065185547, -0.7287618517875671, -6.167263507843018, -15.341182708740234], "text": "Also F von X groesser gleich 0", "type": "Satz", "module_number": 31070}, {"node_index": 1265, "embedding": [-2.1644468307495117, -11.491382598876953, 19.226303100585938, 1.6910934448242188, -3.517892599105835, -10.107879638671875], "text": "und zwar in dem kompletten Definitionsbereich.  ", "type": "Satz", "module_number": 31070}, {"node_index": 1266, "embedding": [-2.913473129272461, -14.034976959228516, 24.999731063842773, 0.9853519797325134, -3.9343152046203613, -13.189947128295898], "text": "Deswegen hat das jetzt hier in dieser Grafik auch so gut gepasst.  ", "type": "Satz", "module_number": 31070}, {"node_index": 1267, "embedding": [-4.525758743286133, -18.799402236938477, 34.219478607177734, -1.2781434059143066, -4.795925140380859, -19.29225730895996], "text": "Ja und dann ist die Aussage genau das, was ich schon auf der E-Greite geschrieben habe.", "type": "Satz", "module_number": 31070}, {"node_index": 1268, "embedding": [-93.02030181884766, 150.72174072265625, 260.31256103515625, 11.266687393188477, -111.7102279663086, -45.55905532836914], "text": " ", "type": "Satz", "module_number": 31070}, {"node_index": 1269, "embedding": [-7.285759925842285, -5.971038341522217, 33.90023422241211, -0.9860436320304871, -10.835049629211426, -15.036872863769531], "text": "Wenn diese Reihe hier konvergiert, also K gleich M bis unendlich von Fk,  dann ist das sozusagen genau dann der Fall, wenn dieses Integral existiert.  ", "type": "Satz", "module_number": 31070}, {"node_index": 1270, "embedding": [-9.066601753234863, -23.007083892822266, 54.15427017211914, -2.149702548980713, -8.948379516601562, -28.786231994628906], "text": "Hier habe ich jetzt geschrieben, konvergiert.  ", "type": "Satz", "module_number": 31070}, {"node_index": 1271, "embedding": [-5.000288486480713, -6.861772060394287, 25.655384063720703, -0.9587833285331726, -5.544961929321289, -12.11026382446289], "text": "Ist das gleiche?  ", "type": "Satz", "module_number": 31070}, {"node_index": 1272, "embedding": [-8.052474021911621, -11.097599029541016, 41.917789459228516, 0.06183677166700363, -13.545707702636719, -19.8491268157959], "text": "Das heisst, das uneigentliche Integral M bis unendlich Fx dx.  ", "type": "Satz", "module_number": 31070}, {"node_index": 1273, "embedding": [-7.357701778411865, -16.895870208740234, 43.36106872558594, -2.400653839111328, -8.338449478149414, -22.547039031982422], "text": "Und dann haben wir genau diese Abschaetzung.", "type": "Satz", "module_number": 31070}, {"node_index": 1274, "embedding": [-92.99998474121094, 151.29689025878906, 259.7882995605469, 11.265853881835938, -111.7010269165039, -45.15425491333008], "text": " ", "type": "Satz", "module_number": 31070}, {"node_index": 1275, "embedding": [-10.086251258850098, 3.7179172039031982, 38.79716110229492, -3.354496955871582, -19.598339080810547, -14.1691255569458], "text": "Hier ist es noch ein bisschen allgemeiner jetzt auf der Folie,  indem wir einfach bei M starten, K gleich M und dann habe ich hier M plus 1.  Und dann wird das sozusagen eingekesselt, dieses uneigentliche Integral von diesen beiden.  ", "type": "Satz", "module_number": 31070}, {"node_index": 1276, "embedding": [-7.346189498901367, -11.043201446533203, 38.69151306152344, -2.5524253845214844, -10.26076602935791, -18.993736267089844], "text": "Und das kann man sich natuerlich leicht ueberlegen.", "type": "Satz", "module_number": 31070}, {"node_index": 1277, "embedding": [-93.08657836914062, 151.1499786376953, 260.2348327636719, 11.295578002929688, -111.75874328613281, -45.37798309326172], "text": " ", "type": "Satz", "module_number": 31070}, {"node_index": 1278, "embedding": [-9.085391998291016, -14.835988998413086, 49.21283721923828, -2.2620019912719727, -11.49251651763916, -23.947402954101562], "text": "Also wenn das hier konvergiert, ja das heisst dieses konvergiert,  dann ist klar, dass dieses konvergiert und auch dieses konvergiert und umgekehrt.  ", "type": "Satz", "module_number": 31070}, {"node_index": 1279, "embedding": [-4.604373455047607, -6.103067398071289, 24.472932815551758, -2.528978109359741, -8.109274864196777, -11.623270034790039], "text": "Wenn dieses hier existiert, dann muss auch das jetzt hier existieren  bzw. konvergieren und dann natuerlich offensichtlich auch dieses.  ", "type": "Satz", "module_number": 31070}, {"node_index": 1280, "embedding": [-8.369095802307129, -13.2257080078125, 45.313079833984375, -3.8104653358459473, -12.108675956726074, -22.403749465942383], "text": "Weil hier kommt ja quasi nur endliche Ausdrucke hinzu.", "type": "Satz", "module_number": 31070}, {"node_index": 1281, "embedding": [-93.22172546386719, 151.27590942382812, 260.7361145019531, 11.216819763183594, -112.00745391845703, -45.54326629638672], "text": "  ", "type": "Satz", "module_number": 31070}, {"node_index": 1282, "embedding": [-8.942156791687012, -2.298264741897583, 38.84787368774414, -1.6051127910614014, -15.087031364440918, -15.541276931762695], "text": "Ja und hier unten in der Grafik ist es nochmal das, was ich eben auch auf der Folie,  auf der E-Kreide gemacht habe, nochmal ein bisschen schoener.  ", "type": "Satz", "module_number": 31070}, {"node_index": 1283, "embedding": [-5.601215839385986, -6.381054401397705, 28.807058334350586, -2.9914610385894775, -9.554800033569336, -13.510856628417969], "text": "Sieht man nochmal sehr schoen, also wie wir die grossen Rechtecke nehmen  und dann eben die kleineren unterhalb des Grafens.  ", "type": "Satz", "module_number": 31070}, {"node_index": 1284, "embedding": [-11.31631851196289, -26.317306518554688, 72.70133972167969, -8.030744552612305, -12.605286598205566, -37.834896087646484], "text": "Und das uneigentliche Integral liegt eben dazwischen.", "type": "Satz", "module_number": 31070}, {"node_index": 1285, "embedding": [-93.13155364990234, 151.50669860839844, 260.25836181640625, 11.229272842407227, -111.8841552734375, -45.26664352416992], "text": " ", "type": "Satz", "module_number": 31070}, {"node_index": 1286, "embedding": [-6.362424373626709, 6.8406476974487305, 19.21204948425293, -0.46699708700180054, -11.284217834472656, -4.973564147949219], "text": "So bevor wir das jetzt mal anwenden,  vielleicht, also hier kann man ja nochmal dazuschreiben,  das liefert dann eben das Resultat auf der Folie 7.  Und ein Hinweis noch dazu,  also wenn Sie das anwenden,  dann koennen Sie nicht davon ausgehen, dass wir hier Gleichheit haben.  ", "type": "Satz", "module_number": 31070}, {"node_index": 1287, "embedding": [-8.085164070129395, 0.7943844795227051, 30.386865615844727, -1.735896110534668, -16.631633758544922, -11.752849578857422], "text": "Das ist sozusagen am Allgemeinen nicht der Fall.", "type": "Satz", "module_number": 31070}, {"node_index": 1288, "embedding": [-11.121902465820312, -22.80624008178711, 68.46852111816406, -6.775193214416504, -12.822708129882812, -35.03722381591797], "text": " Das heisst, wenn Sie dieses uneigentliche Integral haben,  wir gehen mal davon aus, alles konvergiert,  dann ist das eben im Allgemeinen Ungleich, diesem Reihenwert.  ", "type": "Satz", "module_number": 31070}, {"node_index": 1289, "embedding": [-5.5348968505859375, -8.928991317749023, 30.80564308166504, -3.238919973373413, -8.716737747192383, -15.181522369384766], "text": "Also das bitte nicht verwechseln,  wir koennen mit dem uneigentlichen Integral im Allgemeinen nicht den Reihenwert bestimmen,  wir koennen nur aussagen, dass die Reihe konvergiert.", "type": "Satz", "module_number": 31070}, {"node_index": 1290, "embedding": [-93.19739532470703, 151.95950317382812, 260.1286926269531, 11.226949691772461, -112.1944580078125, -45.077144622802734], "text": " ", "type": "Satz", "module_number": 31070}, {"node_index": 1291, "embedding": [-5.015449523925781, 1.0716084241867065, 18.108661651611328, 0.48039180040359497, -5.868674278259277, -6.1362690925598145], "text": "So Beispiel dazu,  also da koennen wir uns jetzt nochmal erinnern,  an die uneigentlichen Integrale, das war die Folie S-31.  ", "type": "Satz", "module_number": 31070}, {"node_index": 1292, "embedding": [-9.117766380310059, -13.802820205688477, 47.652042388916016, -0.6057230830192566, -15.677070617675781, -23.090526580810547], "text": "Und wenn wir dieses Integral betrachten,  1 bis unendlich von 1 durch x hoch S dx.  ", "type": "Satz", "module_number": 31070}, {"node_index": 1293, "embedding": [-4.248650550842285, -12.576908111572266, 26.725553512573242, -0.3319036364555359, -5.427368640899658, -14.333547592163086], "text": "Und da hatten wir gesehen, dass existiert  fuer S groesser 1.  ", "type": "Satz", "module_number": 31070}, {"node_index": 1294, "embedding": [-10.360780715942383, -27.909423828125, 61.99631118774414, -2.7465009689331055, -7.039097785949707, -34.05098342895508], "text": "Da koennen Sie nochmal nachschauen.  ", "type": "Satz", "module_number": 31070}, {"node_index": 1295, "embedding": [-3.7918825149536133, -14.23326301574707, 26.162567138671875, -1.1169776916503906, -0.6822736859321594, -14.969230651855469], "text": "Und was hatten wir da als Wert?  ", "type": "Satz", "module_number": 31070}, {"node_index": 1296, "embedding": [-10.85446834564209, -25.795289993286133, 64.43936157226562, -3.5608043670654297, -9.482178688049316, -34.17598342895508], "text": "Das hatten wir auch ausgerechnet.", "type": "Satz", "module_number": 31070}, {"node_index": 1297, "embedding": [-8.899139404296875, -21.367748260498047, 51.78201675415039, -2.9661026000976562, -8.889978408813477, -27.498838424682617], "text": "  Das heisst also, hier konnten wir direkt auch angeben,  was herauskam.  ", "type": "Satz", "module_number": 31070}, {"node_index": 1298, "embedding": [-10.408174514770508, -0.9241943359375, 42.38576126098633, -2.582123041152954, -23.107954025268555, -17.139028549194336], "text": "Das war dann 1 durch 1,  1 durch S minus 1.  Ja und wenn wir jetzt dieses Integral-Vergleichskritter  um anwenden, wissen wir also,  dass die zugehoerige Reihe  1 durch k hoch S konvergiert  fuer S groesser 1.  ", "type": "Satz", "module_number": 31070}, {"node_index": 1299, "embedding": [-7.45196533203125, -8.826143264770508, 36.533145904541016, -2.935784339904785, -12.924272537231445, -17.46625328063965], "text": "Das heisst also,  zum Beispiel 1 durch k\u00b2,  darauf komme ich gleich nochmal zurueck.", "type": "Satz", "module_number": 31070}, {"node_index": 1300, "embedding": [-4.307487487792969, -9.83981704711914, 24.77066993713379, -1.6008806228637695, -5.671216011047363, -12.827035903930664], "text": "  Das hatten wir naemlich schon bei der Folie-Analysis,  als Nebenprodukt bekommen von der Folie S-31.  Das ist das, was wir jetzt machen,  also das Folie-Analysis als Nebenprodukt bekommen  von der Paseweilschen-Gleichung.  ", "type": "Satz", "module_number": 31070}, {"node_index": 1301, "embedding": [-9.028938293457031, -21.842872619628906, 54.17110061645508, -3.657111167907715, -9.64847469329834, -28.642484664916992], "text": "Also hier wissen wir, dass das Ganze konvergiert.", "type": "Satz", "module_number": 31070}, {"node_index": 1302, "embedding": [-93.21102905273438, 151.55799865722656, 260.4593811035156, 11.270793914794922, -111.94499969482422, -45.323421478271484], "text": " ", "type": "Satz", "module_number": 31070}, {"node_index": 1303, "embedding": [-6.248449802398682, -3.178334951400757, 27.693370819091797, -0.9122363924980164, -10.572898864746094, -11.624248504638672], "text": "Aber wir wissen auch,  wenn wir mal das Integral 1 bis unendlich 1 durch x hoch S dx nehmen  fuer S kleiner gleich 1,  dann haben wir gesehen, dass existiert nicht.  ", "type": "Satz", "module_number": 31070}, {"node_index": 1304, "embedding": [-7.83047342300415, -1.9313193559646606, 32.57527160644531, -1.2441074848175049, -18.267005920410156, -13.397930145263672], "text": "Also hier jetzt genauer S-Positiv kleiner gleich 1.", "type": "Satz", "module_number": 31070}, {"node_index": 1305, "embedding": [-93.26826477050781, 151.94447326660156, 260.34954833984375, 11.336727142333984, -112.28300476074219, -45.14426803588867], "text": " ", "type": "Satz", "module_number": 31070}, {"node_index": 1306, "embedding": [-12.556490898132324, -18.88300323486328, 65.32501220703125, -3.950735092163086, -18.97967529296875, -32.26984786987305], "text": "Und das fies ja dann,  oder heisst jetzt hier in diesem Kontext,  dass dann eben die Reihe k gleich 1 bis unendlich 1 durch k hoch S  divagent ist, und zwar fuer 0 kleiner S kleiner gleich 1.  ", "type": "Satz", "module_number": 31070}, {"node_index": 1307, "embedding": [-4.346373081207275, -9.8605375289917, 25.095108032226562, -2.3811848163604736, -5.061216354370117, -13.098487854003906], "text": "Und hier sieht man auch nochmal,  wenn wir S gleich 1 waehlen,  dann haben wir genau die harmonische Reihe,  die wir im letzten Video kennengelernt haben.", "type": "Satz", "module_number": 31070}, {"node_index": 1308, "embedding": [-93.31131744384766, 151.69447326660156, 260.7469787597656, 11.238626480102539, -112.06407165527344, -45.3906135559082], "text": " ", "type": "Satz", "module_number": 31070}, {"node_index": 1309, "embedding": [-4.08591890335083, -1.2538180351257324, 16.99574089050293, 0.411227285861969, -3.3387749195098877, -6.442174434661865], "text": "Und da hatten wir ja auch schon gezeigt,  dass sie divagent ist.  ", "type": "Satz", "module_number": 31070}, {"node_index": 1310, "embedding": [-3.6236636638641357, -15.077009201049805, 26.985374450683594, -1.0219666957855225, -1.6955996751785278, -15.152074813842773], "text": "Jetzt haben wir also ein neues Kriterium noch gefunden  und damit koennen wir also auch ganz einfach zeigen,  dass sie divagent ist.  ", "type": "Satz", "module_number": 31070}, {"node_index": 1311, "embedding": [-10.870464324951172, -29.577808380126953, 65.58808135986328, -3.278140068054199, -7.9745988845825195, -35.95011520385742], "text": "Ja, schauen wir uns mal jetzt nochmal den Reihenwert an.  ", "type": "Satz", "module_number": 31070}, {"node_index": 1312, "embedding": [-11.563152313232422, -29.519773483276367, 67.72698974609375, -3.500858783721924, -11.118599891662598, -36.53525924682617], "text": "Und zwar nehmen wir mal S gleich 2.  ", "type": "Satz", "module_number": 31070}, {"node_index": 1313, "embedding": [-6.0171284675598145, -15.051055908203125, 34.88755416870117, -1.1548011302947998, -5.797791481018066, -18.523717880249023], "text": "Da hatten wir jetzt eben oben gesagt,  fuer S gleich 2 existiert das Ganze.", "type": "Satz", "module_number": 31070}, {"node_index": 1314, "embedding": [-9.253458976745605, -3.8144428730010986, 40.4547233581543, -3.5577330589294434, -17.67107582092285, -17.584716796875], "text": "  Das heisst also, wenn ich jetzt hier mal,  also wenn wir das mal genauso aufschreiben, diese Abschaetzung,  und wir nehmen jetzt mal S gleich 2,  das heisst also 1 durch x\u00b2 bzw. jetzt 1 durch k\u00b2,  dann haetten wir hier also 2 bis unendlich 1 durch k\u00b2,  das ist dann kleiner gleich dem uneigenlichen Integral.", "type": "Satz", "module_number": 31070}, {"node_index": 1315, "embedding": [-93.41700744628906, 152.1525115966797, 260.8445739746094, 11.222990036010742, -112.45106506347656, -45.29097366333008], "text": " ", "type": "Satz", "module_number": 31070}, {"node_index": 1316, "embedding": [-19.385379791259766, -12.120725631713867, 89.76539611816406, -7.165487289428711, -39.68792724609375, -40.325374603271484], "text": "Also ich schreibe jetzt einfach das hier auf,  fuer M gleich 1, 1 durch x\u00b2 dx,  und da hatten wir oben auch schon angegeben,  was herauskommt, 1 durch 2 minus 1, das ist also 1,  und das ist kleiner gleich k\u00b2,  bis unendlich 1 durch k\u00b2,  das ist jetzt einfach dieser Ausdruck hier.", "type": "Satz", "module_number": 31070}, {"node_index": 1317, "embedding": [-10.746087074279785, -18.5535888671875, 56.914154052734375, -2.55692720413208, -13.022026062011719, -28.68770408630371], "text": " Das heisst also, was bekommen wir jetzt fuer den Reihenwert?  ", "type": "Satz", "module_number": 31070}, {"node_index": 1318, "embedding": [-15.02586555480957, -13.05356502532959, 71.30070495605469, -6.116098880767822, -28.74629020690918, -33.23275375366211], "text": "Also hier haben wir die Abschaetzung schon mal nach unten,  der Reihenwert ist also mindestens 1,  k gleich 1 bis unendlich 1 durch k\u00b2,  aber das koennen wir ja auch folgendermassen aufschreiben,  indem ich das erste Gliedmeisterparatschreibe, also Manten,  da kommt ja 1 heraus, plus k gleich 2 bis unendlich  von 1 durch k\u00b2,", "type": "Satz", "module_number": 31070}, {"node_index": 1319, "embedding": [-93.35120391845703, 152.26902770996094, 260.4259338378906, 11.330455780029297, -112.3056640625, -45.06489562988281], "text": " ", "type": "Satz", "module_number": 31070}, {"node_index": 1320, "embedding": [-11.984549522399902, -1.3203154802322388, 48.88813018798828, -3.167923927307129, -26.18953514099121, -20.006410598754883], "text": "ja aber hier haben wir gesehen, dieser Ausdruck ist kleiner gleich diesem,  und da kommt 1 heraus, das heisst also, dieser Ausdruck ist kleiner gleich 1,  also koennen wir das jetzt hier nach oben durch 1 abschaetzen,  und haben hier noch eine 1,  das heisst also 1 plus 1, gleich 2,  und wir wollten ja jetzt diesen Reihenwert bestimmen  und sehen also, er liegt zwischen 1 und 2,", "type": "Satz", "module_number": 31070}, {"node_index": 1321, "embedding": [-93.36307525634766, 152.45533752441406, 260.3157958984375, 11.362865447998047, -112.33819580078125, -44.953392028808594], "text": " ", "type": "Satz", "module_number": 31070}, {"node_index": 1322, "embedding": [-7.070505619049072, 10.560775756835938, 19.752168655395508, -0.9335150122642517, -14.075862884521484, -4.008331775665283], "text": "ja und das zeigt nochmal die Problematik,  wie schwierig das eigentlich ist,  jetzt diesen Reihenwert zu bestimmen,  zu sagen, dass die Reihe konvergiert,  also ein Endlichen Reihenwert hat, ist das eine,  aber den Reihenwert zu bestimmen ist sehr schwierig,  und in Vorlesung 38 hatten wir aber genau diese Reihe schon mal betrachtet,  da wussten wir noch nicht so genau, was eine Reihe ist,", "type": "Satz", "module_number": 31070}, {"node_index": 1323, "embedding": [-93.64096069335938, 153.07240295410156, 260.97802734375, 11.292783737182617, -112.9938735961914, -45.023773193359375], "text": " ", "type": "Satz", "module_number": 31070}, {"node_index": 1324, "embedding": [-5.926011562347412, 6.7951579093933105, 18.62352180480957, -0.8117672801017761, -10.737732887268066, -4.747293472290039], "text": "also immer nur formal aufgeschrieben,  jetzt haben wir ein bisschen ein besseres Gefuehl dafuer,  und da hatten wir gesehen,  dass wir eben durch die Paseweilschegleichung  sehr einfach den Reihenwert bestimmen konnten,  und sie erinnern sich,  das war k\u00b26,  so jetzt wissen wir also auch,  dass k\u00b26 zwischen 1 und 2 liegen muss,  das hier liefert also nur eine grobe Abschaetzung,", "type": "Satz", "module_number": 31070}, {"node_index": 1325, "embedding": [-93.5732650756836, 152.79685974121094, 260.9717712402344, 11.308710098266602, -112.73188781738281, -45.1041374206543], "text": " ", "type": "Satz", "module_number": 31070}, {"node_index": 1326, "embedding": [-7.581327438354492, 5.79160737991333, 26.30716323852539, -1.8019940853118896, -14.293991088867188, -8.345376968383789], "text": "obwohl die auch nicht schlecht ist,  wenn man weiss, dass der Wert zwischen 1 und 2 ist,  und wir haben es aber schon exakt berechnet,  da kommt einfach k\u00b26 heraus.", "type": "Satz", "module_number": 31070}, {"node_index": 1327, "embedding": [-93.61870574951172, 152.6368865966797, 261.2581481933594, 11.294393539428711, -112.69763946533203, -45.271663665771484], "text": " ", "type": "Satz", "module_number": 31070}, {"node_index": 1328, "embedding": [-5.912730693817139, 3.9166228771209717, 20.111053466796875, -0.8989545702934265, -10.562246322631836, -6.337836742401123], "text": "Gut, das war das erste wichtige Kriterium  in dieser Vorlesung,  und das zweite ist das sogenannte Leibnizkriterium,  und da betrachten wir mal folgende Reihe,  also auch erst mal ein bisschen motivierend,  und zwar k\u00b21 bis unendlich,  und dann nehmen wir  minus 1 hoch k plus 1 mal 1 durch k,  wenn wir das mal aufschreiben,  irgendwie kommt uns die Reihe bekannt vor,", "type": "Satz", "module_number": 31070}, {"node_index": 1329, "embedding": [-93.58170318603516, 152.82188415527344, 260.9199523925781, 11.363046646118164, -112.6238784790039, -45.060813903808594], "text": " ", "type": "Satz", "module_number": 31070}, {"node_index": 1330, "embedding": [-15.26410961151123, -2.7020459175109863, 65.2159194946289, -5.627964496612549, -34.48883819580078, -27.283000946044922], "text": "was uns stoert es irgendwie dieser Ausdruck hier,  und wenn wir das mal aufschreiben,  dann sehen wir also,  im Vergleich zur harmonischen Reihe wechselt hier also das Vorzeichen,  also 1 minus 1 halb plus 1 drittel minus 1 viertel,  und dann geht das so weiter.", "type": "Satz", "module_number": 31070}, {"node_index": 1331, "embedding": [-93.58002471923828, 152.8355255126953, 260.92010498046875, 11.365161895751953, -112.66876983642578, -45.05588150024414], "text": " ", "type": "Satz", "module_number": 31070}, {"node_index": 1332, "embedding": [-7.831450939178467, -7.579739093780518, 37.46453094482422, -2.1700782775878906, -9.099637985229492, -16.970355987548828], "text": "Und das Ganze hier ist dann eben,  das andere, also wenn dieser Ausdruck weg ist,  hatten wir ja gesehen,  haben wir die harmonische,  und das ist die alternierende harmonische Reihe.", "type": "Satz", "module_number": 31070}, {"node_index": 1333, "embedding": [-93.69186401367188, 152.5253448486328, 261.6221923828125, 11.343204498291016, -112.53404998779297, -45.427120208740234], "text": " ", "type": "Satz", "module_number": 31070}, {"node_index": 1334, "embedding": [-13.138792991638184, -5.966385841369629, 57.75994110107422, -3.672642707824707, -26.72311019897461, -24.941829681396484], "text": "Und da schauen wir uns jetzt mal die Partialsum an,  das heisst also hier mal S1,  ist ja einfach dann 1,  dann S2 ist dieser Ausdruck,  da bekommen wir also 1,  ", "type": "Satz", "module_number": 31070}, {"node_index": 1335, "embedding": [-14.50698471069336, -10.373506546020508, 67.15583038330078, -4.529884338378906, -32.37950897216797, -30.349058151245117], "text": "S2 haben wir also 1 minus 1 halb,  ist 1 halb,  S3 sind die ersten 3,  also das heisst also hier haben wir 6 minus 3 plus 2,  6,  und da kommt dann 5, 6 heraus.", "type": "Satz", "module_number": 31070}, {"node_index": 1336, "embedding": [-93.60260772705078, 152.669189453125, 261.1457824707031, 11.384140014648438, -112.54942321777344, -45.18722152709961], "text": " ", "type": "Satz", "module_number": 31070}, {"node_index": 1337, "embedding": [-15.969334602355957, -5.033689975738525, 69.26329040527344, -5.394281387329102, -35.684532165527344, -29.614383697509766], "text": "Ich moechte mal noch eins ausrechnen,  dass wir mal diese Partialsum vergleichen koennen,  minus 1 viertel,  hier haben wir dann also 12 minus 6 plus 4 minus 3 12,  so wenn wir das zusammenfassen,  kommen wir auf 7 12,  so und das kann man jetzt so weiterfuehren,  das ist ja so,  wir sehen es also,  wenn man diese Partialsum anschaut,  dann sieht man also,  also S2 ist kleiner,  S4,", "type": "Satz", "module_number": 31070}, {"node_index": 1338, "embedding": [-93.66778564453125, 152.9109649658203, 261.216796875, 11.38810920715332, -112.70304107666016, -45.136085510253906], "text": " ", "type": "Satz", "module_number": 31070}, {"node_index": 1339, "embedding": [-16.870141983032227, -4.087172508239746, 71.53886413574219, -5.046222686767578, -37.7668342590332, -30.161653518676758], "text": "also ich hoffe, Sie sehen das,  also 1 halb waere ja jetzt,  wenn ich das mal,  die 2 mit 6 multipliziere,  werden das 6 12,  und dann ist das auch kleiner S6,  was wir nicht ausgerechnet haben,  aber dann geht das so weiter,  und dann bekommen wir hier eben irgendwann S5,  kleiner S3,  kleiner S1,  ja,  und die Idee hier dabei ist,  dass eben die Nullfolge,", "type": "Satz", "module_number": 31070}, {"node_index": 1340, "embedding": [-93.71800231933594, 152.9944610595703, 261.3440856933594, 11.396432876586914, -112.78598022460938, -45.1558837890625], "text": " ", "type": "Satz", "module_number": 31070}, {"node_index": 1341, "embedding": [-15.74466609954834, -18.750198364257812, 80.11347198486328, -6.005534648895264, -27.798553466796875, -38.3343620300293], "text": "die wir haben, also was ist jetzt die Nullfolge,  das Ganze hier ist eine Nullfolge,  aber sie ist eben auch eine streng monoton fallende Nullfolge,  und das ist der wesentliche Punkt hier dabei,  das heisst also, diese Reihe konvergiert,  weil eben dieses,  das ist ja eigentlich unser AK,  weil das streng monoton fallend ist,  und das ist sozusagen,  das wechselt ja nur das Vorzeichen,", "type": "Satz", "module_number": 31070}, {"node_index": 1342, "embedding": [-93.71727752685547, 152.81472778320312, 261.5287780761719, 11.367908477783203, -112.6245346069336, -45.28731918334961], "text": " ", "type": "Satz", "module_number": 31070}, {"node_index": 1343, "embedding": [-12.401860237121582, -24.827537536621094, 71.12788391113281, -4.353874683380127, -15.243584632873535, -36.288761138916016], "text": "und deswegen wissen wir jetzt hier in diesem Fall,  also das schauen wir uns gleich auf der Folie noch mal,  als Resultat an,  dass diese Reihe tatsaechlich konvergiert.  ", "type": "Satz", "module_number": 31070}, {"node_index": 1344, "embedding": [-16.531877517700195, -19.40146255493164, 81.37120056152344, -4.799420356750488, -31.052492141723633, -39.05729675292969], "text": "Das heisst minus 1 hoch k plus 1,  1 durch k konvergiert,  da 1 durch k,  jetzt muss ich hier mal k gruessergleich einschreiben,  eine  streng monoton fallende  Nullfolge ist.", "type": "Satz", "module_number": 31070}, {"node_index": 1345, "embedding": [-3.3929483890533447, -7.384516716003418, 19.424760818481445, -1.708963394165039, -5.066387176513672, -9.986318588256836], "text": " Ja, und das liefert das sogenannte Leibniz-Kriterium,  und das schauen wir uns jetzt hier zum Abschluss auf der Folie 8 an,  und da sieht man auch noch mal so eine kleine Idee des Beweises.", "type": "Satz", "module_number": 31070}, {"node_index": 1346, "embedding": [-93.76355743408203, 152.64901733398438, 261.87841796875, 11.337697982788086, -112.61521911621094, -45.481014251708984], "text": " ", "type": "Satz", "module_number": 31070}, {"node_index": 1347, "embedding": [-6.003203868865967, 8.180442810058594, 17.856985092163086, -0.6497659087181091, -11.630104064941406, -3.941087007522583], "text": "So, das Leibniz-Kriterium besagt jetzt also,  und hier geht es eben um solche alternierenden Reihen,  das heisst wir untersuchen Reihen dieser Form,  und also das Leibniz-Kriterium,  und das Leibniz-Kriterium,  das heisst wir untersuchen Reihen dieser Form,  und alternieren wie gesagt,  die Glieder haben wechselndes Vorzeichen plus minus,  dann wissen wir,", "type": "Satz", "module_number": 31070}, {"node_index": 1348, "embedding": [-93.93983459472656, 153.5711212158203, 261.8629455566406, 11.371437072753906, -113.22826385498047, -45.16768264770508], "text": " ", "type": "Satz", "module_number": 31070}, {"node_index": 1349, "embedding": [-5.51887845993042, -8.356121063232422, 29.265825271606445, -1.5116338729858398, -7.2931599617004395, -14.015850067138672], "text": "wenn die Folge a k streng monoton fallend ist,  und eine Nullfolge,  das habe ich ja hier als streng monoton fallende Nullfolge  gleich in einem Satz geschrieben,  das heisst also streng monoton fallend und eine Nullfolge,  dann konvergiert eben diese Reihe.", "type": "Satz", "module_number": 31070}, {"node_index": 1350, "embedding": [-93.78328704833984, 152.9637908935547, 261.7208251953125, 11.394296646118164, -112.64724731445312, -45.30253982543945], "text": " ", "type": "Satz", "module_number": 31070}, {"node_index": 1351, "embedding": [-6.664318561553955, 10.695108413696289, 17.655437469482422, -0.12999969720840454, -14.70089054107666, -2.9798221588134766], "text": "Und das ist das Leibniz-Kriterium, das kann man also oft anwenden,  und hier sieht man noch mal ein bisschen die Idee,  also quasi das sozusagen die Partial,  somit abnehmender Amplitude oszillieren,  das sieht man also quasi hier,  die Amplitude, die Ausweichung wird immer kleiner, immer kleiner,  und das ist sozusagen dann die Idee dabei,  dass das auch funktioniert,", "type": "Satz", "module_number": 31070}, {"node_index": 1352, "embedding": [-94.06839752197266, 153.9159698486328, 262.0359191894531, 11.426618576049805, -113.58045196533203, -45.11197280883789], "text": " ", "type": "Satz", "module_number": 31070}, {"node_index": 1353, "embedding": [-4.694027900695801, 1.6135998964309692, 17.99675750732422, -0.04887063056230545, -6.050457954406738, -5.968450546264648], "text": "und das liefert eben das Leibniz-Kriterium.  ", "type": "Satz", "module_number": 31070}, {"node_index": 1354, "embedding": [-6.433032512664795, -9.279104232788086, 34.800418853759766, -2.8363046646118164, -8.435470581054688, -16.751028060913086], "text": "Interessant ist jetzt schon mal,  wir haben gesehen die harmonische Reihe, die divergiert,  das heisst also, wenn ich hier diesen Ausdruck also weglasse,  aber wenn ich die alternierende Harmonische Reihe nehme,  dann sehen wir hier tatsaechlich,  dass diese konvergiert nach dem Leibniz-Kriterium.", "type": "Satz", "module_number": 31070}, {"node_index": 1355, "embedding": [-6.687344074249268, -7.239410877227783, 32.991825103759766, -2.736130714416504, -11.31801700592041, -15.454851150512695], "text": " Das heisst also, kleine Unterschiede in der Reihe  koennen dann doch grosse Wirkung haben,  und das genuegt jetzt erstmal zur 40. Vorlesung zum Einstieg in Reihen.", "type": "Satz", "module_number": 31070}, {"node_index": 1356, "embedding": [-94.08699035644531, 153.2676239013672, 262.5845031738281, 11.414468765258789, -113.25839233398438, -45.53778076171875], "text": " ", "type": "Satz", "module_number": 31070}, {"node_index": 1357, "embedding": [-9.761817932128906, -20.00450897216797, 55.93991470336914, -3.316986083984375, -11.782638549804688, -28.39491844177246], "text": "Wir werden dann in der naechsten Vorlesung weitermachen,  und da werden wir dann sehen,  dass wir noch einen staerkeren Konvergenzbegriff brauchen,  und zwar brauchen wir dann die absolut konvergenten Reihen,  und da werden wir dann auch einige weitere Konvergenzkriterien kennenlernen.", "type": "Satz", "module_number": 31070}, {"node_index": 1358, "embedding": [-93.9260482788086, 153.0480194091797, 262.1908264160156, 11.423816680908203, -112.80892944335938, -45.443931579589844], "text": "  ", "type": "Satz", "module_number": 31070}, {"node_index": 1359, "embedding": [-11.279808044433594, 6.482198238372803, 41.5249137878418, 3.9591352939605713, -17.57809066772461, -11.505132675170898], "text": "Ich begruesse Sie recht herzlich zur 41. Vorlesung im Kursanalysis I und linearer Algebra fuer Ingenieurwissenschaften.  ", "type": "Satz", "module_number": 31070}, {"node_index": 1360, "embedding": [-2.8829169273376465, -7.083786487579346, 17.115663528442383, 0.2946721911430359, -4.348355293273926, -8.11587905883789], "text": "Wir hatten jetzt in der letzten Vorlesung mit Reihen angefangen und wir bleiben auch erst mal bei diesem Gebiet Reihen.  ", "type": "Satz", "module_number": 31070}, {"node_index": 1361, "embedding": [-6.56488561630249, -18.98317527770996, 46.04816818237305, -4.821402072906494, -7.461311340332031, -24.148801803588867], "text": "Wir hatten ja im letzten Video gesehen, was wir unter einer Reihe verstehen.", "type": "Satz", "module_number": 31070}, {"node_index": 1362, "embedding": [-93.98137664794922, 152.90713500976562, 262.6546325683594, 11.346654891967773, -112.83966827392578, -45.662803649902344], "text": "  ", "type": "Satz", "module_number": 31070}, {"node_index": 1363, "embedding": [-6.670555114746094, -9.036954879760742, 35.03805160522461, -1.8801727294921875, -10.148942947387695, -16.359220504760742], "text": "Und in diesem Video wollen wir ein bisschen den Konvergenzbegriff von Reihen verschaerfen,  um dann auch das Produkt von Reihen betrachten zu koennen.", "type": "Satz", "module_number": 31070}, {"node_index": 1364, "embedding": [-2.7991347312927246, -6.687253952026367, 17.88700294494629, -0.565074622631073, -4.87678337097168, -8.556407928466797], "text": "Das fuehrt uns auf das sogenannte Kursi-Produkt von Reihen.", "type": "Satz", "module_number": 31070}, {"node_index": 1365, "embedding": [-93.93135833740234, 153.11927795410156, 262.2539367675781, 11.494653701782227, -112.8166275024414, -45.40933609008789], "text": " ", "type": "Satz", "module_number": 31070}, {"node_index": 1366, "embedding": [-7.506224632263184, -14.065587997436523, 44.280460357666016, -3.427459716796875, -10.35559368133545, -21.643674850463867], "text": "Und dann werden wir noch weitere wichtige Konvergenzkriterien kennenlernen, wie das Majorantenkriterium, das Minorantenkriterium  und auch das Quotientenkriterium.", "type": "Satz", "module_number": 31070}, {"node_index": 1367, "embedding": [-3.7347562313079834, -9.221246719360352, 21.66456413269043, -1.3196988105773926, -4.38879919052124, -11.245969772338867], "text": "Und am Ende werden wir uns auch noch ganz kurz mit komplexen Reihen beschaeftigen.  ", "type": "Satz", "module_number": 31070}, {"node_index": 1368, "embedding": [-6.933554172515869, -15.883673667907715, 38.373924255371094, -1.262040376663208, -6.614625930786133, -20.04082489013672], "text": "Vielleicht eine kleine Wiederholung.", "type": "Satz", "module_number": 31070}, {"node_index": 1369, "embedding": [-6.4924397468566895, -10.559946060180664, 31.981569290161133, -0.6131579279899597, -6.690267562866211, -15.457169532775879], "text": "Die letzte Vorlesung ist schon wieder ewig her.", "type": "Satz", "module_number": 31070}, {"node_index": 1370, "embedding": [-94.18199920654297, 153.1958770751953, 263.04461669921875, 11.440391540527344, -113.0910415649414, -45.70854949951172], "text": "  ", "type": "Satz", "module_number": 31070}, {"node_index": 1371, "embedding": [-4.882324695587158, 0.3937513828277588, 17.687013626098633, 0.9827263951301575, -5.536707878112793, -6.05413818359375], "text": "Und zwar, was hatten wir gesehen bei der Notation?", "type": "Satz", "module_number": 31070}, {"node_index": 1372, "embedding": [-5.2613444328308105, -12.518855094909668, 27.99793815612793, 0.7479780316352844, -5.378084659576416, -14.454184532165527], "text": "Wir hatten ja am Anfang Reihen eingefuehrt und die Notation hatte ja eine Doppeldeutung.  ", "type": "Satz", "module_number": 31070}, {"node_index": 1373, "embedding": [-6.803618907928467, -17.018680572509766, 40.95170974731445, -2.4738659858703613, -7.811532974243164, -21.455106735229492], "text": "Und zwar, wenn wir dieses Zeichen hier sehen, dann hatten wir das zum einen als eine Folge, die Folge der Enten-Pazial-Summen verstanden.  ", "type": "Satz", "module_number": 31070}, {"node_index": 1374, "embedding": [-7.880522727966309, -19.455406188964844, 46.658878326416016, -2.005486488342285, -7.584856986999512, -24.606595993041992], "text": "Das heisst, das kann ich auch so schreiben.", "type": "Satz", "module_number": 31070}, {"node_index": 1375, "embedding": [-10.296839714050293, -22.945209503173828, 59.04093551635742, -2.657792568206787, -9.900476455688477, -30.950685501098633], "text": "Das heisst, hier bis N ueber die AKS und ich betrachte das als Folge.", "type": "Satz", "module_number": 31070}, {"node_index": 1376, "embedding": [-94.09892272949219, 153.3537139892578, 262.6170349121094, 11.459478378295898, -112.98027038574219, -45.5035285949707], "text": "  ", "type": "Satz", "module_number": 31070}, {"node_index": 1377, "embedding": [-4.8933916091918945, 1.765393614768982, 18.21875762939453, -0.20293813943862915, -5.824419021606445, -6.065316677093506], "text": "Und das, was hier steht, das waren eben die Enten-Pazial-Summen.", "type": "Satz", "module_number": 31070}, {"node_index": 1378, "embedding": [-6.236286163330078, -6.476139068603516, 30.873252868652344, -1.719477891921997, -7.6703033447265625, -14.068480491638184], "text": "Die hatten wir mit Sn bezeichnet.  ", "type": "Satz", "module_number": 31070}, {"node_index": 1379, "embedding": [-8.331342697143555, -7.766788959503174, 39.80729675292969, -2.1505351066589355, -10.204666137695312, -18.142671585083008], "text": "Das koennen wir irgendwie auch so schreiben, Sn aus den natuerlichen Zahlen.", "type": "Satz", "module_number": 31070}, {"node_index": 1380, "embedding": [-94.33524322509766, 153.45225524902344, 263.5057678222656, 11.414815902709961, -113.29889678955078, -45.82891845703125], "text": "  ", "type": "Satz", "module_number": 31070}, {"node_index": 1381, "embedding": [-9.573125839233398, -7.037915229797363, 43.65949249267578, -0.3571922183036804, -11.217340469360352, -18.876636505126953], "text": "Und das Ganze hier war eben jetzt also als Folge zu verstehen.", "type": "Satz", "module_number": 31070}, {"node_index": 1382, "embedding": [-8.474926948547363, -18.831859588623047, 48.51193618774414, -3.2141213417053223, -8.749629974365234, -25.338346481323242], "text": "Und dann hatten wir aber gesehen, dass wir das Ganze auch als, also wenn wir das als Wert schreiben, dann, oder als Liebis, dann ist das eben wirklich der Wert der Reihe.", "type": "Satz", "module_number": 31070}, {"node_index": 1383, "embedding": [-94.17717742919922, 153.3328399658203, 262.9792175292969, 11.406396865844727, -113.06393432617188, -45.65767288208008], "text": "  ", "type": "Satz", "module_number": 31070}, {"node_index": 1384, "embedding": [-6.364931583404541, 9.009245872497559, 18.33880043029785, -0.5439167618751526, -11.8594970703125, -3.7957897186279297], "text": "Bei den praktischen Beispielen haben Sie gesehen, habe ich das jetzt kaum unterschieden, aber wenn ich das jetzt sage, ist gleich S, dann ist dann darunter eben zu verstehen Liebes N gegen Unendlich, der Enten-Pazialsumme AK.  ", "type": "Satz", "module_number": 31070}, {"node_index": 1385, "embedding": [-7.052951335906982, -2.7126080989837646, 31.051124572753906, -2.4424185752868652, -11.626498222351074, -13.122588157653809], "text": "Und das kann ich dann eben schreiben als Liebes", "type": "Satz", "module_number": 31070}, {"node_index": 1386, "embedding": [-5.568029880523682, -8.398590087890625, 31.63694190979004, -1.8405866622924805, -6.635246753692627, -14.798332214355469], "text": "N gegen Unendlich von Sn.", "type": "Satz", "module_number": 31070}, {"node_index": 1387, "embedding": [-4.9814558029174805, -11.619165420532227, 31.630441665649414, -1.0567400455474854, -5.826432704925537, -15.575370788574219], "text": "Und das hatten wir quasi als Grenzwert interpretiert.", "type": "Satz", "module_number": 31070}, {"node_index": 1388, "embedding": [-94.14735412597656, 153.44740295410156, 262.8645935058594, 11.51463508605957, -113.09097290039062, -45.53470230102539], "text": "  ", "type": "Satz", "module_number": 31070}, {"node_index": 1389, "embedding": [-12.386442184448242, -28.924182891845703, 72.57704162597656, -3.277822971343994, -11.995134353637695, -38.23162078857422], "text": "So, und das nochmal ganz kurz, dass wir diese Unterscheidung haben.", "type": "Satz", "module_number": 31070}, {"node_index": 1390, "embedding": [-8.221912384033203, -10.742079734802246, 44.661865234375, -4.486385822296143, -15.151880264282227, -21.027666091918945], "text": "Und jetzt ist es so, wir hatten jetzt die Rechenregeln im letzten Video kennengelernt und da hatten wir die Addition und die Skalarmultipulation gesehen.", "type": "Satz", "module_number": 31070}, {"node_index": 1391, "embedding": [-94.18920135498047, 153.50125122070312, 262.988037109375, 11.390369415283203, -113.10791015625, -45.595149993896484], "text": "  ", "type": "Satz", "module_number": 31070}, {"node_index": 1392, "embedding": [-5.258888244628906, 1.7239617109298706, 18.662416458129883, 0.3186267018318176, -5.4715070724487305, -6.1169233322143555], "text": "Jetzt hatten wir aber noch kein Produkt gesehen.", "type": "Satz", "module_number": 31070}, {"node_index": 1393, "embedding": [-7.936340808868408, -18.909921646118164, 46.56626510620117, -2.7032899856567383, -8.557165145874023, -24.301151275634766], "text": "Und das Problem bei dem Produkt ist, dass sozusagen wir einen staerkeren Konvergenzbegriff benoetigen, damit wir dann auch wissen, dass das Produkt ebenfalls konvergent ist.  ", "type": "Satz", "module_number": 31070}, {"node_index": 1394, "embedding": [-6.859432697296143, -13.891243934631348, 39.618186950683594, -2.720289468765259, -9.900739669799805, -19.83106231689453], "text": "Und das fuehrt uns auf die erste Definition in dieser Vorlesung, und zwar die absolute Konvergenz von Reihen.", "type": "Satz", "module_number": 31070}, {"node_index": 1395, "embedding": [-94.31600189208984, 153.8641357421875, 263.1956481933594, 11.417741775512695, -113.48925018310547, -45.54850387573242], "text": "  ", "type": "Satz", "module_number": 31070}, {"node_index": 1396, "embedding": [-8.51034164428711, -16.6268310546875, 46.12027359008789, -2.202552318572998, -8.17765998840332, -23.47206687927246], "text": "Und das schauen wir uns direkt auf der zweiten Folie an.", "type": "Satz", "module_number": 31070}, {"node_index": 1397, "embedding": [-7.463420391082764, -17.390817642211914, 43.43810272216797, -2.5354671478271484, -9.500861167907715, -22.54123306274414], "text": "Und ja, der Name suggeriert schon ein wenig, was wir darunter verstehen, absolute Konvergenz.  ", "type": "Satz", "module_number": 31070}, {"node_index": 1398, "embedding": [-11.692865371704102, -22.42923355102539, 63.20400619506836, -3.126162528991699, -15.340473175048828, -32.4437141418457], "text": "Und zwar haben wir jetzt hier also eine Reihe gegeben, K gleich 0 bis undendlich von den Gliedern AK.", "type": "Satz", "module_number": 31070}, {"node_index": 1399, "embedding": [-94.29374694824219, 153.6280059814453, 263.19085693359375, 11.44979476928711, -113.21105194091797, -45.631160736083984], "text": "  ", "type": "Satz", "module_number": 31070}, {"node_index": 1400, "embedding": [-12.519580841064453, -23.047229766845703, 69.957763671875, -3.6778626441955566, -16.271772384643555, -34.987918853759766], "text": "Und diese Reihe nennen wir absolut konvergent, wenn diese Reihe hier konvergiert und wir sehen, wer mit hier also den Betrag der Folgeglieder genommen.  ", "type": "Satz", "module_number": 31070}, {"node_index": 1401, "embedding": [-4.243403911590576, -10.123003005981445, 25.27544593811035, -2.359969139099121, -4.701569080352783, -13.18305778503418], "text": "Und genau, hier steht nochmal der Vorteil da, warum wir das eigentlich machen.", "type": "Satz", "module_number": 31070}, {"node_index": 1402, "embedding": [-9.615407943725586, -24.427677154541016, 59.261844635009766, -4.696756839752197, -11.364599227905273, -31.456357955932617], "text": "Wir verschaerfen diesen Konvergenzbegriff, weil es tatsaechlich sinnvoller ist, damit zu rechnen.", "type": "Satz", "module_number": 31070}, {"node_index": 1403, "embedding": [-94.28854370117188, 153.66944885253906, 263.2013244628906, 11.44620132446289, -113.20893859863281, -45.61281204223633], "text": "  ", "type": "Satz", "module_number": 31070}, {"node_index": 1404, "embedding": [-4.730114936828613, 1.0223604440689087, 17.445589065551758, -0.0446518138051033, -5.260779857635498, -6.009550094604492], "text": "Und wenn wir naemlich absolute Konvergenz haben, dann koennen wir wirklich so rechnen, als haetten wir auch endliche Summen.  ", "type": "Satz", "module_number": 31070}, {"node_index": 1405, "embedding": [-10.601183891296387, -22.579540252685547, 61.339202880859375, -2.5435094833374023, -12.700881004333496, -31.3486270904541], "text": "Natuerlich immer unter der Voraussetzung, dass die Reihe dann eben auch absolut konvergent ist.  ", "type": "Satz", "module_number": 31070}, {"node_index": 1406, "embedding": [-13.893909454345703, -31.518951416015625, 83.19173431396484, -5.275922775268555, -17.23380470275879, -43.278255462646484], "text": "Also wir merken uns, diese Reihe heisst absolut konvergent, wenn diese Reihe konvergiert, in dem was wir auch schon in der letzten Folie so angemerkt haben.", "type": "Satz", "module_number": 31070}, {"node_index": 1407, "embedding": [-94.31880187988281, 153.8066864013672, 263.2275085449219, 11.460016250610352, -113.2713394165039, -45.57511520385742], "text": "  ", "type": "Satz", "module_number": 31070}, {"node_index": 1408, "embedding": [-9.211682319641113, -19.874706268310547, 53.48188400268555, -2.5450010299682617, -10.164101600646973, -27.19896697998047], "text": "Und wie ist jetzt die Relation zu konvergenz und absoluter Konvergenz?  ", "type": "Satz", "module_number": 31070}, {"node_index": 1409, "embedding": [-16.895463943481445, -40.26829528808594, 102.43107604980469, -6.409694671630859, -21.0174503326416, -53.70532989501953], "text": "Ich hatte ja schon gesagt, wir verschaerfen ein wenig den Konvergenzbegriff, deswegen bekommen wir hier die schoene Relation,  das also eine Reihe, die absolut konvergiert, die konvergiert dann auch im gewoehnlichen Sinne.  ", "type": "Satz", "module_number": 31070}, {"node_index": 1410, "embedding": [-13.923611640930176, -30.759342193603516, 82.65199279785156, -4.800813674926758, -17.91316795349121, -42.72883224487305], "text": "Das heisst also, wenn diese Reihe konvergiert, dann konvergiert eben auch diese Reihe.", "type": "Satz", "module_number": 31070}, {"node_index": 1411, "embedding": [-94.33905792236328, 153.89395141601562, 263.24591064453125, 11.466743469238281, -113.30252838134766, -45.55139923095703], "text": "  ", "type": "Satz", "module_number": 31070}, {"node_index": 1412, "embedding": [-11.104498863220215, -24.132341384887695, 64.38639831542969, -3.4182333946228027, -12.441699028015137, -33.03859329223633], "text": "Diese Implikation, die merken wir uns aus absoluter Konvergenz, folgt Konvergenz, aber die Umkehrung, die ist im Allgemeinen falsch.  ", "type": "Satz", "module_number": 31070}, {"node_index": 1413, "embedding": [-11.213689804077148, -30.66876220703125, 68.20191192626953, -3.184476375579834, -9.853598594665527, -37.029903411865234], "text": "Und das wollen wir uns gleich mal anschauen, auch einem Gegenbeispiel.", "type": "Satz", "module_number": 31070}, {"node_index": 1414, "embedding": [-94.38274383544922, 153.8476104736328, 263.3863830566406, 11.505716323852539, -113.2644271850586, -45.61957550048828], "text": "  ", "type": "Satz", "module_number": 31070}, {"node_index": 1415, "embedding": [-5.083464622497559, 4.287868976593018, 17.088361740112305, -0.3456060290336609, -7.486762046813965, -4.770483016967773], "text": "Und das erste, was jetzt noch wichtig ist, vielleicht noch als zusaetzliche Regel, und zwar gilt jetzt hier auch eine Art Verallgemeinerung der Dreiecksungleichung fuer absolut konvergente Reihen.", "type": "Satz", "module_number": 31070}, {"node_index": 1416, "embedding": [-94.49687957763672, 154.38198852539062, 263.5006408691406, 11.483610153198242, -113.6016616821289, -45.48182678222656], "text": " ", "type": "Satz", "module_number": 31070}, {"node_index": 1417, "embedding": [-13.652901649475098, -5.611319065093994, 59.98896026611328, -5.004549026489258, -26.926034927368164, -26.027713775634766], "text": "Und zwar wie folgt, bevor wir uns jetzt Beispiele anschauen, wenn ich also die Reihe K gleich 0 bis um endlich Ak habe,  dann kann ich die erst mal nach oben abschaetzen, indem ich jetzt hier den Betrag nehme,  und dann kann ich das Ganze jetzt abschaetzen, und das ist dann eine Art Verallgemeinerung der Dreiecksungleichung,", "type": "Satz", "module_number": 31070}, {"node_index": 1418, "embedding": [-94.52429962158203, 154.40769958496094, 263.5530090332031, 11.46588134765625, -113.72088623046875, -45.50608444213867], "text": " ", "type": "Satz", "module_number": 31070}, {"node_index": 1419, "embedding": [-4.562314033508301, 2.7789392471313477, 15.517791748046875, 0.3284075856208801, -6.588861465454102, -4.519906044006348], "text": "und zwar, dass ich den Betrag reinziehe auf die Glieder, das heisst also auf die Ak's.  ", "type": "Satz", "module_number": 31070}, {"node_index": 1420, "embedding": [-13.303987503051758, -25.595808029174805, 75.56743621826172, -4.021796226501465, -17.712678909301758, -38.039608001708984], "text": "Und das gilt dann fuer absolut konvergente Reihen.  ", "type": "Satz", "module_number": 31070}, {"node_index": 1421, "embedding": [-7.24238920211792, -11.044014930725098, 38.82078170776367, -3.262887477874756, -10.021289825439453, -18.902971267700195], "text": "Und das Ganze hier ist eine Art Verallgemeinerung der Dreiecksungleichung.  ", "type": "Satz", "module_number": 31070}, {"node_index": 1422, "embedding": [-6.186225414276123, -17.377395629882812, 39.26475143432617, -2.829437255859375, -5.8256659507751465, -21.28508949279785], "text": "Wir sehen ja auch hier, jetzt haben wir unendlich viele Summanten, trotzdem koennen wir das hier tun.  ", "type": "Satz", "module_number": 31070}, {"node_index": 1423, "embedding": [-8.848151206970215, -22.205684661865234, 51.49857711791992, -3.4699697494506836, -6.806435585021973, -27.870458602905273], "text": "So, schauen wir uns Beispiele dazu an.", "type": "Satz", "module_number": 31070}, {"node_index": 1424, "embedding": [-94.56600189208984, 153.834716796875, 264.1189880371094, 11.468717575073242, -113.38645935058594, -45.920440673828125], "text": "  ", "type": "Satz", "module_number": 31070}, {"node_index": 1425, "embedding": [-8.990894317626953, -1.045868992805481, 36.543697357177734, -2.666863203048706, -16.569202423095703, -14.84255599975586], "text": "Das erste, da nutzen wir gleich nochmal Resultate aus der letzten Vorlesung, und zwar schauen wir uns mal folgende alternierende Reihe an,  K gleich 1 bis um endlich alternieren, wir wissen, wenn Sie das hoeren, dann ist da also minus 1 hoch K,  oder jetzt hier K plus 1, 1 durch K\u00b2 steht jetzt hier da,", "type": "Satz", "module_number": 31070}, {"node_index": 1426, "embedding": [-94.57827758789062, 154.55628967285156, 263.6522521972656, 11.472383499145508, -113.75445556640625, -45.4901237487793], "text": " ", "type": "Satz", "module_number": 31070}, {"node_index": 1427, "embedding": [-21.14055824279785, -23.47177505493164, 104.4546127319336, -6.625875473022461, -41.65803527832031, -49.787052154541016], "text": "und was bekommen wir hier, wenn wir das mal aufschreiben, das ist 1 minus 1 Viertel plus 1 9thel, minus 1 16thel und so weiter,  plus minus, punkt, punkt, punkt.  ", "type": "Satz", "module_number": 31070}, {"node_index": 1428, "embedding": [-13.2163724899292, -24.766754150390625, 73.490234375, -4.277804851531982, -17.028255462646484, -37.220577239990234], "text": "Und diese Reihe, ja wenn ich Sie jetzt frage, ist die Reihe konvergent, dann erinnern wir uns an das Leibnizkriterium.", "type": "Satz", "module_number": 31070}, {"node_index": 1429, "embedding": [-94.5616455078125, 154.23033142089844, 263.85699462890625, 11.500558853149414, -113.54244232177734, -45.66580581665039], "text": "  ", "type": "Satz", "module_number": 31070}, {"node_index": 1430, "embedding": [-9.16258716583252, -8.81431770324707, 45.704261779785156, -4.205111980438232, -16.047969818115234, -21.198244094848633], "text": "Wenn wir so eine Reihe hatten, also solche Glieder, dann musste diese Folge hier streng monoton Fallen sein, also eine streng monoton Fallende Nullfolge sein,  und das ist hier gegeben, deswegen konvergiert diese Reihe.  ", "type": "Satz", "module_number": 31070}, {"node_index": 1431, "embedding": [-12.068835258483887, -32.05446243286133, 73.46475982666016, -2.4800643920898438, -10.77221965789795, -39.55058670043945], "text": "Schreiben wir das mal auf.", "type": "Satz", "module_number": 31070}, {"node_index": 1432, "embedding": [-94.56156158447266, 154.24998474121094, 263.8237609863281, 11.546464920043945, -113.50524139404297, -45.63863754272461], "text": " ", "type": "Satz", "module_number": 31070}, {"node_index": 1433, "embedding": [-8.115693092346191, 4.3485188484191895, 29.80204963684082, -2.6592280864715576, -16.54912567138672, -10.405996322631836], "text": "Also nach dem Leibnizkriterium, konvergent, also das Kriterium kann man immer sehr schoen anwenden,  weil es relativ leicht zu ueberpruefen ist, und hier haetten wir jetzt also K\u00b2 als Folge K aus N,  ja, machen wir mal K\u00b2 gleich 1, und das ist eine streng monoton Fallende Nullfolge.", "type": "Satz", "module_number": 31070}, {"node_index": 1434, "embedding": [-94.73516082763672, 154.94371032714844, 264.0055236816406, 11.482294082641602, -114.11441040039062, -45.49828338623047], "text": "  ", "type": "Satz", "module_number": 31070}, {"node_index": 1435, "embedding": [-11.43525218963623, -22.78658676147461, 65.51668548583984, -3.8948569297790527, -14.588558197021484, -33.151248931884766], "text": "Gut, und jetzt haben wir bisher noch nichts mit der absoluten Konvergenz gemacht, die Frage ist jetzt diese Reihe konvergiert,  konvergiert sie jetzt auch absolut, das heisst absolut wuerde bedeuten, wir nehmen jetzt hier den Betrag,  und ja, diese Reihe kennen wir auch schon, das heisst also die Reihe konvergiert auch absolut.", "type": "Satz", "module_number": 31070}, {"node_index": 1436, "embedding": [-94.64220428466797, 154.5232696533203, 263.9655456542969, 11.503616333007812, -113.69915008544922, -45.60646438598633], "text": "  ", "type": "Satz", "module_number": 31070}, {"node_index": 1437, "embedding": [-16.256086349487305, -12.06167984008789, 75.44267272949219, -6.229726791381836, -29.45641326904297, -34.52579116821289], "text": "Absolut konvergent, ja warum, wenn wir das uns anschauen, also K gleich 1 bis und endlich, minus 1 hoch K plus 1,  1 durch K\u00b2, und jetzt genau das, was hier steht, wir nehmen jetzt hier also den Betrag,  das ist dann eben die Reihe K gleich 1 bis und endlich 1 durch K\u00b2, auch hier schreibe ich nochmal kurz auf, was es ist,", "type": "Satz", "module_number": 31070}, {"node_index": 1438, "embedding": [-94.72518157958984, 154.73411560058594, 264.12396240234375, 11.49299430847168, -113.90863800048828, -45.6059455871582], "text": " ", "type": "Satz", "module_number": 31070}, {"node_index": 1439, "embedding": [-6.7405781745910645, -8.471882820129395, 34.39499282836914, -2.1703178882598877, -9.391868591308594, -16.169723510742188], "text": "da bekommen wir dann eben immer nur das vorzeichen, das positive vorzeichen, ja,  so, und da wissen wir, dass diese Reihe konvergent ist,  und das haben wir, ja wir haben das in der letzten Folisung gezeigt, aber wir hatten das eigentlich ja schon bei Fourier gezeigt,  als wir naemlich den Reihenwert schon durch die Paseweitschegleichung angegeben hatten,", "type": "Satz", "module_number": 31070}, {"node_index": 1440, "embedding": [-94.70704650878906, 154.8125457763672, 264.00555419921875, 11.510026931762695, -113.83879852294922, -45.526649475097656], "text": " ", "type": "Satz", "module_number": 31070}, {"node_index": 1441, "embedding": [-9.889686584472656, -4.3903374671936035, 43.01045608520508, -3.4332804679870605, -17.54088592529297, -18.637636184692383], "text": "sie erinnern sich, darauf bin ich auch in der letzten Folisung eingegangen,  und wenn wir jetzt mal den Reihenwert der alternieren Reihe bekommen, dann wissen wir natuerlich,  wenn ich die alternierende Reihe angebe, minus 1 hoch K plus 1, 1 durch K\u00b2,  das kann ich natuerlich abschaetzen, durch K gleich 1 bis und endlich 1 durch K\u00b2,", "type": "Satz", "module_number": 31070}, {"node_index": 1442, "embedding": [-5.917927265167236, 1.8727160692214966, 22.24233055114746, -2.452296257019043, -13.738605499267578, -8.218111038208008], "text": " das ist jetzt im Endeffekt genau das, was ich mit der Verallgemeinerung der Dreiecksungleichung von oben gemeint habe,  und hier hatten wir schon gesehen, dass hier P\u00b2 6 herauskommt,  das heisst, als grobe obere Schranke bekommen wir also, dass der Wert dieser Reihe kleiner gleich P\u00b2 6 ist,  und auch hier kann man mit der Fourier-Analysis den Wert exakt bestimmen,", "type": "Satz", "module_number": 31070}, {"node_index": 1443, "embedding": [-94.90052795410156, 155.11279296875, 264.5619812011719, 11.452764511108398, -114.37637329101562, -45.655757904052734], "text": " ", "type": "Satz", "module_number": 31070}, {"node_index": 1444, "embedding": [-4.337024211883545, -0.42653125524520874, 16.392026901245117, 1.364952802658081, -3.657329559326172, -5.944058895111084], "text": "und zwar kommt dann hier tatsaechlich P\u00b2 12 heraus.  ", "type": "Satz", "module_number": 31070}, {"node_index": 1445, "embedding": [-4.973731517791748, -13.131425857543945, 27.760705947875977, 1.9055899381637573, -3.1543469429016113, -14.734416961669922], "text": "Wie gesagt, so was ist ja immer etwas schwieriger zu zeigen.  ", "type": "Satz", "module_number": 31070}, {"node_index": 1446, "embedding": [-14.554738998413086, -32.302242279052734, 85.80675506591797, -5.056391716003418, -17.774980545043945, -44.61458969116211], "text": "So, jetzt haben wir hier ein Beispiel gesehen, eine Reihe, da haben wir jetzt gesagt,  okay, sie konvergiert nach einem Leibnizkriterium, und dann haben wir gesehen, sie ist auch absolut konvergent.", "type": "Satz", "module_number": 31070}, {"node_index": 1447, "embedding": [-94.76297760009766, 154.5961151123047, 264.41363525390625, 11.515520095825195, -113.7739486694336, -45.7501335144043], "text": "  ", "type": "Satz", "module_number": 31070}, {"node_index": 1448, "embedding": [-15.35490894317627, -35.118553161621094, 92.2975082397461, -6.283185005187988, -19.431642532348633, -48.004119873046875], "text": "Jetzt haben wir irgendwie diese Richtung gezeigt bei diesem Beispiel, ich wollte eigentlich ein Gegenbeispiel bringen,  das machen wir jetzt als Zweites, das heisst also hier sieht man, dass die Reihe also konvergiert und auch absolut konvergiert,  aber wie gesagt, aus der normalen gewoehnlichen Konvergenz folgt im Allgemeinen nicht die absolute Konvergenz,", "type": "Satz", "module_number": 31070}, {"node_index": 1449, "embedding": [-94.77432250976562, 154.72752380371094, 264.3546447753906, 11.52977180480957, -113.81116485595703, -45.67875289916992], "text": " ", "type": "Satz", "module_number": 31070}, {"node_index": 1450, "embedding": [-6.335406303405762, -2.244884729385376, 26.86734962463379, -1.2419602870941162, -7.308460712432861, -11.003416061401367], "text": "und zwar kann man sich das an der alternieren harmonischen Reihe ueberlegen, die hatten wir ja auch schon kennengelernt.  ", "type": "Satz", "module_number": 31070}, {"node_index": 1451, "embedding": [-7.572765350341797, -12.815431594848633, 41.31135940551758, -3.508791446685791, -8.854795455932617, -20.658586502075195], "text": "Ja, die alternierende Harmonische Reihe, wie sah die aus?", "type": "Satz", "module_number": 31070}, {"node_index": 1452, "embedding": [-5.8792290687561035, -12.38610553741455, 32.3386344909668, -1.947310209274292, -5.5921478271484375, -16.718212127685547], "text": "Die sah jetzt aehnlich aus,  und dass wir eben dann statt 1 durch k\u00b2 einfach nur 1 durch k haben, und dann erinnern Sie sich an die letzte Foliesung.", "type": "Satz", "module_number": 31070}, {"node_index": 1453, "embedding": [-94.94805908203125, 154.52748107910156, 265.1431579589844, 11.514627456665039, -113.92298889160156, -46.057918548583984], "text": "  ", "type": "Satz", "module_number": 31070}, {"node_index": 1454, "embedding": [-6.388390064239502, -16.9703311920166, 46.0632438659668, -5.742116928100586, -6.365359306335449, -23.8172550201416], "text": "Da hatten wir ja mit dem Integralvergleichskriterium gesehen, dass die harmonische Reihe divergent ist.  ", "type": "Satz", "module_number": 31070}, {"node_index": 1455, "embedding": [-12.093703269958496, -24.345752716064453, 70.21371459960938, -5.3103532791137695, -14.714790344238281, -35.869625091552734], "text": "Also diese Reihe, das ist die alternierende Harmonische, die ist konvergent, auch hier wieder nach dem Leibnizkriterium.  ", "type": "Satz", "module_number": 31070}, {"node_index": 1456, "embedding": [-4.69651460647583, -7.215819835662842, 25.20075225830078, -1.6193015575408936, -6.068746566772461, -12.003185272216797], "text": "Aber sie ist nicht absolut konvergent.  ", "type": "Satz", "module_number": 31070}, {"node_index": 1457, "embedding": [-6.756381511688232, -15.253360748291016, 40.42131805419922, -0.9578248858451843, -5.066926002502441, -20.430702209472656], "text": "Und auch das sieht man sofort.", "type": "Satz", "module_number": 31070}, {"node_index": 1458, "embedding": [-12.263811111450195, -13.157137870788574, 61.19686508178711, -0.9137358069419861, -9.737349510192871, -28.296531677246094], "text": " Warum?  ", "type": "Satz", "module_number": 31070}, {"node_index": 1459, "embedding": [-13.304960250854492, -4.325362682342529, 58.89015197753906, -6.064566135406494, -25.65530014038086, -25.449766159057617], "text": "Wenn ich jetzt hier den Betrag nehme von dieser Reihe, dann faellt dieser Ausdruck weg und es bleibt einfach nur noch 1 durch k,  und das ist ja dann eben die harmonische Reihe, und da hatten wir ja schon 2 Wege gesehen in der letzten Foliesung,  dass diese divergent ist.  ", "type": "Satz", "module_number": 31070}, {"node_index": 1460, "embedding": [-7.622506141662598, -6.795382499694824, 36.37320327758789, -2.000337839126587, -11.529266357421875, -16.37848472595215], "text": "Ist nicht absolut konvergent, da...", "type": "Satz", "module_number": 31070}, {"node_index": 1461, "embedding": [-94.94759368896484, 154.76158142089844, 265.0322570800781, 11.546337127685547, -114.02949523925781, -45.92563247680664], "text": "  ", "type": "Satz", "module_number": 31070}, {"node_index": 1462, "embedding": [-24.21630859375, -14.260204315185547, 110.53096008300781, -9.102916717529297, -50.157066345214844, -49.67363357543945], "text": "Schreiben wir das auch nochmal auf, also minus 1, auch k plus 1, 1 durch k, und jetzt nehmen wir hier einfach den Betrag,  und das ist dann eben die harmonische Reihe, da diese divergent ist.", "type": "Satz", "module_number": 31070}, {"node_index": 1463, "embedding": [-6.468658924102783, -18.149240493774414, 45.09583282470703, -5.2580695152282715, -7.5413055419921875, -24.008285522460938], "text": " Wir hatten das einmal gezeigt, indem wir gezeigt haben, dass die Partial-Summe-Folge nach unten beschraenkt ist,  und dann haben wir aber auch mit dem Integralvergleichskriterium gezeigt, als Spezialfall, dass diese Reihe divergent ist,  und das war nochmal zur Erinnerung, die harmonische Reihe.  ", "type": "Satz", "module_number": 31070}, {"node_index": 1464, "embedding": [-15.444141387939453, -33.666481018066406, 88.64490509033203, -3.997783660888672, -15.261465072631836, -46.511043548583984], "text": "Gut, das genuegt jetzt erstmal.", "type": "Satz", "module_number": 31070}, {"node_index": 1465, "embedding": [-94.91059112548828, 154.78636169433594, 264.8174133300781, 11.579133987426758, -113.8945083618164, -45.83842468261719], "text": "  ", "type": "Satz", "module_number": 31070}, {"node_index": 1466, "embedding": [-9.77499771118164, -20.066011428833008, 55.4034309387207, -3.2880477905273438, -11.308363914489746, -28.241361618041992], "text": "Damit kennen wir jetzt den Begriff der absoluten Konvergenz, haben auch nochmal gesehen, dass die Umkehrung tatsaechlich falsch ist.  ", "type": "Satz", "module_number": 31070}, {"node_index": 1467, "embedding": [-9.515170097351074, -14.385146141052246, 52.353031158447266, -5.501174449920654, -14.388534545898438, -25.78238868713379], "text": "An dem Gegenbeispiel, das heisst hier haben wir gesehen, die alternierende harmonische Reihe konvergiert,  aber sie ist nicht absolut konvergent, weil wenn ich den Betrag nehme,  bekomme ich eben dann die harmonische Reihe und die ist divergent.", "type": "Satz", "module_number": 31070}, {"node_index": 1468, "embedding": [-94.90739440917969, 154.93038940429688, 264.7770690917969, 11.489828109741211, -113.9582748413086, -45.780120849609375], "text": "  ", "type": "Satz", "module_number": 31070}, {"node_index": 1469, "embedding": [-6.154540061950684, -2.916149139404297, 27.928369522094727, -1.4235312938690186, -10.613712310791016, -11.540702819824219], "text": "Und basierend auf diesem Begriff wollen wir dann im naechsten Video uns ueberlegen, wie koennen wir 2 Reihen multiplizieren,  und zwar so, dass wir wieder eine Reihe bekommen, und dass wir vielleicht sagen, ich habe 2 absolut konvergente Reihen,  ist das Produkt dann auch wieder absolut konvergent.", "type": "Satz", "module_number": 31070}, {"node_index": 1470, "embedding": [-94.966064453125, 155.3152618408203, 264.6942443847656, 11.549154281616211, -114.21158599853516, -45.606266021728516], "text": "  ", "type": "Satz", "module_number": 31070}, {"node_index": 1471, "embedding": [-10.822154998779297, -23.216079711914062, 63.72909164428711, -4.424643039703369, -13.522523880004883, -32.74435806274414], "text": "Und da muessen wir uns erstmal ueberlegen, was wir eigentlich unter dem Produkt von 2 Reihen ueberhaupt verstehen,  und dann werden wir in den weiteren Teilen, ja, weitere Konvergenzkriterien kennenlernen.", "type": "Satz", "module_number": 31070}, {"node_index": 1472, "embedding": [-94.945556640625, 155.1157684326172, 264.754638671875, 11.55323600769043, -114.01972961425781, -45.69524383544922], "text": "  ", "type": "Satz", "module_number": 31070}, {"node_index": 1473, "embedding": [-10.581297874450684, 2.8821160793304443, 41.750938415527344, 4.5322065353393555, -17.355871200561523, -12.5589599609375], "text": "Herzlich willkommen zum zweiten Teil der 41. Vorlesung im Kurs Analysis 1 und  linaere Algebra fuer Ingenieurwissenschaften.", "type": "Satz", "module_number": 31070}, {"node_index": 1474, "embedding": [-6.352029323577881, -12.813213348388672, 36.74030685424805, -1.747859001159668, -10.040185928344727, -18.112348556518555], "text": "Wir hatten uns im ersten  Teil der Vorlesung mit der absoluten Konvergenz beschaeftigt.", "type": "Satz", "module_number": 31070}, {"node_index": 1475, "embedding": [-3.4680099487304688, -7.923846244812012, 19.45987319946289, -0.18174976110458374, -4.522753715515137, -9.672052383422852], "text": "Sie sehen das  auch noch auf der Folie und wir hatten gesehen, dass es ein staerkerer Begriff  als die bisherige Konvergenz von Rhein.", "type": "Satz", "module_number": 31070}, {"node_index": 1476, "embedding": [-10.164876937866211, -24.487892150878906, 60.38557052612305, -3.527956962585449, -11.90330982208252, -31.69810676574707], "text": "Deswegen hatten wir hier diese schoene  Implikation aus absoluter Konvergenz folgt Konvergenz und wir hatten aber auch  ein Gegenbeispiel gesehen, dass die Umkehrung im allgemeinen falsch ist.  ", "type": "Satz", "module_number": 31070}, {"node_index": 1477, "embedding": [-9.340507507324219, -25.787979125976562, 56.6179084777832, -2.5672831535339355, -8.602373123168945, -30.64851951599121], "text": "Jetzt hier im zweiten Teil wollen wir uns damit beschaeftigen.", "type": "Satz", "module_number": 31070}, {"node_index": 1478, "embedding": [-4.3489603996276855, -6.6374640464782715, 21.791471481323242, -1.177919626235962, -6.330704689025879, -10.406194686889648], "text": "Wir wollen diesen  Begriff nutzen und wollen uns ueberlegen, wie koennen wir Produkte von Rhein bilden  und wie koennen wir da was Vernuenftiges herausbekommen im Sinne von wir haben  zwei absolut konvergente Rhein, multiplizieren diese und dann kommt wieder  eine absolut konvergente Reihe heraus.", "type": "Satz", "module_number": 31070}, {"node_index": 1479, "embedding": [-7.330091953277588, -19.70645523071289, 45.93544006347656, -2.198267936706543, -7.468019008636475, -24.385385513305664], "text": "Ja und dafuer muessen wir uns erst mal  ueberlegen, was heisst das ueberhaupt?", "type": "Satz", "module_number": 31070}, {"node_index": 1480, "embedding": [-2.8585407733917236, -10.79066276550293, 20.525671005249023, 0.38067179918289185, -0.878826916217804, -10.906368255615234], "text": "Das Produkt von Rhein.", "type": "Satz", "module_number": 31070}, {"node_index": 1481, "embedding": [-7.634596347808838, -22.766599655151367, 49.609500885009766, -2.708718776702881, -6.953836441040039, -26.931528091430664], "text": "Das sind ja  unendlich viele Glieder und die Frage ist, wie kann man das eigentlich  multiplizieren und das ist das, was wir zuerst jetzt machen wollen.  ", "type": "Satz", "module_number": 31070}, {"node_index": 1482, "embedding": [-6.160383224487305, -7.85919713973999, 30.925214767456055, -1.8791835308074951, -10.408493995666504, -14.53638744354248], "text": "Also das Produkt von absolut konvergenten Rhein.", "type": "Satz", "module_number": 31070}, {"node_index": 1483, "embedding": [-95.0848388671875, 155.20606994628906, 265.2390441894531, 11.551061630249023, -114.32933807373047, -45.85127639770508], "text": " ", "type": "Satz", "module_number": 31070}, {"node_index": 1484, "embedding": [-5.333444118499756, -6.112055778503418, 26.711776733398438, -1.6010942459106445, -6.182329177856445, -12.214866638183594], "text": "Ich sage nachher noch was dazu, dass das eben jetzt hier wichtig ist, dass die  absolut konvergent sind.", "type": "Satz", "module_number": 31070}, {"node_index": 1485, "embedding": [-3.829317092895508, -8.749338150024414, 22.800365447998047, -1.8953473567962646, -4.521787643432617, -11.677406311035156], "text": "Sonst klappt das Ganze nicht oder es kann halt sein, dass  das Produkt tatsaechlich dann nicht konvergiert.", "type": "Satz", "module_number": 31070}, {"node_index": 1486, "embedding": [-7.297451972961426, -5.404389381408691, 34.0404167175293, -2.9255032539367676, -14.010540008544922, -15.198086738586426], "text": "So und das heisst, wir haben  jetzt hier zwei Rhein, k gleich 0 bis endlich, ak  und hier eine zweite Reihe  bk und wenn wir das einfach aufschreiben wollen, wollen wir also ja das Produkt nehmen  und die Frage ist halt, wie kann man das Produkt eben von diesen absolut  konvergenten Rhein als Reihe schreiben.", "type": "Satz", "module_number": 31070}, {"node_index": 1487, "embedding": [-95.23798370361328, 155.55783081054688, 265.5685119628906, 11.504674911499023, -114.72864532470703, -45.88229751586914], "text": " ", "type": "Satz", "module_number": 31070}, {"node_index": 1488, "embedding": [-5.269649028778076, -3.1299920082092285, 23.359312057495117, -0.6515573859214783, -6.311675548553467, -9.744669914245605], "text": "Also wir wollen wieder eine Reihe bekommen und zwar auch so, die auch wieder  absolut konvergent ist.  ", "type": "Satz", "module_number": 31070}, {"node_index": 1489, "embedding": [-4.729586601257324, -10.907121658325195, 26.59083366394043, -1.1819329261779785, -4.67402458190918, -13.697214126586914], "text": "Ja und die Idee hierbei ist, dass wir sogenannte Potenzreihen betrachten.  ", "type": "Satz", "module_number": 31070}, {"node_index": 1490, "embedding": [-6.342642307281494, -14.768664360046387, 36.53701400756836, -2.058847665786743, -6.0574951171875, -19.06788444519043], "text": "Jetzt ist es so, die kennen wir noch gar nicht, das machen wir naemlich in der  naechsten Folie sunk, aber das ist nicht wirklich kompliziert.", "type": "Satz", "module_number": 31070}, {"node_index": 1491, "embedding": [-5.558630466461182, -13.859265327453613, 31.049129486083984, -0.18243688344955444, -5.397529125213623, -16.31416893005371], "text": "Potenzreihen  sehen dann etwa aus wie Tailor Rhein.", "type": "Satz", "module_number": 31070}, {"node_index": 1492, "embedding": [-5.966665267944336, -12.83320140838623, 29.104537963867188, 2.547003746032715, -6.243653297424316, -14.686578750610352], "text": "Wir werden da auch in der naechsten Folie  so dann den Zusammenhang zwischen Potenzreihen und Tailor Rhein herstellen.  ", "type": "Satz", "module_number": 31070}, {"node_index": 1493, "embedding": [-6.518344402313232, -14.416296005249023, 33.72792053222656, 1.7486159801483154, -6.785975933074951, -17.139413833618164], "text": "Das heisst, die Idee ist wie folgt.  ", "type": "Satz", "module_number": 31070}, {"node_index": 1494, "embedding": [-10.950220108032227, -25.533531188964844, 63.36848068237305, -1.8329148292541504, -10.6812162399292, -33.151363372802734], "text": "Ich schreibe mal dazu", "type": "Satz", "module_number": 31070}, {"node_index": 1495, "embedding": [-2.4429373741149902, -7.645002365112305, 13.74093246459961, 3.351005792617798, -3.579207181930542, -6.441701889038086], "text": "Folie Sunk 42.", "type": "Satz", "module_number": 31070}, {"node_index": 1496, "embedding": [-4.119869232177734, -10.668354034423828, 21.62367820739746, 4.994704723358154, -6.124114990234375, -10.305360794067383], "text": "Das heisst, das sind einfach Reihen, die die  folgende Form haben.", "type": "Satz", "module_number": 31070}, {"node_index": 1497, "embedding": [-11.805746078491211, -23.325761795043945, 64.4593505859375, -2.8324060440063477, -14.593170166015625, -33.116172790527344], "text": "Dann werden jetzt also auch kleine unendliche Reihe, k gleich 0 bis  unendlich.", "type": "Satz", "module_number": 31070}, {"node_index": 1498, "embedding": [-5.321560859680176, -11.707765579223633, 30.175331115722656, -2.7434916496276855, -6.179971694946289, -15.79470157623291], "text": "Dann haben wir irgendwie hier Akas und dann so was wie x minus x 0 hoch k.  Ja und das erinnert ja schon in der Form an Tailor und da hatten wir eine bestimmte Form  an die Akas gestellt.", "type": "Satz", "module_number": 31070}, {"node_index": 1499, "embedding": [-7.298542022705078, -15.021958351135254, 37.53472900390625, 0.02074604481458664, -7.892068862915039, -19.224502563476562], "text": "Also ich schreibe mal hier Tailor Rhein als Beispiel.", "type": "Satz", "module_number": 31070}, {"node_index": 1500, "embedding": [-14.125007629394531, -33.77407455444336, 81.39315032958984, -3.4279117584228516, -12.834005355834961, -43.32407760620117], "text": "Wie gesagt,  wir gehen darauf noch naeher ein.", "type": "Satz", "module_number": 31070}, {"node_index": 1501, "embedding": [-17.249406814575195, -25.62981414794922, 89.36297607421875, -4.936779975891113, -31.041240692138672, -44.21524429321289], "text": "Und jetzt ist die Idee, jetzt setzen wir mal x 0 gleich 0.  Ja und was gilt dann?", "type": "Satz", "module_number": 31070}, {"node_index": 1502, "embedding": [-6.248755931854248, -2.674879550933838, 28.159507751464844, -2.5556602478027344, -14.219569206237793, -12.03123664855957], "text": "Jetzt schau ich mir mal so ein Produkt an, einmal mit Ak, einmal mit bk,  wobei ich jetzt x 0 gleich 0 setze.", "type": "Satz", "module_number": 31070}, {"node_index": 1503, "embedding": [-5.1117682456970215, -6.092753887176514, 24.97092628479004, -1.5290489196777344, -9.4117431640625, -11.66296100616455], "text": "So, dann bekomme ich also, wenn ich das Produkt mal anschaue,  dann habe ich ja sowas wie Ak x hoch k.", "type": "Satz", "module_number": 31070}, {"node_index": 1504, "embedding": [-11.279256820678711, -10.259191513061523, 54.21183395385742, -4.189181804656982, -22.046939849853516, -25.122770309448242], "text": "Wie gesagt, ich nutze jetzt diese Darstellung fuer x 0  gleich 0 und nehme jetzt einmal Ak und einmal bk.", "type": "Satz", "module_number": 31070}, {"node_index": 1505, "embedding": [-2.8798437118530273, -9.137275695800781, 19.562612533569336, -0.9419084191322327, -2.8463215827941895, -10.452325820922852], "text": "So, was ich jetzt haben moechte, ich moechte das  ja ausmultipizieren.", "type": "Satz", "module_number": 31070}, {"node_index": 1506, "embedding": [-17.813663482666016, -36.44779968261719, 99.18840789794922, -3.163450241088867, -18.355863571166992, -51.20676803588867], "text": "Jetzt schreibe ich nochmal auf, was hier eigentlich steht.", "type": "Satz", "module_number": 31070}, {"node_index": 1507, "embedding": [-4.047379016876221, -11.530324935913086, 23.68216896057129, -0.24688977003097534, -3.401555061340332, -12.741857528686523], "text": "Jetzt habe ich hier  noch ein x dabei.", "type": "Satz", "module_number": 31070}, {"node_index": 1508, "embedding": [-14.028998374938965, -19.631559371948242, 71.42098999023438, -3.615609645843506, -26.19800567626953, -34.951927185058594], "text": "Und dann eben hier b 0 plus b 1", "type": "Satz", "module_number": 31070}, {"node_index": 1509, "embedding": [-2.0530571937561035, -11.244637489318848, 14.68709945678711, 2.242884874343872, -2.8401198387145996, -8.824409484863281], "text": "x plus b 2", "type": "Satz", "module_number": 31070}, {"node_index": 1510, "embedding": [-3.7347240447998047, -16.11363983154297, 23.17784309387207, 5.8214921951293945, -4.58192777633667, -13.355300903320312], "text": "x Quadrat.", "type": "Satz", "module_number": 31070}, {"node_index": 1511, "embedding": [-14.906538963317871, -38.480918884277344, 88.61274719238281, -3.5471959114074707, -14.215167999267578, -47.92647933959961], "text": "Ja und jetzt muessen wir  einfach ausmultipizieren.", "type": "Satz", "module_number": 31070}, {"node_index": 1512, "embedding": [-10.890995979309082, -17.716543197631836, 58.41780090332031, -3.48994779586792, -20.299388885498047, -29.104021072387695], "text": "Das sieht erstmal schlimm aus und wir vergleichen dann einfach die  Koffizienten vor der jeweiligen Potenz von x. Ja, wenn ich jetzt x hoch 0 habe, dann sehe ich,  hier bleibt am Anfang nur a 0 b 0.", "type": "Satz", "module_number": 31070}, {"node_index": 1513, "embedding": [-5.989892959594727, -10.518120765686035, 33.64409255981445, -2.268101453781128, -7.037679672241211, -16.573572158813477], "text": "Das ist einfach.", "type": "Satz", "module_number": 31070}, {"node_index": 1514, "embedding": [-8.07865047454834, -14.01695442199707, 45.95015335083008, -5.317388534545898, -9.171192169189453, -23.15801429748535], "text": "Und man sieht oder man hat das Gefuehl, es kommt also  immer mehr hinzu.", "type": "Satz", "module_number": 31070}, {"node_index": 1515, "embedding": [-15.696946144104004, -4.180309295654297, 67.97718811035156, -5.3454203605651855, -35.59527587890625, -28.883577346801758], "text": "Wenn ich jetzt mal die Ausdruecke vor dem x haben moechte, dann sehe ich ja zum  einen, also dieses a 0 multipliziere ich mit b 1 x.", "type": "Satz", "module_number": 31070}, {"node_index": 1516, "embedding": [-8.43702507019043, -5.425108432769775, 38.56167984008789, -2.8380937576293945, -18.39422035217285, -17.172382354736328], "text": "Da entsteht ein x und ich multipliziere aber auch a 1  x mit b 0.", "type": "Satz", "module_number": 31070}, {"node_index": 1517, "embedding": [-3.5187745094299316, -7.139357089996338, 19.81157875061035, -1.6434195041656494, -5.613229274749756, -10.046915054321289], "text": "Und das sind die beiden einzigen Ausdruecke, die vor x stehen bei dem Produkt.", "type": "Satz", "module_number": 31070}, {"node_index": 1518, "embedding": [-95.09857177734375, 155.05455017089844, 265.4300842285156, 11.523035049438477, -114.19010925292969, -45.984195709228516], "text": "  ", "type": "Satz", "module_number": 31070}, {"node_index": 1519, "embedding": [-6.577918529510498, -7.194125652313232, 31.00523567199707, -0.4789366126060486, -11.392068862915039, -14.291013717651367], "text": "Also a 0 b 1 plus a 1 b 0 x.", "type": "Satz", "module_number": 31070}, {"node_index": 1520, "embedding": [-4.894745349884033, -14.005064010620117, 29.786954879760742, -0.626853883266449, -4.936013698577881, -16.00484275817871], "text": "Und so mache ich das weiter.", "type": "Satz", "module_number": 31070}, {"node_index": 1521, "embedding": [-4.492249965667725, -13.271228790283203, 27.418107986450195, -0.5983201861381531, -4.163939952850342, -14.720199584960938], "text": "Jetzt nehme ich x Quadrat.", "type": "Satz", "module_number": 31070}, {"node_index": 1522, "embedding": [-8.123947143554688, -13.431217193603516, 42.2484016418457, -1.8046925067901611, -9.24114990234375, -20.753652572631836], "text": "Ja,  was steht denn jetzt vor x Quadrat?", "type": "Satz", "module_number": 31070}, {"node_index": 1523, "embedding": [-10.419679641723633, -23.07206916809082, 58.104183197021484, -1.436774730682373, -10.529109954833984, -30.2913875579834], "text": "Also einmal das mit diesem habe ich dabei.", "type": "Satz", "module_number": 31070}, {"node_index": 1524, "embedding": [-6.911233901977539, -18.62329864501953, 40.416568756103516, -0.9699904322624207, -6.084925651550293, -21.792749404907227], "text": "Dann habe ich dieses  mit diesem habe ich dabei.", "type": "Satz", "module_number": 31070}, {"node_index": 1525, "embedding": [-6.802924156188965, -11.684720993041992, 35.59785079956055, -1.6669774055480957, -7.476330757141113, -17.57284927368164], "text": "Da entsteht ein x Quadrat und dann habe ich noch dieses mit diesem.  ", "type": "Satz", "module_number": 31070}, {"node_index": 1526, "embedding": [-7.29677677154541, -14.371891021728516, 40.7345085144043, -3.786257743835449, -8.528142929077148, -20.952800750732422], "text": "Und wir sehen also, es kommt immer 1 hinzu.", "type": "Satz", "module_number": 31070}, {"node_index": 1527, "embedding": [-13.120050430297852, -21.862873077392578, 69.71391296386719, -4.448949813842773, -23.541383743286133, -35.13727569580078], "text": "Das heisst also hier bekommen wir a 0 b 2 plus a 1 b 1 plus  a 2 b 0 x Quadrat.", "type": "Satz", "module_number": 31070}, {"node_index": 1528, "embedding": [-8.863513946533203, -19.85752296447754, 51.53589630126953, -3.9912219047546387, -8.642417907714844, -27.343555450439453], "text": "Und das geht dann einfach so weiter.", "type": "Satz", "module_number": 31070}, {"node_index": 1529, "embedding": [-6.6117048263549805, -13.613929748535156, 36.67562484741211, -3.074388265609741, -6.858287811279297, -19.09486198425293], "text": "Jetzt ist die Idee, dass wir das jetzt  einfach neu bezeichnen.", "type": "Satz", "module_number": 31070}, {"node_index": 1530, "embedding": [-6.931274890899658, -13.72796630859375, 37.37510299682617, -2.5281460285186768, -6.698527812957764, -19.215551376342773], "text": "Das ist jetzt einfach, das nennen wir mal unser C 0.", "type": "Satz", "module_number": 31070}, {"node_index": 1531, "embedding": [-8.238346099853516, -14.36412525177002, 44.36080551147461, -3.131265163421631, -11.495382308959961, -22.27848243713379], "text": "Das nennen wir C 1 und  das denn hier und so weiter ist dann unser C 2.", "type": "Satz", "module_number": 31070}, {"node_index": 1532, "embedding": [-7.3196516036987305, -6.649965763092041, 35.133846282958984, -3.1387102603912354, -14.408426284790039, -16.303096771240234], "text": "Wenn wir das mal so aufschreiben, dann bekommen wir  also eine Form von C 0 C 1 x C 2 x Quadrat und so weiter.", "type": "Satz", "module_number": 31070}, {"node_index": 1533, "embedding": [-5.253445625305176, -10.708549499511719, 29.4876766204834, -2.00579833984375, -6.80339241027832, -15.145299911499023], "text": "Und das ganze kann ich ja dann als Reihe schreiben.  ", "type": "Satz", "module_number": 31070}, {"node_index": 1534, "embedding": [-12.867956161499023, -19.158723831176758, 65.83784484863281, -4.126087665557861, -18.585552215576172, -32.769100189208984], "text": "K gleich 0 bis und endlich von C k x k und die C k kann ich jetzt also definieren.", "type": "Satz", "module_number": 31070}, {"node_index": 1535, "embedding": [-5.3844523429870605, -10.65812873840332, 29.594175338745117, -2.1502180099487305, -6.476073741912842, -15.178186416625977], "text": "Ja, was habe ich jetzt  gesehen bis wo ich gehe ich jetzt hier immer.", "type": "Satz", "module_number": 31070}, {"node_index": 1536, "embedding": [-9.605226516723633, -22.701936721801758, 55.64751052856445, -2.977949619293213, -12.764277458190918, -29.55023765563965], "text": "Das ist also a 0 b k.", "type": "Satz", "module_number": 31070}, {"node_index": 1537, "embedding": [-15.03189468383789, -22.71929931640625, 77.86045837402344, -4.23316764831543, -27.552806854248047, -38.61502456665039], "text": "Ja, da sehen sie also,  hier steht die 0, hier steht die 1, hier steht die 2. So, dann plus a 1 und dann verringert sich das b 1 der  NDC.", "type": "Satz", "module_number": 31070}, {"node_index": 1538, "embedding": [-5.919813632965088, -1.1710783243179321, 24.377330780029297, -2.1452841758728027, -12.716178894042969, -10.121061325073242], "text": "Also man kann sich gedanklich immer merken, dass das und das zusammen erdiert gibt immer k plus  und so weiter und am Ende haben wir a k b 0.", "type": "Satz", "module_number": 31070}, {"node_index": 1539, "embedding": [-13.44114875793457, -32.057918548583984, 77.15804290771484, -3.773003101348877, -11.09007453918457, -41.56926345825195], "text": "Schauen wir nochmal kurz hier.", "type": "Satz", "module_number": 31070}, {"node_index": 1540, "embedding": [-13.611148834228516, -21.032384872436523, 70.9897232055664, -5.018405437469482, -22.140111923217773, -35.5291862487793], "text": "Hier ist k gleich 2, hier  steht also k und da steht 0.", "type": "Satz", "module_number": 31070}, {"node_index": 1541, "embedding": [-4.650684356689453, -5.9275031089782715, 23.040639877319336, -1.66817307472229, -8.129270553588867, -10.940437316894531], "text": "Und dann ist die Idee, dass wir jetzt, wenn wir diese Formel haben, dass wir einfach  x gleich einsetzen.", "type": "Satz", "module_number": 31070}, {"node_index": 1542, "embedding": [-7.148754596710205, -30.724430084228516, 52.533714294433594, -2.1400961875915527, -0.88846355676651, -31.16741180419922], "text": "Und was bekommen wir dann?", "type": "Satz", "module_number": 31070}, {"node_index": 1543, "embedding": [-17.414934158325195, -26.016843795776367, 90.17475891113281, -5.903596878051758, -28.82371711730957, -44.89314651489258], "text": "Dann haben wir also k gleich 0 bis und endlich,  a k.", "type": "Satz", "module_number": 31070}, {"node_index": 1544, "embedding": [-4.06942892074585, -8.675004959106445, 21.916690826416016, -1.1403206586837769, -4.107037544250488, -11.219480514526367], "text": "Das ist ja eigentlich die Ausgangsfrage gewesen.", "type": "Satz", "module_number": 31070}, {"node_index": 1545, "embedding": [-12.453092575073242, -23.566041946411133, 67.41801452636719, -3.6392431259155273, -17.60553741455078, -34.66130065917969], "text": "k gleich 0 bis und endlich b", "type": "Satz", "module_number": 31070}, {"node_index": 1546, "embedding": [-11.85512638092041, -10.655252456665039, 48.80731201171875, 6.343235492706299, -7.578067302703857, -21.63496971130371], "text": "k.", "type": "Satz", "module_number": 31070}, {"node_index": 1547, "embedding": [-15.775860786437988, -34.537288665771484, 88.5664291381836, -3.1068482398986816, -15.375959396362305, -46.565452575683594], "text": "Und das koennen wir  jetzt also als Reihe schreiben.", "type": "Satz", "module_number": 31070}, {"node_index": 1548, "embedding": [-12.197486877441406, -23.40618133544922, 66.36104583740234, -3.7404942512512207, -16.729957580566406, -34.23823165893555], "text": "k gleich 0 bis und endlich C", "type": "Satz", "module_number": 31070}, {"node_index": 1549, "embedding": [-12.418654441833496, -11.29362678527832, 50.72010803222656, 7.216866493225098, -7.534451961517334, -22.557817459106445], "text": "k.", "type": "Satz", "module_number": 31070}, {"node_index": 1550, "embedding": [-7.738110065460205, -14.86699390411377, 41.88321304321289, -0.4893009066581726, -8.725231170654297, -21.11310386657715], "text": "Und hier ist das C k eben genau so  definiert.", "type": "Satz", "module_number": 31070}, {"node_index": 1551, "embedding": [-10.427499771118164, -18.08219337463379, 56.44440841674805, -2.7552289962768555, -11.36723518371582, -28.24186134338379], "text": "Also das ist sozusagen damit gemeint.", "type": "Satz", "module_number": 31070}, {"node_index": 1552, "embedding": [-5.782759189605713, -10.118908882141113, 32.0829963684082, -1.972470760345459, -6.171351909637451, -15.929285049438477], "text": "Und das Ganze ist das Koshiprodukt, das Koshiprodukt von  Ryan.", "type": "Satz", "module_number": 31070}, {"node_index": 1553, "embedding": [-5.1762237548828125, -13.835014343261719, 32.34621810913086, -1.4411933422088623, -5.102728843688965, -17.09194564819336], "text": "Und bevor wir uns dazu das Resultat auf der Folie anschauen, moechte ich kurz noch eine  Interpretation geben, was das eigentlich bedeutet, was wir hier gemacht haben.", "type": "Satz", "module_number": 31070}, {"node_index": 1554, "embedding": [-95.11077880859375, 155.0170440673828, 265.49407958984375, 11.594076156616211, -114.13888549804688, -46.005558013916016], "text": "  ", "type": "Satz", "module_number": 31070}, {"node_index": 1555, "embedding": [-9.956355094909668, -15.178754806518555, 53.5639762878418, -4.042290210723877, -13.781913757324219, -26.329465866088867], "text": "Und zwar im Endeffekt ist es doch so, wenn wir mal die Ausgangsfrage haben, dann haben wir diese Reihe und  diese Reihe und wenn wir ausmultipizieren, dann muss jedes Produkt, also jeder Summan dabei vorkommen,  das heisst solche Ausdruecke a k bl, die muessten ja eigentlich alle vorkommen und die kommen auch", "type": "Satz", "module_number": 31070}, {"node_index": 1556, "embedding": [-95.17398834228516, 155.1968536376953, 265.6505432128906, 11.497699737548828, -114.26087188720703, -46.024654388427734], "text": " ", "type": "Satz", "module_number": 31070}, {"node_index": 1557, "embedding": [-7.528446197509766, -13.048955917358398, 41.1567268371582, -1.6598639488220215, -6.023707389831543, -20.473398208618164], "text": "vor und das kann man sich leicht ueberlegen.", "type": "Satz", "module_number": 31070}, {"node_index": 1558, "embedding": [-8.776228904724121, -8.153022766113281, 43.51362609863281, -3.3708863258361816, -16.200557708740234, -20.09794807434082], "text": "Das Ganze ist naemlich einfach ja zu verstehen im Sinne  von laengst der Diagonalen wird hier aufsummiert.", "type": "Satz", "module_number": 31070}, {"node_index": 1559, "embedding": [-11.984809875488281, -27.30625343322754, 67.79884338378906, -1.8910489082336426, -11.818474769592285, -35.66854476928711], "text": "Das will ich noch mal kurz anmerken.  ", "type": "Satz", "module_number": 31070}, {"node_index": 1560, "embedding": [-9.5921049118042, -15.288532257080078, 49.751708984375, -3.005366325378418, -13.45627498626709, -24.839811325073242], "text": "Das heisst, dass aufsummieren  der Elemente a k, jetzt sage ich mal a k", "type": "Satz", "module_number": 31070}, {"node_index": 1561, "embedding": [-3.856320858001709, -8.94615364074707, 20.986467361450195, 0.13527995347976685, -5.225042819976807, -10.814361572265625], "text": "bl mit k l aus n  erfolgt laengst  der Diagonalen.", "type": "Satz", "module_number": 31070}, {"node_index": 1562, "embedding": [-5.441009521484375, -13.648344993591309, 29.473844528198242, 1.7330355644226074, -5.73753547668457, -15.668197631835938], "text": "Wie kann man sich das vorstellen?", "type": "Satz", "module_number": 31070}, {"node_index": 1563, "embedding": [-19.819204330444336, -31.479843139648438, 104.23715209960938, -5.963380813598633, -34.602542877197266, -52.28586959838867], "text": "Also wenn wir das mal so aufschreiben, wir haben  jetzt hier a 0 b 0, dann geht es so weiter a 1 b 0 a 2 b 0 a 3 b 0.", "type": "Satz", "module_number": 31070}, {"node_index": 1564, "embedding": [-7.942070960998535, -22.172218322753906, 48.41741180419922, -1.624983787536621, -7.32438850402832, -26.302589416503906], "text": "Ich muss jetzt hier mal ein paar  aufschreiben, damit wir das besser sehen.", "type": "Satz", "module_number": 31070}, {"node_index": 1565, "embedding": [-3.2106821537017822, -11.652082443237305, 20.336164474487305, -0.4625707268714905, -1.688813328742981, -11.510502815246582], "text": "Ich moechte hier all diese diese Produkte ja dabei haben.  ", "type": "Satz", "module_number": 31070}, {"node_index": 1566, "embedding": [-5.321611404418945, -16.646337509155273, 32.689151763916016, -1.1136674880981445, -4.356614112854004, -18.086374282836914], "text": "Dann habe ich hier a 2 b 1 a 3 b 1.", "type": "Satz", "module_number": 31070}, {"node_index": 1567, "embedding": [-12.909497261047363, -19.009654998779297, 64.77946472167969, -1.2938404083251953, -15.397197723388672, -31.507078170776367], "text": "So dann a 1", "type": "Satz", "module_number": 31070}, {"node_index": 1568, "embedding": [-7.149799823760986, -10.50219440460205, 34.763301849365234, 1.8420227766036987, -6.693878173828125, -16.49427604675293], "text": "b 2.", "type": "Satz", "module_number": 31070}, {"node_index": 1569, "embedding": [-5.188863754272461, -10.75238037109375, 27.616363525390625, 0.8355825543403625, -4.754648685455322, -14.157979965209961], "text": "Moment, a 0, ich habe a 1 gesagt, aber ich  habe es richtig geschrieben.", "type": "Satz", "module_number": 31070}, {"node_index": 1570, "embedding": [-9.587663650512695, -22.84545135498047, 55.495121002197266, -2.656022071838379, -12.419517517089844, -29.4563045501709], "text": "So, das ist jetzt a 1 b 2 a 2 b 2", "type": "Satz", "module_number": 31070}, {"node_index": 1571, "embedding": [-5.908329010009766, -18.705604553222656, 35.78506088256836, 1.5931038856506348, -4.169833660125732, -19.833791732788086], "text": "a 3 b 2", "type": "Satz", "module_number": 31070}, {"node_index": 1572, "embedding": [-4.5447821617126465, -16.083526611328125, 30.03101921081543, 1.066916584968567, -2.452004909515381, -16.600378036499023], "text": "und ich moechte noch eins machen", "type": "Satz", "module_number": 31070}, {"node_index": 1573, "embedding": [-94.74105072021484, 147.96104431152344, 269.54095458984375, 11.429365158081055, -112.89823150634766, -50.11484146118164], "text": ".  ", "type": "Satz", "module_number": 31070}, {"node_index": 1574, "embedding": [-5.152750492095947, 3.068206548690796, 16.45654296875, 0.9469066858291626, -7.245832920074463, -4.847757339477539], "text": "Keine Sorge, das hoert gleich auf.", "type": "Satz", "module_number": 31070}, {"node_index": 1575, "embedding": [-5.214753150939941, -5.801413536071777, 23.31485939025879, 0.15961533784866333, -8.714672088623047, -10.788586616516113], "text": "Das ist also a 0 b 3 a 1 b 3 a 2 b 3 a 3 b 3 und dann geht das hier so weiter,  wenn wir das als Tableau mal so aufschreiben.", "type": "Satz", "module_number": 31070}, {"node_index": 1576, "embedding": [-9.744695663452148, -25.608604431152344, 59.058685302734375, -2.9900479316711426, -9.916268348693848, -31.84003257751465], "text": "So, dann ist ja die Frage, wie summieren wir jetzt hier  eigentlich auf, wenn wir uns das hier mal anschauen.", "type": "Satz", "module_number": 31070}, {"node_index": 1577, "embedding": [-3.487394094467163, -13.678644180297852, 23.344480514526367, 0.07035236805677414, -2.4959511756896973, -13.350048065185547], "text": "Was heisst das ueberhaupt?", "type": "Satz", "module_number": 31070}, {"node_index": 1578, "embedding": [-8.726269721984863, -12.18880844116211, 43.92216110229492, -2.2701914310455322, -14.56827449798584, -21.43305778503418], "text": "Bekommen wir hier wirklich  alle und tatsaechlich laengst der Diagonalen ist, also wir summieren so auf und dann das Naechste sieht  dann so aus und das Naechste sieht dann so aus und so decken wir tatsaechlich alle Elemente ab.", "type": "Satz", "module_number": 31070}, {"node_index": 1579, "embedding": [-11.744075775146484, -25.804195404052734, 67.33705139160156, -3.7840566635131836, -17.168460845947266, -35.31663131713867], "text": "Das  heisst also, dass hier oben das ist jetzt c 0.", "type": "Satz", "module_number": 31070}, {"node_index": 1580, "embedding": [-6.18717622756958, -16.508563995361328, 36.6382942199707, -1.8773040771484375, -4.668363571166992, -19.97322654724121], "text": "So, das naechste, das c 1, wir koennen nochmal oben  schauen, stimmt denn das, was ich hier mache?", "type": "Satz", "module_number": 31070}, {"node_index": 1581, "embedding": [-5.044652462005615, -9.582183837890625, 27.17359733581543, -2.3753459453582764, -5.617408752441406, -13.987651824951172], "text": "Also, wir koennen das ja einfach von dort nach dort lesen,  ja, an diese Richtung und hier da, das funktioniert.", "type": "Satz", "module_number": 31070}, {"node_index": 1582, "embedding": [-8.888422966003418, -19.213516235351562, 50.821983337402344, -3.7733216285705566, -10.569141387939453, -26.703237533569336], "text": "Das ist also c 1, c 0 stimmt auch.", "type": "Satz", "module_number": 31070}, {"node_index": 1583, "embedding": [-10.479843139648438, -9.941020965576172, 49.266441345214844, -1.212069034576416, -13.204352378845215, -22.41022300720215], "text": "So, und als Naechstes  sieht man dann also, dass das hier c 2 ist, das heisst also dieses plus dieses plus dieses und auch das  sieht man jetzt hier sehr schoen.", "type": "Satz", "module_number": 31070}, {"node_index": 1584, "embedding": [-7.376822471618652, -7.327571392059326, 36.41379928588867, -3.3534717559814453, -12.63343620300293, -17.008209228515625], "text": "Das ist sozusagen die Idee und damit bekommt man, wenn wirklich jedes  Produkt von diesen ausdruecken akbl und machen wir in der Vollstaendigkeit halber noch das letzte,  also hier in der Grafik, das geht dann natuerlich endlich weiter, das ist dann c 3, ja und damit  sehen wir also, dass wir durch dieses Produkt, so wie wir das gerade gemacht haben, tatsaechlich auch alle", "type": "Satz", "module_number": 31070}, {"node_index": 1585, "embedding": [-95.34139251708984, 155.8742218017578, 265.8060607910156, 11.495147705078125, -114.82125854492188, -45.86671447753906], "text": " ", "type": "Satz", "module_number": 31070}, {"node_index": 1586, "embedding": [-4.255855560302734, 3.2664172649383545, 13.654352188110352, 1.4251368045806885, -5.507118225097656, -3.2002689838409424], "text": "Paar oder Ausdruecke akbl abdecken.", "type": "Satz", "module_number": 31070}, {"node_index": 1587, "embedding": [-4.494368553161621, -7.397709369659424, 22.24700927734375, 1.8794392347335815, -5.460031986236572, -10.055543899536133], "text": "Ja und das ist das Koji Produkt und dazu schauen wir uns das direkt  nochmal an.", "type": "Satz", "module_number": 31070}, {"node_index": 1588, "embedding": [-7.13355016708374, -8.80671501159668, 35.197105407714844, -1.1074309349060059, -11.556801795959473, -16.60280418395996], "text": "Wie gesagt, wir beweisen jetzt hier nicht alles, aber tatsaechlich ist es so, wenn wir die  Reihen so multiplizieren und man haette das Ganze auch anders machen koennen, ja, also man haette zum  Beispiel jetzt haette ich jetzt auch sagen koennen, das ist das erste, dann nehme ich das naechste und  nehme mir so quadratweise, ja das Ganze, das haette ich auch machen koennen, so, aber tatsaechlich ist es", "type": "Satz", "module_number": 31070}, {"node_index": 1589, "embedding": [-95.43717193603516, 155.61082458496094, 266.3985595703125, 11.488487243652344, -114.852783203125, -46.192562103271484], "text": " ", "type": "Satz", "module_number": 31070}, {"node_index": 1590, "embedding": [-5.824593544006348, -6.5133957862854, 27.885162353515625, 0.09284120053052902, -6.463208198547363, -12.557767868041992], "text": "spaeter dann auch sinnvoller, dass wir jetzt hier tatsaechlich dann dieses Koji Produkt laengst der  Diagonalen machen und ja, wenn diese beiden Reihen absolut konvergent sind, dann ist eben auch das  Produkt, also das Koji Produkt absolut konvergent.", "type": "Satz", "module_number": 31070}, {"node_index": 1591, "embedding": [-5.02211856842041, -9.480080604553223, 30.22490692138672, -3.432161808013916, -7.022883415222168, -15.049034118652344], "text": "Das sozusagen die Aussage, das haben wir jetzt hier  nicht bewiesen, das muessen Sie mir jetzt erstmal glauben.", "type": "Satz", "module_number": 31070}, {"node_index": 1592, "embedding": [-7.207290172576904, -4.037363052368164, 36.41523361206055, -4.893243312835693, -14.770358085632324, -15.77673053741455], "text": "Der Beweis steht auch nicht im Skript drin,  aber das sozusagen ein bisschen die Idee dabei und hier sehen Sie auch nochmal das Produkt, das heisst,  das was ich auch auf der E-Kreide geschrieben habe und die CKA ist bestimmt man eben genau so,  wie ich das hier angegeben habe in dieser Form und das ist dann einfach das Koji Produkt.", "type": "Satz", "module_number": 31070}, {"node_index": 1593, "embedding": [-14.760882377624512, -34.4521369934082, 89.14115905761719, -6.094418525695801, -19.024585723876953, -46.54720687866211], "text": "Ja, wichtig  dabei ist jetzt der Begriff der absoluten Konvergenz ist essentiell, weil das sehen Sie ja nochmal an  der Bemerkung, falls also diese beiden Reihen gewoehnlich konvergieren, aber nicht absolut konvergieren,  dann muss diese Reihe hier noch nicht mal konvergieren, ja, das heisst also das Ganze waere nicht wohl", "type": "Satz", "module_number": 31070}, {"node_index": 1594, "embedding": [-95.23235321044922, 155.50149536132812, 265.62396240234375, 11.584753036499023, -114.34612274169922, -45.89016342163086], "text": " ", "type": "Satz", "module_number": 31070}, {"node_index": 1595, "embedding": [-12.590664863586426, -28.20667266845703, 74.55696105957031, -5.130043029785156, -15.89535903930664, -38.625144958496094], "text": "definiert, wenn wir nicht die absolute Konvergenz haben und das ist auch ein Grund, warum wir diesen  Begriff benoetigen und jetzt haben wir also bei den Rechenregeln also noch etwas weiteres dazu,  bekommen dem der Addition und der Skalarmultipulation, koennen wir also jetzt das Produkt bilden von zwei", "type": "Satz", "module_number": 31070}, {"node_index": 1596, "embedding": [-12.796943664550781, -28.472198486328125, 76.30789184570312, -4.754395961761475, -16.498947143554688, -39.3996696472168], "text": " Reihen, die absolut konvergent sind und bekommen wieder eine Reihe, die absolut konvergent ist.", "type": "Satz", "module_number": 31070}, {"node_index": 1597, "embedding": [-5.649205684661865, 0.4723743200302124, 22.25141716003418, -1.9758219718933105, -12.6875581741333, -8.545673370361328], "text": "Ja,  versuchen wir das mal kurz an einem Beispiel anzuwenden, genau und zwar schauen wir da nochmal auf E-Hoch X,  ein kleines Beispiel, ich schreibe jetzt mal E-Hoch X statt E-X-P von X, ja,  das ist ja jetzt nicht verboten und wenn wir da nochmal die Tailor Reihe anschauen,  die sah ja so aus,  das hatten wir uns in Vorlesung 26 ueberlegt, dann ist die absolut konvergent,", "type": "Satz", "module_number": 31070}, {"node_index": 1598, "embedding": [-95.4601058959961, 156.18179321289062, 265.9742126464844, 11.549474716186523, -115.06720733642578, -45.8166618347168], "text": " ", "type": "Satz", "module_number": 31070}, {"node_index": 1599, "embedding": [-6.48190450668335, 5.399560451507568, 21.34208106994629, -1.2702128887176514, -12.483051300048828, -6.473883628845215], "text": "warum ist es so, ja, das koennen wir uns einfach anschauen,  zwar wenn ich jetzt hier den Betrag dazu nehme, also X hoch K durch K Fakultaet,  dann kann ich das natuerlich auch immer schreiben als K gleich 0 bis und endlich,  dann habe ich hier also X Betrag hoch K, das sind einfach,  genau, ich habe einfach den Betrag reingezogen und wenn sie jetzt,", "type": "Satz", "module_number": 31070}, {"node_index": 1600, "embedding": [-95.41826629638672, 156.21266174316406, 265.7769470214844, 11.579122543334961, -114.85962677001953, -45.72762680053711], "text": " ", "type": "Satz", "module_number": 31070}, {"node_index": 1601, "embedding": [-10.899032592773438, 10.297618865966797, 36.7565803527832, -3.59749174118042, -26.00881004333496, -11.381898880004883], "text": "das ist ja dann quasi einfach ein Produkt, ja, also hier steht ja jetzt K mal Betrag von X und  das kann ich natuerlich zusammenfassen und dann habe ich hier noch K Fakultaet stehen und das  ganze ist dann natuerlich E hoch X Betrag und das konvergiert, ja, so und wenn wir jetzt mal  ueberlegen koennen wir eine Rechenregel zeigen, die wir schon gesehen haben, also wenn ich jetzt E", "type": "Satz", "module_number": 31070}, {"node_index": 1602, "embedding": [-95.46979522705078, 156.34872436523438, 265.89642333984375, 11.567319869995117, -115.03341674804688, -45.72957992553711], "text": " ", "type": "Satz", "module_number": 31070}, {"node_index": 1603, "embedding": [-9.817673683166504, 11.471776008605957, 29.96748924255371, -2.4111526012420654, -22.576831817626953, -8.212268829345703], "text": "hoch X mal E hoch Y, dann weiss ich ja, dass es E hoch X plus Y und das koennen wir jetzt ja mal mit dem  Koji Produkt zeigen, wenn wir jetzt hier mal die Reihen aufschreiben direkt,  dann habe ich hier also X hoch K durch K Fakultaet und jetzt multipliziere ich das  ganze, K gleich 0 bis endlich und jetzt habe ich hier Y hoch K durch K Fakultaet, ja und jetzt", "type": "Satz", "module_number": 31070}, {"node_index": 1604, "embedding": [-95.54190826416016, 156.4536590576172, 266.0848693847656, 11.569696426391602, -115.17427825927734, -45.769405364990234], "text": " ", "type": "Satz", "module_number": 31070}, {"node_index": 1605, "embedding": [-9.013158798217773, -1.612311601638794, 36.991397857666016, -1.3379881381988525, -16.088335037231445, -14.95100212097168], "text": "kann ich doch einfach mal das Koji Produkt anwenden, was wir da auf der Folie sehen,  ja was kommt da raus, wenn wir das Koji Produkt zu anwenden, ich meine im Endeffekt steht ja jetzt  hier, das ist Ck, das heisst hier steht ja noch mal eine endliche Summe, das heisst also wir haben  was stehen, wir haben jetzt hier K gleich 0 bis endlich und dann geht das ganze, das Ck geht also", "type": "Satz", "module_number": 31070}, {"node_index": 1606, "embedding": [-95.49526977539062, 156.05946350097656, 266.2386474609375, 11.575241088867188, -114.8870620727539, -45.95288848876953], "text": " ", "type": "Satz", "module_number": 31070}, {"node_index": 1607, "embedding": [-12.333334922790527, 7.037766933441162, 43.97878646850586, -2.975095272064209, -27.744606018066406, -15.43746566772461], "text": "bis K, das heisst wir haben jetzt hier also ich nenne jetzt mal den Index L von L gleich 0 bis K und  dann haben wir hier also diese Ausdruecke hier stehen, das heisst also die Koffizienten hier oben  sind ja zum einen diese und diese und wenn wir das jetzt mal zusammen verarbeiten, dann  bekommen wir hier X hoch L durch L Fakultaet mal Y hoch K minus L Fakultaet, ja also das was jetzt", "type": "Satz", "module_number": 31070}, {"node_index": 1608, "embedding": [-95.59807586669922, 156.54576110839844, 266.24932861328125, 11.580179214477539, -115.26168823242188, -45.799564361572266], "text": " ", "type": "Satz", "module_number": 31070}, {"node_index": 1609, "embedding": [-4.477440357208252, 3.61780047416687, 15.422245025634766, 0.25937193632125854, -7.133631706237793, -4.13714075088501], "text": "hier steht ist nichts anderes als das Ck, nur angewandt eben auf dieses speziellen Koffizienten.", "type": "Satz", "module_number": 31070}, {"node_index": 1610, "embedding": [-95.46788787841797, 156.16883850097656, 266.0941467285156, 11.664995193481445, -114.7560806274414, -45.82041549682617], "text": " ", "type": "Satz", "module_number": 31070}, {"node_index": 1611, "embedding": [-11.247956275939941, 15.900899887084961, 32.10818099975586, -2.528095006942749, -28.232561111450195, -7.696629524230957], "text": "So was koennen wir jetzt hier tun, naja irgendwie wird ja die Idee sein, denn das wird im  binomischen Leersatz anwenden und jetzt koennten wir doch mal hier einfach erweitern durch K Fakultaet,  durch also quasi mit 1 multiplizieren und wenn wir das jetzt nochmal neu aufschreiben,  K gleich 0 bis und endlich, dann habe ich hier vorne 1 durch K Fakultaet, dann steht da L", "type": "Satz", "module_number": 31070}, {"node_index": 1612, "embedding": [-95.63658905029297, 156.69471740722656, 266.2801818847656, 11.593290328979492, -115.29695129394531, -45.756099700927734], "text": " ", "type": "Satz", "module_number": 31070}, {"node_index": 1613, "embedding": [-12.89472770690918, 9.826744079589844, 43.40254592895508, -2.6870787143707275, -29.762916564941406, -14.345430374145508], "text": "gleich 0 bis K, dann habe ich jetzt hier K Fakultaet und jetzt also dieses nehme ich jetzt und dann  nehme ich noch diese beiden hier, da steht dann L Fakultaet durch K minus L Fakultaet und am Ende  noch X hoch L mal Y hoch K minus L, naja und dieser Ausdruck, der kommt uns doch bekannt vor,  dass es einfach der binominal Koffizient K ueber L schon eine Weile her, als wir das gemacht haben.", "type": "Satz", "module_number": 31070}, {"node_index": 1614, "embedding": [-95.70018768310547, 156.70603942871094, 266.5404968261719, 11.579957962036133, -115.39970397949219, -45.85835266113281], "text": "  ", "type": "Satz", "module_number": 31070}, {"node_index": 1615, "embedding": [-17.711729049682617, 15.589935302734375, 59.2602653503418, -5.493480682373047, -43.96390151977539, -19.1471004486084], "text": "So dieser Form, naja und jetzt koennen wir das zusammenfassen und bekommen dann 1 durch K Fakultaet  und dann bleibt diese endliche Summe erstmal stehen, dann haben wir hier aber K ueber L  X hoch L Y hoch K minus L, ja und jetzt schauen sie nochmal auf diesen Ausdruck, der kommt uns  doch bekannt vor, das ist doch nichts anderes, nach dem binomischen Leersatz koennen wir das", "type": "Satz", "module_number": 31070}, {"node_index": 1616, "embedding": [-95.6307601928711, 156.64031982421875, 266.315673828125, 11.605337142944336, -115.1775894165039, -45.779380798339844], "text": " ", "type": "Satz", "module_number": 31070}, {"node_index": 1617, "embedding": [-17.54590606689453, 7.925873279571533, 64.26529693603516, -5.497020244598389, -39.9622802734375, -23.724138259887695], "text": "zusammenfassen und das liefert dann einfach X plus Y hoch K und wenn wir das jetzt zusammenfassen,  dann bekommen wir also K gleich 0 bis unendlich, dann haben wir hier also jetzt X plus Y hoch K  stehen, das ganze geteilt durch K Fakultaet und das ist doch nichts anderes als E hoch X plus Y,  ja so kann man das jetzt also ganz einfach auch verstehen, was dahinter steckt, das ist also", "type": "Satz", "module_number": 31070}, {"node_index": 1618, "embedding": [-95.68450164794922, 156.60116577148438, 266.5718688964844, 11.588409423828125, -115.2331314086914, -45.89628982543945], "text": " ", "type": "Satz", "module_number": 31070}, {"node_index": 1619, "embedding": [-6.132285118103027, 0.748062014579773, 24.69880485534668, -1.6083054542541504, -9.80553150177002, -9.243413925170898], "text": "hier einfach in dieser Schritt nichts anderes als das Koshie Produkt, das haben wir jetzt auch gesehen  und hier oben nochmal die Interpretation, dass wir wirklich dann sozusagen so aufsummieren  in dieser Form und dass wir damit auch wirklich alle Ausdruecke von diesen Produkten dann bekommen  und damit ja ergibt das natuerlich Sinn und wie gesagt, wir merken uns absolute Convergenz ist", "type": "Satz", "module_number": 31070}, {"node_index": 1620, "embedding": [-95.67681884765625, 156.57887268066406, 266.6288757324219, 11.58094596862793, -115.11551666259766, -45.913570404052734], "text": " ", "type": "Satz", "module_number": 31070}, {"node_index": 1621, "embedding": [-7.583747863769531, 3.2409772872924805, 29.313671112060547, -2.3856170177459717, -14.366068840026855, -10.329527854919434], "text": "wichtig bei dem Koshie Produkt, ansonsten koennen wir das nicht bilden, weil das sonst nicht wohl  definiert ist, beide Reihen muessen absolut Convergenz sein, dann wissen wir, das Koshie Produkt ist  auch absolut Convergent, ja gut das genuegt zu diesem Video und im naechsten Teil schauen wir uns  dann die Convergenzkritiellen fuer die Absolute Convergenten rein an.", "type": "Satz", "module_number": 31070}, {"node_index": 1622, "embedding": [-95.72147369384766, 156.75672912597656, 266.69720458984375, 11.579042434692383, -115.26116180419922, -45.877342224121094], "text": "  ", "type": "Satz", "module_number": 31070}, {"node_index": 1623, "embedding": [-5.589824199676514, -4.882325172424316, 27.48145294189453, 3.8304643630981445, -10.661738395690918, -10.034308433532715], "text": "Herzlich Willkommen zum dritten Teil der 41. Foliesung im Kurs Analysis 1 und  lineare Algebra fuer Ingenieurwissenschaften.", "type": "Satz", "module_number": 31070}, {"node_index": 1624, "embedding": [-7.9899420738220215, -8.669023513793945, 41.80650329589844, -3.408083438873291, -14.55141830444336, -18.87224006652832], "text": "So nachdem wir uns  jetzt im ersten Video mit der absoluten Konvergenz beschaeftigt hatten und jetzt  auch im letzten Video das Koshie Produkt von Rhein gesehen haben, das heisst wir  hatten gesehen, wenn wir also zwei absolut konvergente Rheien multiplizieren,  dann kommt da wieder eine absolut konvergente Reihe heraus und zwar eben", "type": "Satz", "module_number": 31070}, {"node_index": 1625, "embedding": [-95.64624786376953, 156.42201232910156, 266.6835021972656, 11.597089767456055, -114.9856185913086, -45.96914291381836], "text": " ", "type": "Satz", "module_number": 31070}, {"node_index": 1626, "embedding": [-11.745932579040527, -21.836408615112305, 64.35702514648438, -1.6361761093139648, -10.924236297607422, -32.42212677001953], "text": "gemaess der Vorschrift, die wir das jetzt hier noch auf der Folie sehen.", "type": "Satz", "module_number": 31070}, {"node_index": 1627, "embedding": [-8.411038398742676, -23.007661819458008, 52.90363693237305, -3.5168724060058594, -10.179007530212402, -28.286970138549805], "text": "Und jetzt in  diesem dritten Teil wollen wir uns noch mal mit Konvergenzkriterien beschaeftigen.  ", "type": "Satz", "module_number": 31070}, {"node_index": 1628, "embedding": [-4.024032115936279, -12.12302017211914, 25.861440658569336, -1.6042630672454834, -4.379284381866455, -13.834036827087402], "text": "Wir hatten ja am Ende der letzten Foliesung auch schon einige kennengelernt und  jetzt aber Konvergenzkriterium fuer absolut konvergente Rheien.", "type": "Satz", "module_number": 31070}, {"node_index": 1629, "embedding": [-3.4935672283172607, -10.203678131103516, 22.555286407470703, -1.695192813873291, -3.7217540740966797, -11.853717803955078], "text": "Und dann  beginnen wir einfach mal mit dem Majorantenkriterium und den Minorantenkriterium.  ", "type": "Satz", "module_number": 31070}, {"node_index": 1630, "embedding": [-9.523481369018555, -27.773771286010742, 57.737144470214844, -0.32185930013656616, -7.276514053344727, -31.484121322631836], "text": "Und das schauen wir uns direkt auf der naechsten Folie an.", "type": "Satz", "module_number": 31070}, {"node_index": 1631, "embedding": [-15.16524600982666, -43.16789627075195, 93.77899169921875, -3.6040048599243164, -11.625484466552734, -51.478519439697266], "text": "Das sehen wir also hier.", "type": "Satz", "module_number": 31070}, {"node_index": 1632, "embedding": [-95.64379119873047, 156.1553497314453, 266.7433166503906, 11.677730560302734, -114.73298645019531, -46.083900451660156], "text": " ", "type": "Satz", "module_number": 31070}, {"node_index": 1633, "embedding": [-4.9984517097473145, -0.997668981552124, 20.802053451538086, -0.7302486300468445, -7.062710762023926, -8.12687873840332], "text": "Majorantenkriterium, wie der Name es schon sagt, hier wollen wir also auf  Konvergenzschluss folgern und die Aussage ist wie folgt, wir nehmen an, wir haben  eine konvergente Reihe gegeben ueber Glieder BK und wir haben die Relation,  dass der Betrag der A-Kas ist kleiner gleich", "type": "Satz", "module_number": 31070}, {"node_index": 1634, "embedding": [-4.4136576652526855, -2.2577602863311768, 18.907629013061523, 1.408928394317627, -7.306078910827637, -7.479081153869629], "text": "BK fuer", "type": "Satz", "module_number": 31070}, {"node_index": 1635, "embedding": [-9.756241798400879, -0.6749305725097656, 38.890560150146484, -0.6121291518211365, -18.321685791015625, -15.356243133544922], "text": "alle K aus N, dann ist die  Aussage ganz einfach, dann wissen wir, dass diese Reihe ueber die A-Kas absolut", "type": "Satz", "module_number": 31070}, {"node_index": 1636, "embedding": [-95.83190155029297, 156.70120239257812, 267.0495300292969, 11.72773551940918, -115.30659484863281, -46.01399612426758], "text": " ", "type": "Satz", "module_number": 31070}, {"node_index": 1637, "embedding": [-10.430434226989746, 10.32182502746582, 33.86745071411133, 1.040112018585205, -12.432514190673828, -8.855559349060059], "text": "konvergiert.", "type": "Satz", "module_number": 31070}, {"node_index": 1638, "embedding": [-6.69573450088501, 0.7883859872817993, 26.167072296142578, -1.1705107688903809, -13.999122619628906, -9.896587371826172], "text": "Und diese Aussage ist hier natuerlich, diese Voraussetzung ist  etwas stark, hier steht ja fuer alle K aus N und deswegen hier nochmal die  Abschwaechung ist genuegt, dass diese Ungleichung ab irgendeinem Startwert K0  gilt.", "type": "Satz", "module_number": 31070}, {"node_index": 1639, "embedding": [-7.954288959503174, -7.450373649597168, 38.2609977722168, -2.743959903717041, -14.572362899780273, -17.54789161682129], "text": "Das heisst also hier koennen wir auch fordern, dass das ganze gilt fuer alle  K, groesser gleich K0 und K0 ist irgendein Startwert aus den natuerlichen Zahlen kann  auch sehr gross sein, aber wir wissen ja, was am Anfang passiert ist fuer die  Konvergenz nicht wichtig, sondern nur was zum Unendlichen passiert.", "type": "Satz", "module_number": 31070}, {"node_index": 1640, "embedding": [-95.75142669677734, 156.705810546875, 266.7850341796875, 11.638128280639648, -115.14754486083984, -45.92348861694336], "text": " ", "type": "Satz", "module_number": 31070}, {"node_index": 1641, "embedding": [-8.456413269042969, -11.828241348266602, 43.64079284667969, -2.2248687744140625, -8.870662689208984, -21.02040672302246], "text": "Ja und wenn wir diesen Satz jetzt beweisen, denn geht das eigentlich recht  einfach, das koennen wir mal kurz skizzieren.  ", "type": "Satz", "module_number": 31070}, {"node_index": 1642, "embedding": [-8.685890197753906, -18.59132194519043, 49.67508316040039, -4.281759262084961, -8.840847969055176, -26.053354263305664], "text": "Am Endeffekt steht schon alles da.", "type": "Satz", "module_number": 31070}, {"node_index": 1643, "embedding": [-95.77684783935547, 156.34742736816406, 267.1720275878906, 11.599527359008789, -114.94769287109375, -46.19211196899414], "text": " ", "type": "Satz", "module_number": 31070}, {"node_index": 1644, "embedding": [-11.232490539550781, -3.0006473064422607, 47.10604476928711, -2.385931968688965, -20.964481353759766, -19.649518966674805], "text": "Nach Voraussetzung wissen wir, dass ja A-K kleiner gleich BK ist,  weil das gilt, wissen wir natuerlich auch, wenn wir jetzt mal die Entepazial Summe  betrachten und zwar K gleich 0 bis N von Betrag A-K, dann koennen wir das natuerlich  abschaetzen nach oben durch die Entepazialsumme der B-Kas, das gilt ja diese  Relation und also wir nehmen jetzt hier mal den Fall an, das gilt fuer alle K,", "type": "Satz", "module_number": 31070}, {"node_index": 1645, "embedding": [-95.82491302490234, 156.74510192871094, 267.05584716796875, 11.631561279296875, -115.20452117919922, -46.015350341796875], "text": " ", "type": "Satz", "module_number": 31070}, {"node_index": 1646, "embedding": [-23.063854217529297, -13.827679634094238, 104.53792572021484, -8.347453117370605, -44.87403106689453, -47.072410583496094], "text": "sonst muessten wir das jetzt noch unterteilen ab einem K0, das ist jetzt  aber hier nicht weiter wichtig und das Ganze koennen wir natuerlich nach oben abschaetzen,  indem wir hier jetzt die Reihe nehmen, K gleich 0 bis unendlich BK,  aber die Konvergiert hat also einen endlichen Wert und den kann ich jetzt hier mal M nennen,", "type": "Satz", "module_number": 31070}, {"node_index": 1647, "embedding": [-95.82492065429688, 156.76815795898438, 267.0228576660156, 11.650779724121094, -115.1846694946289, -45.988922119140625], "text": " ", "type": "Satz", "module_number": 31070}, {"node_index": 1648, "embedding": [-9.629865646362305, -20.915538787841797, 56.70872116088867, -3.8596811294555664, -11.492974281311035, -29.250688552856445], "text": "und das wissen wir eben, weil die Reihe Konvergiert ist.", "type": "Satz", "module_number": 31070}, {"node_index": 1649, "embedding": [-4.7911858558654785, -4.4253387451171875, 24.118534088134766, -2.958036422729492, -8.417600631713867, -11.063617706298828], "text": "Und dann wissen wir doch,  aber das heisst also schon mal, dass die Entepazialsumme, die ist jetzt beschraenkt,  das heisst ja eben die Folge der Partialsumme sind dann durch M beschraenkt und sie sind natuerlich  monoton wachsend, weil wir hier den Betrag stehen haben und dann wissen wir natuerlich,  dass sie konvergieren.", "type": "Satz", "module_number": 31070}, {"node_index": 1650, "embedding": [-7.773768424987793, -12.05105972290039, 42.301937103271484, -4.280785083770752, -10.659838676452637, -20.847639083862305], "text": "Das heisst also hier raus koennen wir dann folgern, ja folgern ist  gerade unguenstiges Wort, wenn wir von Folgen reden, also die Folge, die Folge der Partialsummen,  jetzt schreibe ich das jetzt hier nochmal auf,", "type": "Satz", "module_number": 31070}, {"node_index": 1651, "embedding": [-10.163381576538086, -18.146413803100586, 55.04011154174805, -3.962210178375244, -14.6575927734375, -28.007047653198242], "text": "K gleich 0 bis N, A, K, Betrag sind oder  das ist ja, Einzahl ist dann durch M beschraenkt und monoton wachsend.", "type": "Satz", "module_number": 31070}, {"node_index": 1652, "embedding": [-16.229787826538086, -10.577069282531738, 75.60743713378906, -7.216520309448242, -32.257659912109375, -34.30440902709961], "text": "Da wir wissen, dass die,  dass wir hier den Betrag haben und das ist natuerlich dann immer groesser gleich 0. Also  konvergent und das heisst ja dann somit konvergiert dann die Reihe ueber die A, K, Betrag.", "type": "Satz", "module_number": 31070}, {"node_index": 1653, "embedding": [-13.92505931854248, -14.604693412780762, 67.53621673583984, -5.113349914550781, -24.391143798828125, -32.0677604675293], "text": "Das bedeutet  dann eben, dass die Reihe K gleich 0 bis N endlich ueber die A, K, ist absolut konvergent ist.", "type": "Satz", "module_number": 31070}, {"node_index": 1654, "embedding": [-95.84033203125, 156.73878479003906, 267.1190490722656, 11.651861190795898, -115.15840911865234, -46.03451919555664], "text": "  ", "type": "Satz", "module_number": 31070}, {"node_index": 1655, "embedding": [-4.213300704956055, 0.09474001824855804, 17.507410049438477, -0.3601272702217102, -4.63762092590332, -6.433544635772705], "text": "Ja, ich denke der Beweis ist relativ einfach.", "type": "Satz", "module_number": 31070}, {"node_index": 1656, "embedding": [-4.291184425354004, -12.535042762756348, 28.510114669799805, -1.3014159202575684, -3.596273899078369, -15.3035249710083], "text": "Sie koennen sich das auch nochmal im Skript anschauen.", "type": "Satz", "module_number": 31070}, {"node_index": 1657, "embedding": [-11.859318733215332, -12.296737670898438, 58.88474655151367, -4.6949872970581055, -21.498241424560547, -27.760961532592773], "text": " Das heisst also, wann immer wir so etwas haben, dass wir hier eine konvergente Reihe haben und die  A, K sind also dann betragsmaessig kleiner gleich", "type": "Satz", "module_number": 31070}, {"node_index": 1658, "embedding": [-11.053208351135254, -21.99892807006836, 63.15595626831055, -3.625401496887207, -15.136075019836426, -32.084049224853516], "text": "B, K, dann wissen wir, dass diese Reihe automatisch  absolut konvergent ist.", "type": "Satz", "module_number": 31070}, {"node_index": 1659, "embedding": [-10.390242576599121, -27.6806640625, 65.61792755126953, -4.839674949645996, -12.273456573486328, -35.06418228149414], "text": "So, das ist jetzt also ein Kriterium, um die absolute Konvergenz nachzuweisen  und voellig analog haben wir natuerlich jetzt auch ein Kriterium, um zu Schluss folgern, dass die Reihe  Divergent ist, genauer gesagt bestimmt Divergent und das sehen wir hier im Minoranden Kriterium  und hier ist die Aussage genau umgekehrt.", "type": "Satz", "module_number": 31070}, {"node_index": 1660, "embedding": [-6.19987154006958, -16.458410263061523, 38.71150207519531, -2.5670268535614014, -7.814743518829346, -20.62544822692871], "text": "Hier haben wir eine Reihe ueber die B, Ks, die ist bestimmt  Divergent, also sie erinnern sich nochmal an bestimmt Divergent.", "type": "Satz", "module_number": 31070}, {"node_index": 1661, "embedding": [-6.939939975738525, -1.5343676805496216, 29.190645217895508, -2.6176865100860596, -14.18098258972168, -12.187605857849121], "text": "Da ging es ja darum auch bei den  Folgen ja, also das sozusagen bestimmt Divergent, dass das eben dann gegen unendlich geht und wenn  ich jetzt zum Beispiel eine Folge minus 1 hoch K nehme, die ist ja auch Divergent, aber die geht nicht  gegen minus oder plus unendlich, deswegen hier bestimmt Divergent und die B, Ks, die sind ja auch", "type": "Satz", "module_number": 31070}, {"node_index": 1662, "embedding": [-96.01961517333984, 157.0766143798828, 267.5868835449219, 11.604921340942383, -115.62470245361328, -46.12031173706055], "text": " ", "type": "Satz", "module_number": 31070}, {"node_index": 1663, "embedding": [-8.093701362609863, -1.4241608381271362, 32.73221969604492, -0.2455849051475525, -12.418825149536133, -12.93004322052002], "text": "positiv gewaehlt, das heisst also bestimmt", "type": "Satz", "module_number": 31070}, {"node_index": 1664, "embedding": [-8.784103393554688, 0.33795928955078125, 34.72246170043945, -2.0475754737854004, -18.290109634399414, -13.76199722290039], "text": "Divergent heisst hier, dass das sozusagen unserer  Schreibweise aus dem Kapitel ueber die Folgen eben heisst, dass hier also der Wert unendlich ist und  wir haben dann die Relation, dass die A, Ks nach unten beschraenkt sind durch die B, Ks, dann wissen  wir, dass diese Folge hier, also diese Reihe im Endeffekt dann auch bestimmt Divergent ist ja und", "type": "Satz", "module_number": 31070}, {"node_index": 1665, "embedding": [-96.05962371826172, 157.08811950683594, 267.7263488769531, 11.639793395996094, -115.67655181884766, -46.16933059692383], "text": " ", "type": "Satz", "module_number": 31070}, {"node_index": 1666, "embedding": [-7.891926288604736, 0.24122856557369232, 32.95615005493164, -3.2157981395721436, -15.548419952392578, -13.040048599243164], "text": "ja, diesem Beweis den koennen wir jetzt hier weglassen, das folgt analog, dass wir eben genau  so eine Ungleichung hier aufschreiben koennen und hier haben wir dann die B, Ks stehen und hier die A,  Ks und dann wissen wir dadurch, dass sozusagen diese Folge, also diese Entepazialsumme ja und dann", "type": "Satz", "module_number": 31070}, {"node_index": 1667, "embedding": [-95.79254150390625, 156.48590087890625, 267.1383972167969, 11.668508529663086, -115.1410903930664, -46.1285285949707], "text": "die", "type": "Satz", "module_number": 31070}, {"node_index": 1668, "embedding": [-10.423003196716309, -1.7365516424179077, 44.304988861083984, -2.6664657592773438, -20.066970825195312, -18.130779266357422], "text": " Folge dazu, die ist dann natuerlich unbeschraenkt und dann ist natuerlich auch dann diese Reihe auf der  rechten Seite, diese Folge dann ebenfalls bestimmt Divergent.", "type": "Satz", "module_number": 31070}, {"node_index": 1669, "embedding": [-7.808434009552002, 4.996471881866455, 27.67943000793457, -2.624680757522583, -18.957469940185547, -9.529051780700684], "text": "Schauen wir uns zwei Beispiele dazu  an, also das sind jetzt zwei Kriterien, wir werden auch gleich sehen, das sind jetzt nicht die besten  Kriterien, die man finden kann und das steht auch gleich nochmal auf der naechsten Folie und zwar  das Problem an der Sache ist ja, dass wir immer genau diese Reihe ueber die B, Ks, die muessen wir", "type": "Satz", "module_number": 31070}, {"node_index": 1670, "embedding": [-96.17770385742188, 157.4691619873047, 267.9162292480469, 11.6016845703125, -115.97876739501953, -46.121456146240234], "text": " ", "type": "Satz", "module_number": 31070}, {"node_index": 1671, "embedding": [-8.562777519226074, -4.410351276397705, 37.112083435058594, -1.261383056640625, -13.221363067626953, -15.703954696655273], "text": "erst mal kennen, ja das macht das Ganze etwas kompliziert.", "type": "Satz", "module_number": 31070}, {"node_index": 1672, "embedding": [-14.076751708984375, -13.288872718811035, 67.61190795898438, -6.442295551300049, -24.794357299804688, -31.871335983276367], "text": "Also Beispiele, schauen wir uns ein  Beispiel an und zwar betrachten wir jetzt hier die Reihe, K gleich 0 bis und endlich und dann 1  durch 2, K.", "type": "Satz", "module_number": 31070}, {"node_index": 1673, "embedding": [-12.554393768310547, -18.249324798583984, 67.36618041992188, -6.3990888595581055, -21.05023193359375, -33.159427642822266], "text": "Und was ist mit dieser Reihe, ja diese Reihe, das ist ja nichts anderes als die  geometrische Reihe, das sehen sie ja sofort, die haben ja auch schon exakt das Beispiel gesehen  und hier wissen wir natuerlich, wenn wir hier einsetzen, kommt dieser Wert heraus und das ist  dann 2, dies konvergent.", "type": "Satz", "module_number": 31070}, {"node_index": 1674, "embedding": [-15.730522155761719, -6.70781946182251, 70.12447357177734, -7.2775139808654785, -32.2055778503418, -30.83415412902832], "text": "Ja und das hatten wir in Folie 47 gesehen, so und dann betrachten wir mal  eine andere Reihe, so wie folgt, ich nehme jetzt hier mal 2 hoch, K plus 1, wenn ich das mal aufschreibe  dann steht hier da also ein halb plus ein drittel, dann ein fuenfte und dann geht das ja potenziert  sich das ja, dann habe ich 4, K gleich 1, 2, 4, 3, habe ich dann 8, habe ich dann 1, 9 und so weiter.", "type": "Satz", "module_number": 31070}, {"node_index": 1675, "embedding": [-96.01303100585938, 157.16720581054688, 267.4909362792969, 11.640905380249023, -115.48217010498047, -46.0350227355957], "text": "  ", "type": "Satz", "module_number": 31070}, {"node_index": 1676, "embedding": [-11.964102745056152, -20.118837356567383, 65.43663024902344, -3.582942485809326, -15.722206115722656, -32.26845169067383], "text": "So und diese Reihe ist dann aber absolut konvergent,  und zwar nach dem Majorantenkriterium.", "type": "Satz", "module_number": 31070}, {"node_index": 1677, "embedding": [-95.96731567382812, 156.87669372558594, 267.5516357421875, 11.68443489074707, -115.2098159790039, -46.1396484375], "text": " ", "type": "Satz", "module_number": 31070}, {"node_index": 1678, "embedding": [-4.044037342071533, -8.776084899902344, 24.846235275268555, -0.9604756236076355, -2.5825440883636475, -12.115653991699219], "text": "Ja wie kann man das jetzt hier einfach anwenden?", "type": "Satz", "module_number": 31070}, {"node_index": 1679, "embedding": [-16.114322662353516, -11.944067001342773, 74.87785339355469, -6.695763111114502, -29.76911735534668, -34.407413482666016], "text": "Naja wir nutzen jetzt einfach das jetzt hier  als unsere Reihe ueber die BKs, das ist jetzt die Reihe ueber die AKs, den Betrag koennen wir hier  sowieso weglassen und dann wissen wir natuerlich 2, K plus 1 ist ja offensichtlich echt groesser  als 2, K, aber das liefert ja dann genau 1 durch 2, K plus 1 und das kann ich natuerlich hier", "type": "Satz", "module_number": 31070}, {"node_index": 1680, "embedding": [-96.01805877685547, 157.06634521484375, 267.5854797363281, 11.664121627807617, -115.35140228271484, -46.097652435302734], "text": " ", "type": "Satz", "module_number": 31070}, {"node_index": 1681, "embedding": [-8.78619384765625, -6.736759662628174, 40.33245849609375, -2.685659885406494, -15.541109085083008, -18.253698348999023], "text": "auch schreiben als indem ich den Betrag dazu schreibe, obwohl es natuerlich klar ist, dass es nicht  negativ ist und das ist dann echt kleiner 1 durch 2, K und zwar hier fuer alle K aus N,  ja jetzt kann man also relativ leicht zeigen.", "type": "Satz", "module_number": 31070}, {"node_index": 1682, "embedding": [-13.198661804199219, -24.971893310546875, 75.44136047363281, -5.864882946014404, -19.474647521972656, -38.26555252075195], "text": "Das heisst also somit bekommen wir automatisch,  dass diese Reihe hier konvergiert, absolut konvergiert, aber dadurch, dass die Betraege  eigentlich auch, also quasi hier ist ja sowieso alles groesser gleich null, ist es jetzt hier nicht  ganz so wichtig, aber wir bekommen automatisch diese Konvergenz.", "type": "Satz", "module_number": 31070}, {"node_index": 1683, "embedding": [-16.251123428344727, -14.79365348815918, 77.4637451171875, -7.171404838562012, -29.724105834960938, -36.43084716796875], "text": "So und wenn wir das mal aehnlich  betrachten und zwar nehmen wir mal eine Reihe, ich jetzt zum Beispiel K gleich 1 bis unendlich  nehme und sage 1 durch ja 2 hoch K minus 1, ja was mache ich denn dann?", "type": "Satz", "module_number": 31070}, {"node_index": 1684, "embedding": [-5.466599941253662, -9.710075378417969, 29.472742080688477, -2.846489906311035, -7.547890663146973, -14.909147262573242], "text": "Dann klappt der Trick von  oben nicht mehr ganz so mit der geometrischen Reihe, aber wir koennen das Ganze natuerlich durch", "type": "Satz", "module_number": 31070}, {"node_index": 1685, "embedding": [-96.04005432128906, 156.89569091796875, 267.8415832519531, 11.644735336303711, -115.27821350097656, -46.25189971923828], "text": " ", "type": "Satz", "module_number": 31070}, {"node_index": 1686, "embedding": [-3.5308496952056885, 1.3020806312561035, 12.172216415405273, 1.4509600400924683, -4.499316215515137, -3.3482229709625244], "text": "eine Indexverschiebung betrachten.", "type": "Satz", "module_number": 31070}, {"node_index": 1687, "embedding": [-4.606238842010498, -20.112808227539062, 32.77067565917969, 1.1225965023040771, -0.4310484528541565, -18.928789138793945], "text": "Was koennen wir tun?", "type": "Satz", "module_number": 31070}, {"node_index": 1688, "embedding": [-19.182071685791016, -15.269466400146484, 89.41532135009766, -7.144688606262207, -36.204288482666016, -41.35434341430664], "text": "Wir betrachten mal K gleich 1 bis unendlich,  so dann schreiben wir die Reihe nochmal auf und jetzt kann ich ja einfach sagen, ich nehme zum  Beispiel hier als Indexverschiebung L ist gleich K minus 1, so wenn ich das mache, dann bekomme ich  hier also L gleich null bis unendlich, 1 durch 2 hoch L plus 1 minus 1 und wenn ich das jetzt mal  wieder mit K schreibe, also ich ersetze einfach wieder L durch K, dann haben wir hier also 1", "type": "Satz", "module_number": 31070}, {"node_index": 1689, "embedding": [-96.06220245361328, 157.2405242919922, 267.6238708496094, 11.691303253173828, -115.43421936035156, -46.049007415771484], "text": " ", "type": "Satz", "module_number": 31070}, {"node_index": 1690, "embedding": [-19.965213775634766, -23.676265716552734, 99.36839294433594, -6.813851356506348, -37.592689514160156, -47.93147277832031], "text": "durch 2 hoch K plus 1 und dann steht jetzt hier minus 1 da, so was koennen wir denn jetzt sagen?", "type": "Satz", "module_number": 31070}, {"node_index": 1691, "embedding": [-2.8467471599578857, -8.031400680541992, 18.135915756225586, -1.260678768157959, -2.2987747192382812, -9.680341720581055], "text": "Hatten  das irgendwas gebracht?", "type": "Satz", "module_number": 31070}, {"node_index": 1692, "embedding": [-5.0364990234375, -11.080097198486328, 29.43611717224121, -2.2816503047943115, -5.8373589515686035, -15.329462051391602], "text": "Naja jetzt habe ich hier also 2 K plus 1 minus 1, das ist dann aber tatsaechlich  groesser gleich, 2 K, kann man ja mal einsetzen kurz als Test, ich meine per Induktion wuerde man das", "type": "Satz", "module_number": 31070}, {"node_index": 1693, "embedding": [-96.08384704589844, 156.91793823242188, 267.97760009765625, 11.701627731323242, -115.30091094970703, -46.2897834777832], "text": " ", "type": "Satz", "module_number": 31070}, {"node_index": 1694, "embedding": [-15.011444091796875, -26.251575469970703, 81.33619689941406, -4.923398017883301, -25.77695083618164, -41.19124984741211], "text": "zeigen, wenn man das jetzt nicht sieht, wenn ich jetzt hier die Null einsetze an beiden Stellen,  dann bekomme ich hier 2 minus 1 ist 1, hier kommt 1, wenn ich 1 einsetze, dann bin ich hier schon bei 4  und 4 minus 1, also 3, das scheint also zu stimmen, das ist jetzt natuerlich noch kein richtiger Beweis, aber", "type": "Satz", "module_number": 31070}, {"node_index": 1695, "embedding": [-96.0608901977539, 157.18141174316406, 267.6698913574219, 11.710714340209961, -115.34053802490234, -46.07841491699219], "text": " ", "type": "Satz", "module_number": 31070}, {"node_index": 1696, "embedding": [-27.061412811279297, -3.296525716781616, 114.05615997314453, -10.882376670837402, -59.2415657043457, -47.90520095825195], "text": "ich denke man sieht das und daraus folgt dann aber, dass eben 1 durch 2 hoch K plus 1 minus 1,  dass das eben kleiner gleich 1 durch 2 hoch K ist und das gilt dann fuer alle K aus N, so das  bedeutet dann also jetzt koennen wir wieder, jetzt wissen wir wieder, dass diese Reihe hier  konvergiert die geometrische Reihe und haben jetzt eben genau diese Abschaetzung und das bedeutet dann,", "type": "Satz", "module_number": 31070}, {"node_index": 1697, "embedding": [-96.17133331298828, 157.5110321044922, 267.8674621582031, 11.682943344116211, -115.66336822509766, -46.05431365966797], "text": " ", "type": "Satz", "module_number": 31070}, {"node_index": 1698, "embedding": [-4.1979780197143555, -1.7843512296676636, 18.87534523010254, -0.8882059454917908, -5.525997161865234, -7.5696306228637695], "text": "dass automatisch auch diese Reihe und zwar in der Ausgangsschreibweise ebenfalls absolut konvergiert  und das dann wieder nach dem Majoranten Kriterium.  ", "type": "Satz", "module_number": 31070}, {"node_index": 1699, "embedding": [-95.28874206542969, 147.74415588378906, 272.0301208496094, 11.03908920288086, -113.6264877319336, -51.21178436279297], "text": "Gut.", "type": "Satz", "module_number": 31070}, {"node_index": 1700, "embedding": [-96.20919799804688, 157.74874877929688, 267.8283386230469, 11.78382682800293, -115.46768951416016, -45.927852630615234], "text": " ", "type": "Satz", "module_number": 31070}, {"node_index": 1701, "embedding": [-7.7797322273254395, -13.516378402709961, 41.180320739746094, -1.3263437747955322, -7.762627124786377, -20.47373390197754], "text": "Okay, ich denke das genuegt jetzt erstmal dazu, das ist halt so ein Kriterium", "type": "Satz", "module_number": 31070}, {"node_index": 1702, "embedding": [-5.142810821533203, -4.857809543609619, 23.47286605834961, -0.9960014224052429, -8.97148323059082, -10.601353645324707], "text": "man braucht immer  erstmal wie gesagt konvergente Reihen um das anwenden zu koennen, deswegen ist es erst mal  nicht ganz praktisch, praktischer wird das Quotientenkriterium sein und das wollen wir uns  erst mal auf der E-Kreide ueberlegen.", "type": "Satz", "module_number": 31070}, {"node_index": 1703, "embedding": [-16.354068756103516, -34.23838806152344, 90.78268432617188, -3.546489715576172, -16.348369598388672, -47.35606384277344], "text": "Also wir halten nochmal fest", "type": "Satz", "module_number": 31070}, {"node_index": 1704, "embedding": [-4.490169525146484, -12.316463470458984, 29.850444793701172, -2.375661849975586, -6.200821399688721, -15.434009552001953], "text": "Majorantenkriterium liefert  absolute Konvergenz, Minorantenkriterium liefert dann die bestimmte Divergenz.", "type": "Satz", "module_number": 31070}, {"node_index": 1705, "embedding": [-3.943856716156006, -14.720645904541016, 28.969125747680664, -1.6071884632110596, -4.528224945068359, -15.84157943725586], "text": "So und jetzt zum  Herleitung des Quotientenkriteriums.", "type": "Satz", "module_number": 31070}, {"node_index": 1706, "embedding": [-6.6470255851745605, -4.401920318603516, 31.906885147094727, -2.706962823867798, -14.26723861694336, -14.085890769958496], "text": "Also wir nehmen an, wir haben eine Reihe gegeben mit Gliedern  am AK und jetzt fangen wir mal wie folgt an, ohne dass wir das Kriterium jetzt kennen, nehmen wir  mal an, dass der Limes und zwar der Limes von AK plus 1 durch AK-Betrag, das sind sozusagen jetzt  aufeinander folgende Glieder der Reihe, dass diese existiert.", "type": "Satz", "module_number": 31070}, {"node_index": 1707, "embedding": [-8.606246948242188, 4.93064546585083, 31.62123680114746, -3.2933363914489746, -22.028274536132812, -11.206489562988281], "text": "So und dann ueberlegen wir uns mal was  passiert dann, wenn dieser existiert und im ersten Fall nehmen wir mal an, ich kopiere das hier mal,  hier nehmen wir mal an im ersten Fall, dass dieser Ausdruck kleiner eins ist.", "type": "Satz", "module_number": 31070}, {"node_index": 1708, "embedding": [-11.963260650634766, 14.92628288269043, 36.700523376464844, -3.8449785709381104, -33.25538635253906, -10.17584228515625], "text": "Wenn dieser Ausdruck kleiner  eins ist, dann finden wir also hier zwischen diesem Ausdruck und der eins eine Zahl, die nennen wir mal  Q, also das bedeutet dann gibt es nQ kleiner eins und nK0 aus den natuerlichen Zahlen mit der  Eigenschaft, dass also AK plus 1 durch AK betragsmaessig kleiner, echt kleiner Q ist und das ist echt", "type": "Satz", "module_number": 31070}, {"node_index": 1709, "embedding": [-96.56704711914062, 158.24795532226562, 268.900634765625, 11.618356704711914, -116.74738311767578, -46.23936462402344], "text": " ", "type": "Satz", "module_number": 31070}, {"node_index": 1710, "embedding": [-6.7502617835998535, -4.845033645629883, 30.421667098999023, -1.5712635517120361, -9.718873977661133, -13.42486572265625], "text": "kleiner eins und das gilt dann ab diesem Startwert K0, also fuer alle K groesser gleich K0.", "type": "Satz", "module_number": 31070}, {"node_index": 1711, "embedding": [-12.33076286315918, -22.536556243896484, 67.14532470703125, -4.510939598083496, -18.162208557128906, -34.33610916137695], "text": "So jetzt  betrachten wir mal nur den Fall, dass K0 gleich 0 ist, damit es etwas einfacher ist.", "type": "Satz", "module_number": 31070}, {"node_index": 1712, "embedding": [-4.385528564453125, -6.566548824310303, 22.653955459594727, -1.6008918285369873, -7.447513580322266, -11.005090713500977], "text": "Der Fall,  dass das K0 groesser 0 ist, geht dann analog, darauf verzichten wir in dieser Stelle, ist dann analog und  so koennen wir also sagen, dass das Ganze eben, es gilt fuer alle K.", "type": "Satz", "module_number": 31070}, {"node_index": 1713, "embedding": [-7.989041328430176, -7.92363977432251, 38.7847785949707, -2.723189353942871, -11.398763656616211, -18.06153106689453], "text": "So wenn wir das jetzt haben,  also diese Ungleichung hier, was bekommen wir da?", "type": "Satz", "module_number": 31070}, {"node_index": 1714, "embedding": [-16.496570587158203, -18.461833953857422, 81.67518615722656, -7.200040817260742, -29.487346649169922, -39.28496170043945], "text": "Dann haben wir hier also AK Betrag, ich stelle mal um,  genau das kann ich dann abschaetzen, AK Betrag ist kleiner Q mal AK minus 1 und das geht dann so weiter,  also ich habe jetzt quasi das Ganze hier, kann ich auch K schreiben und hier schreibe ich K minus 1", "type": "Satz", "module_number": 31070}, {"node_index": 1715, "embedding": [-96.22311401367188, 157.44155883789062, 268.1289978027344, 11.709287643432617, -115.56653594970703, -46.16859436035156], "text": " ", "type": "Satz", "module_number": 31070}, {"node_index": 1716, "embedding": [-6.941353797912598, -4.398778438568115, 31.202327728271484, -2.1778206825256348, -11.275248527526855, -13.710064888000488], "text": "und starte fuer alle K groesser gleich 1, das heisst also ich kann das abschaetzen durch dieses und dann  mache ich das so weiter und schaetze wieder dieses AK minus 1 ab, genau durch die gleiche Abschaetzung  und jetzt eben AK minus 2.", "type": "Satz", "module_number": 31070}, {"node_index": 1717, "embedding": [-6.471012592315674, 4.0729660987854, 23.320695877075195, -2.447488307952881, -16.690818786621094, -7.961221694946289], "text": "So und wenn wir das so weiter machen, machen wir noch einen Schritt,  dann mache ich das nochmal, so und am Ende habe ich stehen Q hoch K mal A0, ja ich habe das immer  wieder angewandt, dieses, was hier steht, hier habe ich jetzt also Q hoch 3 und dann habe ich irgendwann  Q hoch K und A0 stehen und das nenne ich jetzt mal BK, so dann gilt doch aber,", "type": "Satz", "module_number": 31070}, {"node_index": 1718, "embedding": [-96.39595794677734, 157.96189880371094, 268.4808044433594, 11.648935317993164, -116.15953826904297, -46.1449089050293], "text": " ", "type": "Satz", "module_number": 31070}, {"node_index": 1719, "embedding": [-21.37894630432129, -12.703397750854492, 96.685791015625, -8.63940143585205, -40.87922668457031, -43.656986236572266], "text": "ja was gilt dann, wenn wir uns mal die Reihe ueber die BKs anschauen,  so jetzt setzen wir mal diesen Term dafuer ein, das ist K gleich 0 bis zu endlich, Q hoch K A0,  das A0 kann ich davor schreiben und dann habe ich hier also dann stehen K gleich 0 bis zu  endlich und jetzt sehe ich ja, das ist doch nichts anderes als eine geometrische Reihe mit einem Q", "type": "Satz", "module_number": 31070}, {"node_index": 1720, "embedding": [-96.30517578125, 157.69215393066406, 268.2606506347656, 11.711380004882812, -115.76013946533203, -46.136539459228516], "text": " ", "type": "Satz", "module_number": 31070}, {"node_index": 1721, "embedding": [-16.072526931762695, 4.7214460372924805, 61.6617431640625, -5.6213812828063965, -36.93712615966797, -23.600915908813477], "text": "kleiner 1, ja das passt wunderbar, das heisst also hier nehmen wir mal als Notiz geometrische Reihe  mit Q aus 0,1 so und dann kennen wir den Wert schon, also A0 Betrag bleibt stehen und dann haben wir  1 durch 1 minus Q, naja und jetzt haben wir aber gesehen, die AK sind betragsmaessig sogar echt  kleiner BK, also konvergiert dann die Reihe, die Reihe ueber die AKs absolut nach dem Majoranten", "type": "Satz", "module_number": 31070}, {"node_index": 1722, "embedding": [-8.316935539245605, 4.239418029785156, 29.691843032836914, -2.939507007598877, -19.408485412597656, -10.550662994384766], "text": " Kriterium, das heisst also hier die Reihe K gleich 0 bis zu endlich, AK und zwar absolut,  gut das war jetzt der erste Fall und deswegen auch der Name, wir werden es ja gleich sehen,  Quotienten Kriterien, wir schauen uns also Quotienten an und das heisst die Idee ist,  dass wir uns eben diesen Grenzwert jetzt hier anschauen und jetzt haben wir noch einen zweiten", "type": "Satz", "module_number": 31070}, {"node_index": 1723, "embedding": [-96.41559600830078, 157.97239685058594, 268.48150634765625, 11.693510055541992, -116.0796127319336, -46.13382339477539], "text": " ", "type": "Satz", "module_number": 31070}, {"node_index": 1724, "embedding": [-5.862618923187256, 6.432684421539307, 17.933176040649414, -0.8580289483070374, -12.134356498718262, -4.726521015167236], "text": "Fall, im ersten Fall haben wir jetzt gesehen, dass sozusagen dieser Ausdruck kleiner 1 ist und  im zweiten nehmen wir dann mal an, das sei also der Limes von diesem Ausdruck, AK plus 1 durch AK,  das wir jetzt mal annehmen, dass das ganze groesser 1 ist, was wissen wir dann, ja wenn das groesser 1 ist,  dann wissen wir auch, dass dieser Ausdruck hier, dass dieser Ausdruck groesser 1 ist und auch hier", "type": "Satz", "module_number": 31070}, {"node_index": 1725, "embedding": [-96.42443084716797, 158.06109619140625, 268.4602966308594, 11.711690902709961, -116.05077362060547, -46.0952262878418], "text": " ", "type": "Satz", "module_number": 31070}, {"node_index": 1726, "embedding": [-12.655158996582031, -3.2850189208984375, 54.355167388916016, -4.711925506591797, -25.1925048828125, -23.044408798217773], "text": "wieder fuer alle K, groesser gleich K1 und das ist dann wieder ein Startwert fuer ein K1 aus N,  naja und dann wissen wir aber, wenn wir uns das nochmal naeher anschauen, wenn wir das hier mal auf  die andere Seite bringen, alles betragsmaessig, der Rationzeichen aendert sich dann nicht, dann  bekommen wir hier, dass also AK plus Betrag ist echt groesser AK und zwar fuer alle K, groesser", "type": "Satz", "module_number": 31070}, {"node_index": 1727, "embedding": [-96.37882995605469, 157.92335510253906, 268.3939208984375, 11.732461929321289, -115.90495300292969, -46.10622024536133], "text": " ", "type": "Satz", "module_number": 31070}, {"node_index": 1728, "embedding": [-11.506898880004883, 8.445460319519043, 40.2345085144043, -3.3656134605407715, -26.711650848388672, -13.39140510559082], "text": "gleich K1, ja und das ist genau schon der Widerspruch oder nicht der Widerspruch, sondern daran sieht man,  dass die Reihe ueber die AKs nicht konvergieren kann, weil wenn wir diese Relation haben fuer alle  K, groesser gleich K1, dann ist auch AK niemals eine Nullfolge, ich schreibe jetzt hier mal direkt  K aus N dran, ist dann also keine Nullfolge, ja und das heisst dann, dass die Reihe K gleich", "type": "Satz", "module_number": 31070}, {"node_index": 1729, "embedding": [-8.675765037536621, -9.968722343444824, 42.24742126464844, -0.7481915354728699, -12.892495155334473, -19.65268898010254], "text": "Null", "type": "Satz", "module_number": 31070}, {"node_index": 1730, "embedding": [-96.45626831054688, 157.68727111816406, 268.8513488769531, 11.813741683959961, -115.81385803222656, -46.34035110473633], "text": " ", "type": "Satz", "module_number": 31070}, {"node_index": 1731, "embedding": [-17.09082794189453, 9.693351745605469, 61.50257873535156, 1.297825813293457, -18.295757293701172, -19.862707138061523], "text": "bis und endlich", "type": "Satz", "module_number": 31070}, {"node_index": 1732, "embedding": [-5.57616662979126, -12.902113914489746, 32.72860336303711, -0.9850608706474304, -4.804104328155518, -17.094194412231445], "text": "AK Divergent ist und das ist im Endeffekt schon das Quotienten-Kriterium,  was wir uns jetzt gleich anschauen, das war im Endeffekt jetzt schon der Beweis dazu,  das heisst wir betrachten einfach Quotienten von aufeinander folgenden Glieder in der Reihe und  zusammengefasst sehen wir das jetzt hier als Quotienten-Kriterium, das heisst also hier haben", "type": "Satz", "module_number": 31070}, {"node_index": 1733, "embedding": [-96.40565490722656, 157.55502319335938, 268.8098449707031, 11.74180793762207, -115.71321105957031, -46.382965087890625], "text": " ", "type": "Satz", "module_number": 31070}, {"node_index": 1734, "embedding": [-7.109658241271973, -8.912647247314453, 35.51492691040039, -2.5504751205444336, -8.579402923583984, -16.86615562438965], "text": "wir diese Reihe gegeben und dann schauen wir uns diesen Grenzwert hier an,", "type": "Satz", "module_number": 31070}, {"node_index": 1735, "embedding": [-5.365764141082764, -7.913595199584961, 28.149438858032227, -3.027379035949707, -7.81820821762085, -13.753982543945312], "text": "ja das war genau der  Grenzwert den ich hier am Anfang aufgeschrieben habe, also dieser wir nehmen mal an, der existiert  und was da herauskommt, das nennen wir einfach R, das habe ich jetzt hier in dem Beweis nicht so  gefuehrt und dann haben wir die Faelle unterschieden, dass also dieser Grenzwert hier kleiner eins ist", "type": "Satz", "module_number": 31070}, {"node_index": 1736, "embedding": [-96.52468872070312, 157.63650512695312, 269.2868347167969, 11.62045669555664, -115.98650360107422, -46.561344146728516], "text": " ", "type": "Satz", "module_number": 31070}, {"node_index": 1737, "embedding": [-4.824857711791992, 0.11418835818767548, 18.24224281311035, 0.6612420678138733, -4.977754592895508, -6.63132381439209], "text": "oder also echt kleiner eins oder echt groesser eins", "type": "Satz", "module_number": 31070}, {"node_index": 1738, "embedding": [-7.821466445922852, -9.265939712524414, 39.65116500854492, -3.079967498779297, -11.92930793762207, -18.962810516357422], "text": ", jetzt ist natuerlich die Frage warum haben wir  den Fall gleich eins nicht untersucht, das liegt daran, dass wir hier keine Aussage treffen koennen  und das was wir jetzt hier gemacht haben der Beweis, das liefert dann eben das Quotienten-Kriterium,  wenn das R kleiner eins ist, also dieser Grenzwert, dann konvergiert die Reihe absolut und werden", "type": "Satz", "module_number": 31070}, {"node_index": 1739, "embedding": [-96.59175872802734, 157.66392517089844, 269.5382995605469, 11.651453018188477, -116.08448028564453, -46.65407180786133], "text": " ", "type": "Satz", "module_number": 31070}, {"node_index": 1740, "embedding": [-10.77599048614502, 2.3234574794769287, 43.49782180786133, -4.348491668701172, -22.760860443115234, -16.788034439086914], "text": "gesehen, der Beweis basiert dann also auf dem Majoranten-Kriterium und wenn R groesser eins ist,  dann divergiert die Reihe, auch das haben wir gerade gesehen und jetzt muss man eben aufpassen,  wenn wir bei dem Grenzwert R gleich eins bekommen, dann ja wie steht es hier so schoen, ist alles moeglich,  das bedeutet hier koennen wir keine Aussage treffen, es kann konvergieren, es kann aber auch", "type": "Satz", "module_number": 31070}, {"node_index": 1741, "embedding": [-96.63373565673828, 158.3411102294922, 269.1365661621094, 11.674453735351562, -116.42478942871094, -46.26885986328125], "text": " ", "type": "Satz", "module_number": 31070}, {"node_index": 1742, "embedding": [-10.728324890136719, 2.2271666526794434, 43.20278549194336, -4.485462188720703, -22.48487663269043, -16.776323318481445], "text": "divergieren, das wissen wir einfach nicht und wenn Sie dieses Kriterium anwenden und Sie bekommen also  R gleich eins, dann muessen Sie weitergehen und ein anderes Kriterium anwenden, dann koennen Sie hier  in diesem Fall nichts aussagen.", "type": "Satz", "module_number": 31070}, {"node_index": 1743, "embedding": [-8.581706047058105, 9.654507637023926, 27.56269645690918, -3.4090120792388916, -23.292316436767578, -8.057477951049805], "text": "Ja und vielleicht noch, weil ich vorhin schon erwaehnt habe, dass das  Majoranten-Kriterium jetzt nicht so gut ist im Vergleich zum Quotienten-Kriterium, steht das hier  auch nochmal als Bemerkung, ja bei den Majoranten-Kriterien braucht man eben eine konvergente  Majorante, das heisst die muss man erst mal finden und das ist nicht immer so einfach,", "type": "Satz", "module_number": 31070}, {"node_index": 1744, "embedding": [-96.71156311035156, 158.5128936767578, 269.31298828125, 11.662176132202148, -116.6444320678711, -46.28053665161133], "text": " ", "type": "Satz", "module_number": 31070}, {"node_index": 1745, "embedding": [-5.804623603820801, 8.649839401245117, 15.848427772521973, -0.11057252436876297, -12.09004020690918, -2.911668062210083], "text": "sie bekommen irgendeine Reihe und haben erst mal ueberhaupt keine Idee und deswegen werden immer  sie eine Reihe untersuchen und sie sehen nicht sofort fuer sich selbst, dass diese Reihe konvergiert,  irgendwie, dann wenden sie immer als erstes das Quotienten-Kriterium an und schauen, ob was  jetzt hier passiert, eine der drei Faelle sollte eintreffen und wenn sie natuerlich dann im Fall", "type": "Satz", "module_number": 31070}, {"node_index": 1746, "embedding": [-96.64653778076172, 158.504638671875, 269.0045166015625, 11.771150588989258, -116.38715362548828, -46.1357421875], "text": " ", "type": "Satz", "module_number": 31070}, {"node_index": 1747, "embedding": [-5.5131449699401855, 5.977975368499756, 16.645166397094727, -0.35905152559280396, -9.647662162780762, -4.206574440002441], "text": "R gleich eins sind, dann gehen sie weiter zum naechsten Kriterium und dann ja muessen sie wohl  oder ueber vielleicht doch das Majoranten-Kriterium anwenden und schauen, ob sie das irgendwie  anwenden koennen.", "type": "Satz", "module_number": 31070}, {"node_index": 1748, "embedding": [-9.378434181213379, 8.895936965942383, 29.796701431274414, -2.411674737930298, -22.162918090820312, -9.049297332763672], "text": "Gut, also wir halten fest Majoranten-Kriterium, Minoranten-Kriterium und  Quotienten-Kriterium, das sind die drei wichtigen Kriterien, es gibt tatsaechlich noch ein Wurzel-  Kriterium, das wird aber in diesen Kursen nicht behandelt, falls ihr aber mal in der Literatur  nachschaut, dann ja finden sie das auch, wird aber wie gesagt jetzt hier in dem Kurs schlicht und", "type": "Satz", "module_number": 31070}, {"node_index": 1749, "embedding": [-96.8582763671875, 158.62933349609375, 269.7652893066406, 11.672739028930664, -116.83899688720703, -46.420284271240234], "text": " ", "type": "Satz", "module_number": 31070}, {"node_index": 1750, "embedding": [-6.319691181182861, 2.336303234100342, 23.10762596130371, -1.6802537441253662, -11.548659324645996, -8.234100341796875], "text": "greifend ignoriert, warum weiss ich nicht, deswegen moechte ich darauf auch gar nicht eingehen, jetzt  schauen wir uns mal Beispiele an, wo wir das anwenden koennen und zwar,  also vielleicht auch einfache und welche, die wir schon kennen, schauen wir uns mal folgende  Reihe an, K gleich eins bis unendlich, K durch zwei hoch K,", "type": "Satz", "module_number": 31070}, {"node_index": 1751, "embedding": [-23.531274795532227, -46.54812240600586, 130.52525329589844, -4.220158576965332, -22.445812225341797, -67.07290649414062], "text": "ja wenn wir das mal die Folgeglieder", "type": "Satz", "module_number": 31070}, {"node_index": 1752, "embedding": [-96.57017517089844, 157.91725158691406, 269.1433410644531, 11.79110336303711, -115.86298370361328, -46.3792839050293], "text": " ", "type": "Satz", "module_number": 31070}, {"node_index": 1753, "embedding": [-11.54062557220459, 1.4737138748168945, 46.868831634521484, -4.750075817108154, -24.912555694580078, -18.453184127807617], "text": "oder die, ja die Glieder mal aufschreiben, was kommt da heraus, das ist ein halb plus zwei viertel  plus drei achtel, okay ich glaube so eine Reihe hat man noch nicht angeschaut und jetzt wollen wir  diese Reihe ueberpruefen auf Konvergenz und jetzt wenden wir einfach mal das Quotienten-Kriterium an,  ueblicherweise laesst man bei der Berechnung jetzt erstmal den Limes weg und schreibt nur erst mal", "type": "Satz", "module_number": 31070}, {"node_index": 1754, "embedding": [-96.62723541259766, 158.3929901123047, 269.0450134277344, 11.743837356567383, -116.21099090576172, -46.19240188598633], "text": " ", "type": "Satz", "module_number": 31070}, {"node_index": 1755, "embedding": [-11.863442420959473, 13.569112777709961, 38.475460052490234, 0.8187912106513977, -13.766609191894531, -9.478708267211914], "text": "die Quotienten", "type": "Satz", "module_number": 31070}, {"node_index": 1756, "embedding": [-16.59145736694336, 2.7878434658050537, 65.48188781738281, -6.556601524353027, -37.70317077636719, -25.929426193237305], "text": "auf, geht dann zum Grenzprozess ueber, ja wenn wir das machen, was steht da,  dann haben wir hier also K plus eins durch zwei hoch K plus eins und das ganze geteilt durch  K durch zwei hoch K, so wenn wir das jetzt nochmal umformen steht, also da K plus eins durch K mal  zwei hoch K durch zwei hoch K plus eins, okay, ja was sehen wir jetzt hier, also erst mal hier ist", "type": "Satz", "module_number": 31070}, {"node_index": 1757, "embedding": [-96.6411361694336, 158.3665313720703, 269.1120300292969, 11.752775192260742, -116.1930923461914, -46.22481918334961], "text": " ", "type": "Satz", "module_number": 31070}, {"node_index": 1758, "embedding": [-19.00226402282715, -9.427310943603516, 84.8073501586914, -7.791759490966797, -37.52996063232422, -37.720062255859375], "text": "zwei hoch K, hier steckt auch ein zwei hoch K, das heisst das ganze hier ist nichts anderes als ein halb,  das heisst da kommt schon mal ein halb heraus und hier haben wir K plus eins durch K,  Entschuldigung, ja was kommt da heraus, wenn wir das mal, also wenn wir das ganz korrekt machen,  ja", "type": "Satz", "module_number": 31070}, {"node_index": 1759, "embedding": [-7.308757305145264, 0.38479185104370117, 28.612533569335938, -2.7724647521972656, -15.393707275390625, -11.423591613769531], "text": "Sie sehen es natuerlich, dass das hier gegen eins geht, aber wenn wir das ganz korrekt machen,", "type": "Satz", "module_number": 31070}, {"node_index": 1760, "embedding": [-96.73104858398438, 158.1995391845703, 269.6337585449219, 11.694286346435547, -116.28668975830078, -46.496273040771484], "text": " ", "type": "Satz", "module_number": 31070}, {"node_index": 1761, "embedding": [-16.20945167541504, -9.191350936889648, 74.1336898803711, -6.9568915367126465, -31.191301345825195, -33.136287689208984], "text": "steht hier da ein halb, dann steht hier da eins plus eins durch K, naja und das ganze konvergiert dann  gegen ein halb und das ist kleiner eins und zwar jetzt hier fuer K gegen unendlich, ja und das  bedeutet also, dass die Reihe, die wir hier betrachtet haben tatsaechlich absolut konvergiert.  ", "type": "Satz", "module_number": 31070}, {"node_index": 1762, "embedding": [-3.4661898612976074, -6.276381969451904, 16.720979690551758, 2.877997636795044, -6.0896430015563965, -7.379515647888184], "text": "Absolut, nach dem kurzen Entschuldigung.", "type": "Satz", "module_number": 31070}, {"node_index": 1763, "embedding": [-96.61976623535156, 158.12806701660156, 269.1758117675781, 11.907670974731445, -116.00157928466797, -46.2805061340332], "text": "  ", "type": "Satz", "module_number": 31070}, {"node_index": 1764, "embedding": [-8.273845672607422, -9.92645263671875, 42.18782424926758, -3.3026866912841797, -12.997076988220215, -19.918302536010742], "text": "Gut, wenn wir mal eine zweite Reihe vielleicht jetzt wirklich mal eine, die wir schon kennen,  also die kannten wir noch nicht, haben jetzt aber einfach gesehen, ja, also diesen Quotienten  zu bestimmen und dann zum Grenzprozess ueberzugehen und dann kann man also relativ leicht auf Konvergenz  schliessen, aber wir sehen natuerlich, welchen Reihenwert diese Reihe jetzt hat, das ist natuerlich", "type": "Satz", "module_number": 31070}, {"node_index": 1765, "embedding": [-96.66048431396484, 158.40267944335938, 269.17236328125, 11.774246215820312, -116.11365509033203, -46.225955963134766], "text": " ", "type": "Satz", "module_number": 31070}, {"node_index": 1766, "embedding": [-4.904933452606201, 1.7885897159576416, 17.214046478271484, 0.3924486041069031, -5.709867477416992, -5.50040340423584], "text": "eine komplett andere Frage, die koennen wir jetzt hier nicht klaeren.", "type": "Satz", "module_number": 31070}, {"node_index": 1767, "embedding": [-12.631592750549316, -19.02865982055664, 68.07530975341797, -6.0382890701293945, -18.8070068359375, -33.56907653808594], "text": "So, schauen wir uns mal die  harmonische Reihe an, also eins durch K und da wissen wir schon, jetzt schon oft gesehen Reihe, die  Reihe ist divergent.", "type": "Satz", "module_number": 31070}, {"node_index": 1768, "embedding": [-4.1105523109436035, -9.259259223937988, 24.566556930541992, -2.748309850692749, -5.125556468963623, -12.737222671508789], "text": "So, was passiert, wenn ich jetzt hier das Quotienten-Kriterium anwende,  machen einfach mal ein Test, ob das stimmt, das heisst also hier wieder", "type": "Satz", "module_number": 31070}, {"node_index": 1769, "embedding": [-21.398223876953125, -15.107544898986816, 98.85721588134766, -8.952750205993652, -41.37956619262695, -45.36818313598633], "text": "Ak plus 1 durch Ak zum  Betrag, dann bekommen wir hier 1 durch K plus 1 und das ganze geteilt durch 1 durch K,  und dann haben wir hier also K durch K plus 1 und jetzt sehen wir schon,", "type": "Satz", "module_number": 31070}, {"node_index": 1770, "embedding": [-12.85024356842041, -30.94011116027832, 75.38412475585938, -2.816969394683838, -10.574275016784668, -40.1986083984375], "text": "wenn wir uns ja,", "type": "Satz", "module_number": 31070}, {"node_index": 1771, "embedding": [-96.68236541748047, 158.1629180908203, 269.4207458496094, 11.804960250854492, -115.96392059326172, -46.3999137878418], "text": " ", "type": "Satz", "module_number": 31070}, {"node_index": 1772, "embedding": [-17.28636360168457, -3.861692428588867, 73.51741027832031, -6.4685564041137695, -35.48964309692383, -31.234086990356445], "text": "koennen wir auch noch mal K ausklammern in Maenner und im Zaehler, dann haben wir es also ganz genau  und dann sehen wir also, das konvergiert gegen 1, weil das hier natuerlich gegen 1 geht,  fuer K gegen unendlich, naja, das heisst also der Grenzwert fuer K gegen unendlich ist 1 und  dann sind wir leider in diesem Fall, das heisst also hier koennen wir keine Aussage treffen,", "type": "Satz", "module_number": 31070}, {"node_index": 1773, "embedding": [-96.76903533935547, 158.61671447753906, 269.4475402832031, 11.763505935668945, -116.37715148925781, -46.26753616333008], "text": " ", "type": "Satz", "module_number": 31070}, {"node_index": 1774, "embedding": [-2.6610183715820312, 0.02506859600543976, 12.134654998779297, 0.40522128343582153, -2.769968271255493, -3.9343650341033936], "text": "keine Aussage mittels Quotienten-Kriteriums moeglich.", "type": "Satz", "module_number": 31070}, {"node_index": 1775, "embedding": [-6.674226760864258, -6.279935836791992, 33.62321853637695, -3.0049448013305664, -12.686182022094727, -15.352487564086914], "text": "Ich meine, wir wussten schon, dass sie  divergiert, aber mit dem Quotienten-Kriterium koennen wir das nicht nachweisen und jetzt nehmen wir  mal eine andere, von der wir schon wissen, dass sie konvergiert, da wissen wir, nehmen wir einfach  mal das Quadrat, also die Reihe 1 durch K Quadrat und hier wissen wir im Unterschied zum 2.", "type": "Satz", "module_number": 31070}, {"node_index": 1776, "embedding": [-14.636999130249023, -31.375110626220703, 86.39976501464844, -5.586277008056641, -19.1794376373291, -44.51365280151367], "text": "Beispiel,  die Reihe ist konvergent.", "type": "Satz", "module_number": 31070}, {"node_index": 1777, "embedding": [-10.293023109436035, -2.776409149169922, 44.084739685058594, -4.6229424476623535, -21.804298400878906, -18.860952377319336], "text": "So, wenden wir hier mal das Quotienten-Kriterium an,  was kommt hier heraus, wenn wir diesen Quotienten betrachten, dann haben wir hier also 1 durch K  plus 1 Quadrat, das ganze geteilt durch 1 durch K Quadrat.", "type": "Satz", "module_number": 31070}, {"node_index": 1778, "embedding": [-12.570987701416016, -9.093353271484375, 58.13828659057617, -5.88439416885376, -23.746437072753906, -26.732343673706055], "text": "Naja, wenn wir das jetzt umschreiben,  steht hier da K Quadrat durch K plus 1 Quadrat, das koennen wir aber auch schreiben als K durch K plus  1 zum Quadrat.", "type": "Satz", "module_number": 31070}, {"node_index": 1779, "embedding": [-14.694448471069336, -4.803361892700195, 63.67637252807617, -5.972748756408691, -31.72181510925293, -27.584672927856445], "text": "So, und jetzt sehen wir natuerlich, koennen ja jetzt die Grenzwertsaetze anwenden,  das hier konvergiert gegen 1, also konvergiert der gesamte Ausdruck gegen 1 Quadrat und das ist 1 fuer  K gegen und endlich, ja das kann doch nicht sein, schon wieder keine Aussage.", "type": "Satz", "module_number": 31070}, {"node_index": 1780, "embedding": [-3.9244377613067627, -3.15876841545105, 18.3436222076416, -1.7557175159454346, -7.669850826263428, -8.244224548339844], "text": "Also ich bringe diese  Beispiele nur an, damit sie sehen, das kann durchaus passieren, dass eben das Quotienten-Kriterium  keine Aussage liefert.", "type": "Satz", "module_number": 31070}, {"node_index": 1781, "embedding": [-6.0440874099731445, -6.930099010467529, 30.3241024017334, -2.998849391937256, -10.886161804199219, -14.431724548339844], "text": "Trotzdem ist es ein tolles Kriterium, schauen wir uns noch, um einfach das  positive Feeling mitzunehmen, noch ein positives Beispiel an, und zwar 1, wo es funktioniert,  wo man es vielleicht auch nicht sofort sieht, wenn wir jetzt die Reihe K gleich 0 bis und  endlich nehmen und jetzt hier 5 plus K durch 10 hoch K, ja dann hat man schon ein bisschen, jetzt", "type": "Satz", "module_number": 31070}, {"node_index": 1782, "embedding": [-96.91118621826172, 158.31617736816406, 270.28802490234375, 11.682916641235352, -116.5352554321289, -46.70924758911133], "text": " ", "type": "Satz", "module_number": 31070}, {"node_index": 1783, "embedding": [-6.878187656402588, -5.141578674316406, 31.99711036682129, -2.2757983207702637, -7.669233798980713, -14.27845573425293], "text": "haben wir das so oft ausgerechnet, dann hat man schon ein bisschen den Gefuehl, dass da irgendwie ein  Faktor entsteht, der kleiner 1 ist und das ist dann auch der Fall, das heisst also hier", "type": "Satz", "module_number": 31070}, {"node_index": 1784, "embedding": [-10.876002311706543, -9.675002098083496, 51.01408004760742, -4.067956924438477, -19.726163864135742, -23.730764389038086], "text": "Ak plus 1  durch Ak Betrag, so dann haben wir was stehen, ich schreibe das gleich mal als Produkt, ja und  nicht diesen riesigen Bruch, dann habe ich hier also 5 plus K plus 1 durch 10 hoch K plus 1", "type": "Satz", "module_number": 31070}, {"node_index": 1785, "embedding": [-96.7568359375, 158.46961975097656, 269.5131530761719, 11.776912689208984, -116.20271301269531, -46.3340950012207], "text": " ", "type": "Satz", "module_number": 31070}, {"node_index": 1786, "embedding": [-20.104339599609375, -2.9632318019866943, 84.32272338867188, -8.21462631225586, -43.32373809814453, -35.52947998046875], "text": "multipliziert, dann steht hier 10 hoch K geteilt durch 5 plus K, okay, dann sieht man schon mal,  das ist doch ganz nett, ja, ein bisschen aehnlich wie dieses erste Beispiel und da sehen wir jetzt hier,  da kommt ja dann einfach ein Zehntel heraus, mal, dann haben wir hier 6 plus K durch 5 plus K,  na ja und da sehen wir natuerlich, dass das dann wieder gegen 1 konvergiert und", "type": "Satz", "module_number": 31070}, {"node_index": 1787, "embedding": [-96.80144500732422, 158.6590576171875, 269.5406799316406, 11.776079177856445, -116.34110260009766, -46.28229904174805], "text": " ", "type": "Satz", "module_number": 31070}, {"node_index": 1788, "embedding": [-10.44819164276123, -23.5821533203125, 59.1680793762207, -2.5435595512390137, -9.651002883911133, -31.07236099243164], "text": "das muss ich mal kurz schauen, was ich hier gemacht habe, ja also genau, wir koennen jetzt hier bei  diesen, also klar, wenn ich jetzt hier K ausklammere", "type": "Satz", "module_number": 31070}, {"node_index": 1789, "embedding": [-17.833900451660156, -14.685099601745605, 84.15593719482422, -7.691923141479492, -33.896026611328125, -39.15963363647461], "text": ", steht hier 6 durch K plus 1, 5 durch K plus 1,  die beiden gehen dann jeweils gegen 0 und dann haben wir eben 1, das heisst das ganze geht gegen  1, also konvergiert der Gesamtausdruck gegen ein Zehntel und das ist dann kleiner 1 fuer K", "type": "Satz", "module_number": 31070}, {"node_index": 1790, "embedding": [-96.806640625, 158.6016845703125, 269.6126403808594, 11.783214569091797, -116.29320526123047, -46.326210021972656], "text": " ", "type": "Satz", "module_number": 31070}, {"node_index": 1791, "embedding": [-4.723699569702148, 5.80702018737793, 14.560205459594727, -0.09346289187669754, -9.333272933959961, -3.2166755199432373], "text": "gegen 1 endlich und das bedeutet dann endlich noch eine Erfolgsmeldung, diese Reihe ist absolut  konvergent, okay, das Video ist jetzt etwas laenger geworden, ich denke, wir haben jetzt  guten Eindruck, Majorantenkriterium, Minorantenkriterium, Quotientenkriterium,  das Minorantenkriterium haben wir jetzt glaube ich gar nicht in einem Beispiel angewandt, aber", "type": "Satz", "module_number": 31070}, {"node_index": 1792, "embedding": [-96.5973129272461, 157.8257598876953, 269.456787109375, 11.851388931274414, -116.09132385253906, -46.514366149902344], "text": "ich", "type": "Satz", "module_number": 31070}, {"node_index": 1793, "embedding": [-96.88006591796875, 158.9737091064453, 269.611328125, 11.869205474853516, -116.25780487060547, -46.17512130737305], "text": " ", "type": "Satz", "module_number": 31070}, {"node_index": 1794, "embedding": [-6.325967788696289, 9.462118148803711, 17.355693817138672, -0.8467347025871277, -13.072454452514648, -3.490077495574951], "text": "denke, das koennen Sie auch einfach selbst tun an einem einfachen Beispiel und ja, das sind die  wichtigsten Kriterium und wie gesagt, wenn Sie eine Reihe haben und Sie haben gar keine Ahnung,  fangen Sie mit dem Quotientenkriterium an und wenn das jetzt hier wie bei den Beispielen 2 und 3,  so ist das dann dieser Grenzwert 1 ergibt, dann muessen Sie andere Wege finden und ja,", "type": "Satz", "module_number": 31070}, {"node_index": 1795, "embedding": [-97.04988861083984, 159.2222442626953, 270.0921936035156, 11.764511108398438, -116.87802124023438, -46.31816101074219], "text": " ", "type": "Satz", "module_number": 31070}, {"node_index": 1796, "embedding": [-5.838913440704346, -10.42470932006836, 33.411746978759766, -1.97188401222229, -6.8463053703308105, -16.22907066345215], "text": "muessen irgendwie auf anderen Wegen herausfinden, ob die Reihen konvergiert oder divergiert.  ", "type": "Satz", "module_number": 31070}, {"node_index": 1797, "embedding": [-7.381002902984619, -20.799697875976562, 47.11141586303711, -2.938812732696533, -7.93733024597168, -25.245668411254883], "text": "Ja und im naechsten Teil, im vierten Teil werden wir dann nochmal ganz kurz anschauen,  was wir eigentlich bei komplexen Reihen aussagen koennen.", "type": "Satz", "module_number": 31070}, {"node_index": 1798, "embedding": [3.462352752685547, 8.858227729797363, -12.239566802978516, 4.76744270324707, -17.0391902923584, 12.271138191223145], "text": "[0A0-2E0D7D1C-0093] Upgrading to Professional GPU VPS - A4000 for the rest of the plan", "type": "subject", "module_number": 0}, {"node_index": 1799, "embedding": [13.818572044372559, -19.632484436035156, -17.90175437927246, 1.4402973651885986, 10.690559387207031, 4.904829025268555], "text": "billing@databasemart.com", "type": "sender", "module_number": 0}, {"node_index": 1800, "embedding": [1.574454665184021, 23.03054428100586, -15.249088287353516, 7.16552734375, -32.426727294921875, 19.565303802490234], "text": "Ack. Thanks for the heads-up. :)", "type": "body", "module_number": 0}, {"node_index": 1801, "embedding": [14.774862289428711, -25.032896041870117, -17.96758460998535, 1.0626261234283447, 17.106441497802734, 3.041471004486084], "text": "billing@databasemart.com", "type": "recipient", "module_number": 0}, {"node_index": 1802, "embedding": [1.2986339330673218, -0.30363643169403076, -14.19753646850586, 17.81791877746582, -20.34554672241211, 11.236516952514648], "text": "Jun 30, 2024, 5:08\u202fPM", "type": "date", "module_number": 0}, {"node_index": 1803, "embedding": [4.96303129196167, 4.701374530792236, -12.391755104064941, 3.559567928314209, -12.261053085327148, 10.869378089904785], "text": "Hi Ada, we noticed a new sign in to your Dropbox account", "type": "subject", "module_number": 0}, {"node_index": 1804, "embedding": [13.12296199798584, -16.58163833618164, -18.242572784423828, 2.240633487701416, 5.715152740478516, 6.650875091552734], "text": "no-reply@dropbox.com", "type": "sender", "module_number": 0}, {"node_index": 1805, "embedding": [1.698027491569519, 29.327816009521484, -16.27659797668457, 4.963457107543945, -35.62464141845703, 21.650236129760742], "text": "Hi Ada,\n\nA new web browser just signed in to your Dropbox account. To help keep your account secure, let us know if this is you.\n\nIs this you?\nWhen: Jun 30, 2024 at 4:24 pm (CEST)\nWhat: Firefox on Windows\nYes\nNo\n\n\n\nI'm not sure\n\nLearn more on how to protect your account.\n\nThanks,\n- The Dropbox Team\n\u00a9 2024 Dropbox", "type": "body", "module_number": 0}, {"node_index": 1806, "embedding": [17.014890670776367, -32.01225662231445, -19.070154190063477, 0.5926711559295654, 23.665210723876953, 1.4298560619354248], "text": "adastruct@gmail.com", "type": "recipient", "module_number": 0}, {"node_index": 1807, "embedding": [3.653348922729492, -5.806781768798828, -14.887673377990723, 15.738946914672852, -13.516864776611328, 9.520428657531738], "text": "Jun 30, 2024, 4:24\u202fPM", "type": "date", "module_number": 0}, {"node_index": 1808, "embedding": [5.051392555236816, 4.506109714508057, -12.81260871887207, 3.811891555786133, -12.235292434692383, 11.096038818359375], "text": "Hi Ada, finish login with your Dropbox security code", "type": "subject", "module_number": 0}, {"node_index": 1809, "embedding": [13.488454818725586, -17.40225601196289, -18.7072811126709, 2.309992551803589, 6.575150489807129, 6.600994110107422], "text": "no-reply@dropbox.com", "type": "sender", "module_number": 0}, {"node_index": 1810, "embedding": [1.1196633577346802, 33.01239776611328, -16.901945114135742, 5.244868278503418, -39.32691192626953, 23.34724998474121], "text": "Hi Ada,\n\nFinish signing in to Dropbox with this one-time security code:\n\n900972\n\nWe noticed there was an attempt of signing in to your Dropbox account.\n\nSign-In details:\nDevice: Firefox on Windows\nTime: Jun 30, 2024 at 4:23 pm (CEST)\nLocation: Near Stadthagen, Lower Saxony, Germany\nIP: 217.252.60.179\n\nWe encourage you to download the latest Dropbox mobile app and Dropbox desktop app so you can use them to receive the one-time security code in a safe and convenient way.\n\nIf you didn\u2019t try to sign in, you can report this suspicious login by clicking this link.\n\u00a9 2024 Dropbox", "type": "body", "module_number": 0}, {"node_index": 1811, "embedding": [17.433706283569336, -33.470481872558594, -19.586328506469727, 0.6487530469894409, 25.142024993896484, 1.1626842021942139], "text": "adastruct@gmail.com", "type": "recipient", "module_number": 0}, {"node_index": 1812, "embedding": [3.457171678543091, -6.599166393280029, -15.108150482177734, 16.747861862182617, -13.606878280639648, 9.565877914428711], "text": "Jun 30, 2024, 4:23\u202fPM", "type": "date", "module_number": 0}, {"node_index": 1813, "embedding": [4.96303129196167, 4.701374530792236, -12.391755104064941, 3.559567928314209, -12.261053085327148, 10.869378089904785], "text": "Hi Ada, we noticed a new sign in to your Dropbox account", "type": "subject", "module_number": 0}, {"node_index": 1814, "embedding": [13.12296199798584, -16.58163833618164, -18.242572784423828, 2.240633487701416, 5.715152740478516, 6.650875091552734], "text": "no-reply@dropbox.com", "type": "sender", "module_number": 0}, {"node_index": 1815, "embedding": [1.9678562879562378, 28.245187759399414, -16.323389053344727, 4.915046691894531, -34.66950225830078, 21.334863662719727], "text": "Hi Ada,\n\nA new web browser just signed in to your Dropbox account. To help keep your account secure, let us know if this is you.\n\nIs this you?\nWhen: Jun 29, 2024 at 4:14 pm (CEST)\nWhat: Chrome on Windows\nYes\nNo\n\n\n\nI'm not sure\n\nLearn more on how to protect your account.\n\nThanks,\n- The Dropbox Team\n\u00a9 2024 Dropbox", "type": "body", "module_number": 0}, {"node_index": 1816, "embedding": [17.014890670776367, -32.01225662231445, -19.070154190063477, 0.5926711559295654, 23.665210723876953, 1.4298560619354248], "text": "adastruct@gmail.com", "type": "recipient", "module_number": 0}, {"node_index": 1817, "embedding": [3.8805675506591797, -7.4977264404296875, -14.761126518249512, 15.844417572021484, -12.115987777709961, 8.87930965423584], "text": "Jun 29, 2024, 4:14\u202fPM", "type": "date", "module_number": 0}, {"node_index": 1818, "embedding": [5.438084602355957, 4.09893274307251, -12.315765380859375, 2.6974852085113525, -12.024177551269531, 10.405631065368652], "text": "[Cloudflare]: Your Cloudflare account has been accessed from a new IP Address", "type": "subject", "module_number": 0}, {"node_index": 1819, "embedding": [12.253000259399414, -13.35180377960205, -17.769119262695312, 2.1411023139953613, 2.1029295921325684, 7.397397994995117], "text": "noreply@notify.cloudflare.com", "type": "sender", "module_number": 0}, {"node_index": 1820, "embedding": [-1.7386428117752075, 46.1836051940918, -15.754561424255371, 4.309664726257324, -49.93253707885742, 26.817888259887695], "text": "Hello,\n\nYour security is very important to us. This email address was used to access the Cloudflare dashboard from a new IP address:\n\n------------------------------------------\nemail: adastruct@gmail.com\ntime: 2024-06-28 23:16:22 UTC\nIP address: 2a09:bac2:2859:28c::41:76\nbrowser: Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/605.1.15 (KHTML, like Gecko) Version/17.5 Safari/605.1.15\n------------------------------------------\n\nIf this was you, you can ignore this alert. If you noticed any suspicious activity on your account, please change your password and enable two-factor authentication on your account page at https://dash.cloudflare.com/profile.\n\nIf you have any questions or concerns, you can also visit our Support portal at https://dash.cloudflare.com/?to=/:account/support.\n\nThanks,\n\nThe Cloudflare Team", "type": "body", "module_number": 0}, {"node_index": 1821, "embedding": [17.36648941040039, -31.937414169311523, -19.02004623413086, -0.28953108191490173, 23.361404418945312, 1.173649549484253], "text": "adastruct@gmail.com", "type": "recipient", "module_number": 0}, {"node_index": 1822, "embedding": [4.393728733062744, -7.828402996063232, -14.766763687133789, 14.839810371398926, -12.050731658935547, 8.530227661132812], "text": "Jun 29, 2024, 1:16\u202fAM", "type": "date", "module_number": 0}, {"node_index": 1823, "embedding": [4.96303129196167, 4.701374530792236, -12.391755104064941, 3.559567928314209, -12.261053085327148, 10.869378089904785], "text": "Hi Ada, we noticed a new sign in to your Dropbox account", "type": "subject", "module_number": 0}, {"node_index": 1824, "embedding": [13.12296199798584, -16.58163833618164, -18.242572784423828, 2.240633487701416, 5.715152740478516, 6.650875091552734], "text": "no-reply@dropbox.com", "type": "sender", "module_number": 0}, {"node_index": 1825, "embedding": [1.9889353513717651, 28.190019607543945, -16.33194923400879, 4.903823375701904, -34.62232208251953, 21.3232421875], "text": "Hi Ada,\n\nA new web browser just signed in to your Dropbox account. To help keep your account secure, let us know if this is you.\n\nIs this you?\nWhen: Jun 28, 2024 at 2:11 pm (CEST)\nWhat: Chrome on Windows\nYes\nNo\n\n\n\nI'm not sure\n\nLearn more on how to protect your account.\n\nThanks,\n- The Dropbox Team\n\u00a9 2024 Dropbox", "type": "body", "module_number": 0}, {"node_index": 1826, "embedding": [17.014890670776367, -32.01225662231445, -19.070154190063477, 0.5926711559295654, 23.665210723876953, 1.4298560619354248], "text": "adastruct@gmail.com", "type": "recipient", "module_number": 0}, {"node_index": 1827, "embedding": [4.082629680633545, -8.518899917602539, -14.838122367858887, 15.998359680175781, -11.373578071594238, 8.59514045715332], "text": "Jun 28, 2024, 2:12\u202fPM", "type": "date", "module_number": 0}, {"node_index": 1828, "embedding": [5.613945960998535, 3.8973095417022705, -14.905106544494629, 3.789445161819458, -11.297012329101562, 11.324041366577148], "text": "Security alert", "type": "subject", "module_number": 0}, {"node_index": 1829, "embedding": [13.61390495300293, -14.790281295776367, -20.99931526184082, 2.003628969192505, 4.341452598571777, 7.881521701812744], "text": "no-reply@accounts.google.com", "type": "sender", "module_number": 0}, {"node_index": 1830, "embedding": [1.7850903272628784, 35.26359176635742, -19.18946647644043, 4.207516193389893, -40.808101654052734, 24.687891006469727], "text": "Google Drive for desktop was granted access to your Google Account\nadastruct@gmail.com\n\nIf you did not grant access, you should check this activity and secure your account.\nCheck activity\nYou can also see security activity at\nhttps://myaccount.google.com/notifications\nYou received this email to let you know about important changes to your Google Account and services.\n\u00a9 2024 Google Ireland Ltd., Gordon House, Barrow Street, Dublin 4, Ireland", "type": "body", "module_number": 0}, {"node_index": 1831, "embedding": [18.94366455078125, -36.839385986328125, -21.868785858154297, -0.08421538025140762, 28.9234561920166, 0.3867805004119873], "text": "adastruct@gmail.com", "type": "recipient", "module_number": 0}, {"node_index": 1832, "embedding": [3.313572883605957, -5.303412914276123, -16.89756965637207, 17.375993728637695, -15.284103393554688, 10.404569625854492], "text": "Jun 28, 2024, 12:38\u202fPM", "type": "date", "module_number": 0}, {"node_index": 1833, "embedding": [5.8745222091674805, 5.484171390533447, -14.724237442016602, 3.6208882331848145, -12.088907241821289, 11.284646987915039], "text": "Encounter any server connection issue with NEWAdaStruct.AdaStruct.com?", "type": "subject", "module_number": 0}, {"node_index": 1834, "embedding": [14.12353515625, -15.205242156982422, -20.688661575317383, 1.4826560020446777, 7.525938510894775, 6.903818130493164], "text": "contact@databasemart.com", "type": "sender", "module_number": 0}, {"node_index": 1835, "embedding": [1.3731001615524292, 37.0580940246582, -18.645082473754883, 4.786158561706543, -41.815711975097656, 24.737340927124023], "text": "Hello Damien Foucard,\nWe're thrilled to have you with us!\nAs you settle into your hosting journey, we want to ensure a smooth experience. Share your thoughts on server connections, setup, or any questions you may have.\nFor quick help, check our video guides:\n\nLinux Server Connection Guide\nYour feedback matters. Thank you for choosing Database Mart!\nBest Regards,\nDatabase Mart\n  Chat |\nSubmit Ticket|\nFAQ|\nHelp Document|\nFacebook|\nYouTube", "type": "body", "module_number": 0}, {"node_index": 1836, "embedding": [17.704824447631836, -32.962738037109375, -20.847335815429688, 0.9963908791542053, 25.685781478881836, 0.8526599407196045], "text": "AdaStruct@gmail.com", "type": "recipient", "module_number": 0}, {"node_index": 1837, "embedding": [4.641064167022705, -7.655649185180664, -16.957185745239258, 16.6552677154541, -11.891241073608398, 9.094817161560059], "text": "Jun 28, 2024, 7:50\u202fAM", "type": "date", "module_number": 0}, {"node_index": 1838, "embedding": [4.918172359466553, 7.366629600524902, -13.066672325134277, 3.469381093978882, -15.79232120513916, 11.95457935333252], "text": "Notice of Slack\u2019s new content deletion policy for free workspaces", "type": "subject", "module_number": 0}, {"node_index": 1839, "embedding": [14.819849967956543, -22.086917877197266, -19.10694694519043, 1.7453151941299438, 10.97085952758789, 4.728841304779053], "text": "feedback@slack.com", "type": "sender", "module_number": 0}, {"node_index": 1840, "embedding": [-1.3779464960098267, 47.549835205078125, -16.98282814025879, 4.453919410705566, -51.914695739746094, 27.957181930541992], "text": "Free workspace content older than one year will be deleted\nWe wanted to let you know about a change in policy for free workspaces.\nWhat is changing?\nWorkspaces\u2019 data, including files, messages, and other content that is older than one year will no longer be stored. Free workspaces will continue to have full access to the past 90 days of message history and file storage. This change will not impact workspaces on other plans, such as Slack Pro.\nWhen will this take effect?\nThis policy will begin taking effect August 26th, 2024. Workspaces will be notified prior to the policy impacting their workspace.\nWhat does this mean for you?\nYour workspace, Slack , is on a free Slack plan. This workspace has content that is older than one year which will be deleted once the policy takes effect. Moving forward, Slack will not retain messages and files older than one year for a workspace. This policy will impact your workspace starting August 26th, 2024.\nTo retain access to content older than a year, the workspace needs to be on a paid Slack plan. These plans can be reviewed on our plan page. Free teams will continue to retain access to messages and content sent in the last 90 days.\nIf your team chooses to upgrade to a paid plan after the policy goes into effect, you will not be able to recover any content that has been deleted under our new policy.\nS\nSlack\nWorkspace URL: slack-hik4376.slack.com\nSIGN IN\nQuestions? Review our FAQs about this policy change.\nOur Blog   |   Policies   |   Help Center   |   Slack Community\n\n\u00a92024 Slack Technologies, LLC, a Salesforce company.\n415 Mission Street, San Francisco, CA 94105\n\nAll rights reserved.", "type": "body", "module_number": 0}, {"node_index": 1841, "embedding": [17.147266387939453, -30.031410217285156, -19.764928817749023, 0.44620102643966675, 20.67327880859375, 2.299057722091675], "text": "adastruct@gmail.com", "type": "recipient", "module_number": 0}, {"node_index": 1842, "embedding": [4.615657329559326, -8.580253601074219, -15.433540344238281, 15.72946834564209, -12.203472137451172, 8.699624061584473], "text": "Jun 27, 2024, 11:59\u202fPM", "type": "date", "module_number": 0}, {"node_index": 1843, "embedding": [3.462352752685547, 8.858227729797363, -12.239566802978516, 4.76744270324707, -17.0391902923584, 12.271138191223145], "text": "[0A0-2E0D7D1C-0093] Upgrading to Professional GPU VPS - A4000 for the rest of the plan", "type": "subject", "module_number": 0}, {"node_index": 1844, "embedding": [13.818572044372559, -19.632484436035156, -17.90175437927246, 1.4402973651885986, 10.690559387207031, 4.904829025268555], "text": "billing@databasemart.com", "type": "sender", "module_number": 0}, {"node_index": 1845, "embedding": [-2.6854090690612793, 48.176536560058594, -16.438417434692383, 6.22097110748291, -53.528358459472656, 28.195003509521484], "text": "Hello,\nThanks for your response, we plan to cancel your old server on June 30. If you have completed the data migration in advance, you can contact us and we will cancel the old server as soon as we receive your notice.\nIf you do not contact us, we will cancel the old server as scheduled on June 30.\nThank you\n  Sincerely,\n\nHoliday\nDatabase Mart Billing Department\nhttp://www.databasemart.com\n  From: Ada Struct <adastruct@gmail.com>\nSent: Thu, 27 Jun 2024 07:51:00 -0500\nTo: Database Mart Billing Team <billing@databasemart.com>\nSubject: Re: [0A0-2E0D7D1C-0093] Upgrading to Professional GPU VPS - A4000 for the rest of the plan\n  Three days time for migration would be lovely. We\u2019ve started the migration process.\n  From: Billing Department\nSent: Thu, 27 Jun 2024 06:53:00 -0500\nTo: adastruct@gmail.com\nSubject: Upgrading to Professional GPU VPS - A4000 for the rest of the plan\n  Hello,\n  We have received your payment for the price difference. Our system has created the Professional GPU VPS - A4000 (108.181.203.191) and sent the login details to you. By the way, do you need time to migrate the data from the old Basic Dedicated GPU Server-K40 - AdaStruct.AdaStruct.com (173.208.138.141) to the new server? If yes, we can provide you 3 days' time for data migration. \nWe look forward to hearing back from you soon.\n  Sincerely,\n\nSophia\nDatabase Mart Billing Department\nhttp://www.databasemart.com\n  From: Billing Department\nSent: Thu, 27 Jun 2024 06:21:47 -0500\nTo: adastruct@gmail.com\nSubject: Upgrading to Professional GPU VPS - A4000 for the rest of the plan\n  Hello,\n  We have added a new order of Professional GPU VPS - A4000 ($90.3*24m=$2167.20/2years) under the new account. You will need to pay a price differential of ($2167.20-$2092.80)/731*384days=$39.08 for the remaining days of your current billing period. You can pay invoice #62168 for the price difference at https://console.databasemart.com/invoice-detail/4566a794544d40b3b212015c3c3ab42f. Once paid, we will prepare the new server for you. Thanks.\n  Sincerely,\n\nSophia\nDatabase Mart Billing Department\nhttp://www.databasemart.com", "type": "body", "module_number": 0}, {"node_index": 1846, "embedding": [16.236297607421875, -30.268291473388672, -19.139572143554688, 1.1407129764556885, 21.833465576171875, 1.900973916053772], "text": "adastruct@gmail.com", "type": "recipient", "module_number": 0}, {"node_index": 1847, "embedding": [1.7365972995758057, -2.252026319503784, -14.186380386352539, 17.732210159301758, -18.93248748779297, 10.628410339355469], "text": "Jun 27, 2024, 4:49\u202fPM", "type": "date", "module_number": 0}, {"node_index": 1848, "embedding": [3.462352752685547, 8.858227729797363, -12.239566802978516, 4.76744270324707, -17.0391902923584, 12.271138191223145], "text": "[0A0-2E0D7D1C-0093] Upgrading to Professional GPU VPS - A4000 for the rest of the plan", "type": "subject", "module_number": 0}, {"node_index": 1849, "embedding": [13.818572044372559, -19.632484436035156, -17.90175437927246, 1.4402973651885986, 10.690559387207031, 4.904829025268555], "text": "billing@databasemart.com", "type": "sender", "module_number": 0}, {"node_index": 1850, "embedding": [2.4695563316345215, 24.058713912963867, -16.2446346282959, 5.548728942871094, -32.72101974487305, 20.07828140258789], "text": "Three days time for migration would be lovely. We\u2019ve started the migration process.", "type": "body", "module_number": 0}, {"node_index": 1851, "embedding": [14.774862289428711, -25.032896041870117, -17.96758460998535, 1.0626261234283447, 17.106441497802734, 3.041471004486084], "text": "billing@databasemart.com", "type": "recipient", "module_number": 0}, {"node_index": 1852, "embedding": [1.4330394268035889, -1.336932897567749, -14.01071548461914, 17.935890197753906, -19.757017135620117, 10.883257865905762], "text": "Jun 27, 2024, 1:19\u202fPM", "type": "date", "module_number": 0}, {"node_index": 1853, "embedding": [4.9205193519592285, 6.735663890838623, -13.307706832885742, 3.145822763442993, -11.329513549804688, 11.198878288269043], "text": "NEWAdaStruct.AdaStruct.com Created! Get your project running now.", "type": "subject", "module_number": 0}, {"node_index": 1854, "embedding": [13.28990364074707, -13.828287124633789, -18.984512329101562, 0.866016149520874, 8.20722770690918, 6.722262382507324], "text": "contact@databasemart.com", "type": "sender", "module_number": 0}, {"node_index": 1855, "embedding": [-0.5914538502693176, 44.355255126953125, -17.468019485473633, 4.147677421569824, -46.69963073730469, 26.789043426513672], "text": "Hello Damien Foucard,\nYour chosen service has been successfully deployed. Here is the information you may need for managing your service:\n    \n         IP: 108.181.203.191\n    \n         Access Port: 22\n    \n         Login Name: administrator\n    \n         Login Password: xyU*******CsA%\n    \n         Operating System: Ubuntu Server 20 LTS 64-bit\n     We have put together a collection of KBs to help you with the basic management of servers:\nHow to connect to a Linux server remotely\nHow to manage products in Database Mart control panel\nWe hope you find this helpful.\nNow, you can log in to the control panel to manage your service. Let us know if you need assistance. We are always happy to help.\n  Enjoy your service!\nDatabase Mart LLC\nGet Started Now\n  Chat |\nSubmit Ticket|\nFAQ|\nHelp Document|\nAffiliate|\nFacebook|\nYouTube", "type": "body", "module_number": 0}, {"node_index": 1856, "embedding": [16.71864128112793, -31.615875244140625, -19.283349990844727, 0.4748065769672394, 26.561790466308594, 0.7459745407104492], "text": "AdaStruct@gmail.com", "type": "recipient", "module_number": 0}, {"node_index": 1857, "embedding": [2.3573131561279297, -0.9110630750656128, -14.955172538757324, 16.134206771850586, -16.358800888061523, 10.591090202331543], "text": "Jun 27, 2024, 1:30\u202fPM", "type": "date", "module_number": 0}, {"node_index": 1858, "embedding": [5.379306793212891, 3.3335840702056885, -13.202775955200195, 4.262179374694824, -12.644806861877441, 10.847992897033691], "text": "Database Mart LLC Customer Invoice", "type": "subject", "module_number": 0}, {"node_index": 1859, "embedding": [13.823869705200195, -17.581336975097656, -18.90079689025879, 2.060328960418701, 6.946918487548828, 6.345334529876709], "text": "contact@databasemart.com", "type": "sender", "module_number": 0}, {"node_index": 1860, "embedding": [-3.175874948501587, 49.297767639160156, -15.078984260559082, 6.277700901031494, -55.211700439453125, 27.973020553588867], "text": "Dear Damien Foucard,\nThis is a notice that a renewal invoice has been generated on 06/27/2024.\nOnce the invoice is paid, your service will be active during 07/16/2025~07/15/2027.\nInvoice #: 62171\nAmount Due: $2167.20 USD\nDue Date: 07/16/2025\n\nInvoice Items\n\nPackage Name: NEWAdaStruct.AdaStruct.com\nGPU VPS - A4000(07/16/2025 ~ 07/15/2027)\n24 CPU Cores\n32GB RAM\n320 GB SSD Disk\nNvidia Quadro RTX A4000\n300Mbps Unmetered Bandwidth\nOnce per 2 Weeks Backup\n1 Dedicated IPv4\n\nOperating System(Ubuntu Server 20 LTS 64-bit)\n\n------------------------------------------------------\nSub Total: $2167.20 USD\nCredit: $0 USD\nTotal: $2167.20 USD\n------------------------------------------------------\nPayment will be taken automatically on 07/16/2025 from your credit card on record with us. To update or change the credit card details we hold for your account, please login at https://console.databasemart.com/invoice-detail/6eca1fc587aa4028af013075fd24d329, and click Pay Now, and then follow the instructions on the screen. You can also log in to your control panel to update or change the credit card directly.\n\nWe really appreciate your valued business and the confidence you have placed in us. Please feel free to contact us if we can be of further assistance.\nSincerely,\nDatabase Mart LLC\nPay Now", "type": "body", "module_number": 0}, {"node_index": 1861, "embedding": [16.89348793029785, -33.764869689941406, -19.248672485351562, 1.7864506244659424, 23.919145584106445, 0.9226653575897217], "text": "AdaStruct@gmail.com", "type": "recipient", "module_number": 0}, {"node_index": 1862, "embedding": [3.375100612640381, -6.151229381561279, -14.786839485168457, 16.886964797973633, -15.898307800292969, 9.522323608398438], "text": "Jun 27, 2024, 1:14\u202fPM", "type": "date", "module_number": 0}, {"node_index": 1863, "embedding": [4.225874900817871, 4.713833332061768, -11.202033996582031, 3.699568748474121, -12.402023315429688, 9.985198974609375], "text": "Invoice 62168 for Damien Foucard has been paid", "type": "subject", "module_number": 0}, {"node_index": 1864, "embedding": [12.485848426818848, -15.959297180175781, -16.75776481628418, 1.5360544919967651, 7.022949695587158, 5.459255695343018], "text": "contact@databasemart.com", "type": "sender", "module_number": 0}, {"node_index": 1865, "embedding": [0.5782763361930847, 32.1983528137207, -15.35407829284668, 4.986112594604492, -38.717105865478516, 21.867586135864258], "text": "Dear Damien Foucard,\nThis is a payment receipt for Invoice 62168 sent on 06/27/2024.\nAmount: $39.08 USD\nTransaction #: 7JD67618HB900301C\nTotal Paid: $39.08 USD\nRemaining Balance: $0.00 USD\nStatus: Paid\nYou may review your invoice history at any time by logging into your control panel.\nThank you for your business. Please contact us anytime with any questions or concerns.\nNote: This email will serve as an official receipt for this payment.\n\nSincerely,\nDatabase Mart LLC\nView My Invoices\n  Chat |\nSubmit Ticket|\nFAQ|\nHelp Document|\nAffiliate|\nFacebook|\nYouTube", "type": "body", "module_number": 0}, {"node_index": 1866, "embedding": [15.159454345703125, -30.3254337310791, -17.113122940063477, 1.373793601989746, 22.335830688476562, 0.6402499675750732], "text": "AdaStruct@gmail.com", "type": "recipient", "module_number": 0}, {"node_index": 1867, "embedding": [2.9476990699768066, -6.61812162399292, -13.463263511657715, 15.953678131103516, -13.103109359741211, 8.385405540466309], "text": "Jun 27, 2024, 1:16\u202fPM", "type": "date", "module_number": 0}, {"node_index": 1868, "embedding": [5.613945960998535, 3.8973095417022705, -14.905106544494629, 3.789445161819458, -11.297012329101562, 11.324041366577148], "text": "Security alert", "type": "subject", "module_number": 0}, {"node_index": 1869, "embedding": [13.61390495300293, -14.790281295776367, -20.99931526184082, 2.003628969192505, 4.341452598571777, 7.881521701812744], "text": "no-reply@accounts.google.com", "type": "sender", "module_number": 0}, {"node_index": 1870, "embedding": [1.7850903272628784, 35.26359176635742, -19.18946647644043, 4.207516193389893, -40.808101654052734, 24.687891006469727], "text": "Google Drive for desktop was granted access to your Google Account\nadastruct@gmail.com\n\nIf you did not grant access, you should check this activity and secure your account.\nCheck activity\nYou can also see security activity at\nhttps://myaccount.google.com/notifications\nYou received this email to let you know about important changes to your Google Account and services.\n\u00a9 2024 Google Ireland Ltd., Gordon House, Barrow Street, Dublin 4, Ireland", "type": "body", "module_number": 0}, {"node_index": 1871, "embedding": [18.94366455078125, -36.839385986328125, -21.868785858154297, -0.08421538025140762, 28.9234561920166, 0.3867805004119873], "text": "adastruct@gmail.com", "type": "recipient", "module_number": 0}, {"node_index": 1872, "embedding": [3.8136587142944336, -7.326682090759277, -17.022165298461914, 17.147884368896484, -12.86622428894043, 9.628518104553223], "text": "Jun 27, 2024, 12:08\u202fPM", "type": "date", "module_number": 0}, {"node_index": 1873, "embedding": [5.194926738739014, 3.876845121383667, -12.657784461975098, 3.9088375568389893, -12.139528274536133, 10.584892272949219], "text": "Your account has been officially activated!", "type": "subject", "module_number": 0}, {"node_index": 1874, "embedding": [13.142915725708008, -16.206768035888672, -18.486661911010742, 1.9798202514648438, 6.575922966003418, 6.497009754180908], "text": "contact@databasemart.com", "type": "sender", "module_number": 0}, {"node_index": 1875, "embedding": [-0.8551939129829407, 43.97235107421875, -16.761734008789062, 4.603485107421875, -48.03929138183594, 26.71730613708496], "text": "Paid Account has been activated!\nDear Damien Foucard,\nCongratulations! Your paid account has been officially activated. It enables you to make payments for your services at Database Mart or request free trials.\nIf you haven't chosen any services with us, go to the control panel to choose one. \nWe enclose the following guide articles and FAQs, hoping to make it easy for you to complete payments.\n  Step-by-Step Guides:\nHow to Make Payment for Your Service\nPayment Issues ( PayPal & Credit Card )\n  FAQs:\nWhen are invoices generated?\nInvoices are generated 5 days before the due date of packages, which show your plan level, billing cycle, and add-ons. You could also change any of those before the payments and generate a new invoice.\nWhat happens if my invoices remain unpaid?\nIf a service invoice remains unpaid, your package will be suspended 3 days past due and be canceled 4 days past due. Please make sure to pay the service invoice before it is due.\nWhen will auto-payments be made?\nIf you have subscribed to our services and have added a default payment method, our system will handle recurring payments the day the next billing cycle starts.\n  If you need any further assistance, please feel free to let us know. We are always here for you.\nSincerely,\nDatabase Mart LLC\n  Chat |\nSubmit Ticket|\nFAQ|\nHelp Document|\nAffiliate|\nFacebook|\nYouTube", "type": "body", "module_number": 0}, {"node_index": 1876, "embedding": [16.454484939575195, -31.24768829345703, -18.739381790161133, 1.2550677061080933, 22.257966995239258, 1.2644338607788086], "text": "AdaStruct@gmail.com", "type": "recipient", "module_number": 0}, {"node_index": 1877, "embedding": [4.312801361083984, -6.5635857582092285, -15.385705947875977, 15.408211708068848, -13.183822631835938, 9.054943084716797], "text": "Jun 27, 2024, 10:32\u202fAM", "type": "date", "module_number": 0}, {"node_index": 1878, "embedding": [4.532500743865967, 5.965704917907715, -13.064947128295898, 4.365079879760742, -14.002211570739746, 11.608809471130371], "text": "July 4th Sale \u2013 Hosting Server Up to 70% OFF!", "type": "subject", "module_number": 0}, {"node_index": 1879, "embedding": [12.900723457336426, -14.660289764404297, -18.72018814086914, 2.1303606033325195, 5.379385948181152, 7.142560958862305], "text": "contact@databasemart.com", "type": "sender", "module_number": 0}, {"node_index": 1880, "embedding": [-1.909185767173767, 44.16701126098633, -16.907590866088867, 6.697922706604004, -50.08769989013672, 26.986085891723633], "text": "Dear Valued Customer,\nThank you for registering with Database Mart! We are excited to embark on this journey with you and look forward to your first transaction with us.\nIn celebration of Independence Day, we are delighted to offer you exclusive promotional discounts as a welcome gift\u2014VPS, Dedicated Servers, and GPU Servers\u2014are all participating in this promotion. Plus, you can enjoy a free trial!\n\nVPS Servers: Up to 47% OFF\n  CPU RAM Storage Price\nExpress Plus Windows Server VPS 3 Cores 6GB 100GB Starts at $8.99/mo\nBasic Plus Windows Server VPS 6 Cores 12GB 180GB Starts at $16.11/mo\nProfessional Plus Windows Server VPS 8 Cores 24GB 280GB Starts at $26.99/mo\nBasic Windows Desktop VPS 4 Cores 8GB 140GB Starts at $7.19/mo\nBasic Plus Windows Desktop VPS 6 Cores 12GB 180GB Starts at $10.39/mo\nProfessional Linux VPS 8 Cores 18GB 240GB Starts at $12.79/mo\n\nGPU Servers: Up to 50% OFF\n  CPU RAM Storage Price\nExpress GPU VPS - K620 9 Cores 12GB 160GB Starts at $16.8/mo\nBasic GPU VPS - P600 12 Cores 16GB 200GB Starts at $23.2/mo\nProfessional GPU VPS - A4000 24 Cores 32GB 320GB Starts at $90.3/mo\nBasic GPU - K80 Eight-Core Xeon E5-2690 64GB 120GB+960GB SSD Starts at $87.20/mo\nBasic GPU - RTX 4060 Eight-Core E5-2690 64GB 120GB+960GB SSD Starts at $104.3/mo\nAdvanced GPU - A5000 Dual 12-Core E5-2697v2 128GB\n240GB SSD+2TB SSD\nStarts at $239/mo\nEnterprise GPU - A40 Dual 18-Core E5-2697v4 256GB\n240GB SSD + 2TB NVMe + 8TB SATA\nStarts at $439/mo\nDedicated Servers: Up to 70% OFF\n  CPU RAM Storage Price\nExpress Dedicated Server - SATA 4-Core E3-1230 16GB\n240GB SSD+5TB SATA\nStarts at $44.1/mo\nExpress Dedicated Server - SSD 4-Core E3-1230 32GB\n120GB SSD+960GB SSD\nStarts at $44.1/mo\nBasic Dedicated Server - NVMe 8-Core E5-2667v4 64GB\n240GB SSD+2 x 1TB NVMe+2TB SATA\nStarts at $71.2/mo\nProfessional Dedicated Server - RAID 4-Core E5-1630v4 128GB\n2x120GB SSD RAID1+2x960GB SSD/NVMe+3TB SATA\nStarts at $89.7/mo\n\nGet Discounts Now: https://www.databasemart.com/july-4th-promotion\nWe look forward to providing you with exceptional hosting services and supporting your needs every step of the way.\n ", "type": "body", "module_number": 0}, {"node_index": 1881, "embedding": [16.092721939086914, -31.376266479492188, -19.05086326599121, 1.8233184814453125, 22.79959487915039, 1.5352568626403809], "text": "AdaStruct@gmail.com", "type": "recipient", "module_number": 0}, {"node_index": 1882, "embedding": [3.209540367126465, -7.019253730773926, -15.260969161987305, 17.43748664855957, -13.948841094970703, 9.454904556274414], "text": "Jun 27, 2024, 9:36\u202fAM", "type": "date", "module_number": 0}, {"node_index": 1883, "embedding": [3.462352752685547, 8.858227729797363, -12.239566802978516, 4.76744270324707, -17.0391902923584, 12.271138191223145], "text": "[0A0-2E0D7D1C-0093] Upgrading to Professional GPU VPS - A4000 for the rest of the plan", "type": "subject", "module_number": 0}, {"node_index": 1884, "embedding": [13.818572044372559, -19.632484436035156, -17.90175437927246, 1.4402973651885986, 10.690559387207031, 4.904829025268555], "text": "billing@databasemart.com", "type": "sender", "module_number": 0}, {"node_index": 1885, "embedding": [-1.082474708557129, 26.31484031677246, -8.624258041381836, 7.6274213790893555, -34.091590881347656, 18.000486373901367], "text": "Done", "type": "body", "module_number": 0}, {"node_index": 1886, "embedding": [14.774862289428711, -25.032896041870117, -17.96758460998535, 1.0626261234283447, 17.106441497802734, 3.041471004486084], "text": "billing@databasemart.com", "type": "recipient", "module_number": 0}, {"node_index": 1887, "embedding": [1.5490261316299438, -1.968432903289795, -14.140364646911621, 17.961767196655273, -19.148561477661133, 10.732538223266602], "text": "Jun 26, 2024, 10:55\u202fPM", "type": "date", "module_number": 0}, {"node_index": 1888, "embedding": [5.292627811431885, 4.8451151847839355, -12.460395812988281, 2.760315418243408, -12.166961669921875, 11.599077224731445], "text": "New Customer Gift: Free Trial for Hosting Server", "type": "subject", "module_number": 0}, {"node_index": 1889, "embedding": [13.652772903442383, -15.839273452758789, -18.15984344482422, 0.5002943873405457, 7.396767616271973, 7.173849105834961], "text": "contact@databasemart.com", "type": "sender", "module_number": 0}, {"node_index": 1890, "embedding": [1.018933892250061, 37.781673431396484, -16.844573974609375, 3.1344876289367676, -42.660308837890625, 25.500267028808594], "text": "Hello valued client,\nWelcome to Database Mart! We noticed that you signed up with us but haven't deployed any services yet. To place an order, please go to https://www.databasemart.com/.\nIf you have difficulties deciding on a suitable plan for your project, feel free to share your server usage, application details, data size, and budget, and we'll assist you in finding the perfect fit. In addition, we're pleased to offer you a complimentary 24-hour free trial for you so you can explore our services.\nNeed customized configurations? Reply to us with more information and we'll see how we can help.\nThank you for choosing Database Mart! We look forward to serving you.\nBest Regards,\nDatabase Mart\n  Chat |\nSubmit Ticket|\nFAQ|\nHelp Document|\nFacebook|\nYouTube", "type": "body", "module_number": 0}, {"node_index": 1891, "embedding": [16.572980880737305, -31.166898727416992, -18.46530532836914, 0.22057247161865234, 23.507848739624023, 2.003664970397949], "text": "AdaStruct@gmail.com", "type": "recipient", "module_number": 0}, {"node_index": 1892, "embedding": [3.786501407623291, -7.64027738571167, -14.417219161987305, 15.897422790527344, -12.750905990600586, 9.479270935058594], "text": "Jun 26, 2024, 8:11\u202fPM", "type": "date", "module_number": 0}, {"node_index": 1893, "embedding": [5.538594722747803, 3.9947874546051025, -14.163052558898926, 5.1206583976745605, -13.701371192932129, 11.30290699005127], "text": "Welcome valued client! Get your services now!", "type": "subject", "module_number": 0}, {"node_index": 1894, "embedding": [13.728598594665527, -16.796863555908203, -20.171070098876953, 3.103424549102783, 5.8690032958984375, 6.960325241088867], "text": "contact@databasemart.com", "type": "sender", "module_number": 0}, {"node_index": 1895, "embedding": [1.653403401374817, 33.4266242980957, -18.630300521850586, 6.529385566711426, -41.77649688720703, 24.17980194091797], "text": "Hello valued client,\nCongratulations! You\u2019ve successfully signed up with Database Mart LLC. \nWe offer a variety of server hosting products, including VPS, GPU servers, and dedicated servers. Through our self-developed control panel, you can implement real-time server deployment, one-click reinstallation, server restart, and other operations. You can now order a service and get your project rolling.\nOrder Now\nIf you need our help in choosing the right product, please reply to this email and inform us of the server usage, budget, server configuration requirements, and any other necessary information. We provide support 24/7 and would love to serve you.\nSincerely,\nDatabase Mart LLC\n  Chat |\nSubmit Ticket|\nFAQ|\nHelp Document|\nFacebook|\nYouTube", "type": "body", "module_number": 0}, {"node_index": 1896, "embedding": [17.411922454833984, -33.49296569824219, -20.389019012451172, 2.2607617378234863, 23.016809463500977, 1.1640543937683105], "text": "AdaStruct@gmail.com", "type": "recipient", "module_number": 0}, {"node_index": 1897, "embedding": [4.862367153167725, -7.169436454772949, -16.911611557006836, 16.52744483947754, -14.245024681091309, 9.634574890136719], "text": "Jun 26, 2024, 4:10\u202fPM", "type": "date", "module_number": 0}, {"node_index": 1898, "embedding": [3.462352752685547, 8.858227729797363, -12.239566802978516, 4.76744270324707, -17.0391902923584, 12.271138191223145], "text": "[0A0-2E0D7D1C-0093] Upgrading to Professional GPU VPS - A4000 for the rest of the plan", "type": "subject", "module_number": 0}, {"node_index": 1899, "embedding": [13.786012649536133, -19.76930809020996, -18.013635635375977, 1.5813301801681519, 11.272041320800781, 4.716512203216553], "text": "support@databasemart.com", "type": "sender", "module_number": 0}, {"node_index": 1900, "embedding": [3.369131565093994, 20.936080932617188, -16.363750457763672, 4.848509788513184, -28.291351318359375, 18.857261657714844], "text": "you can first register an account on the new platform https://console.databasemart.com/\nDone. :)", "type": "body", "module_number": 0}, {"node_index": 1901, "embedding": [14.742301940917969, -25.169719696044922, -18.079463958740234, 1.2036595344543457, 17.68792152404785, 2.853154420852661], "text": "support@databasemart.com", "type": "recipient", "module_number": 0}, {"node_index": 1902, "embedding": [1.7597081661224365, -2.4208285808563232, -14.103271484375, 17.713735580444336, -18.77823829650879, 10.550558090209961], "text": "Jun 26, 2024, 2:54\u202fPM", "type": "date", "module_number": 0}, {"node_index": 1903, "embedding": [5.613945960998535, 3.8973095417022705, -14.905106544494629, 3.789445161819458, -11.297012329101562, 11.324041366577148], "text": "Security alert", "type": "subject", "module_number": 0}, {"node_index": 1904, "embedding": [13.61390495300293, -14.790281295776367, -20.99931526184082, 2.003628969192505, 4.341452598571777, 7.881521701812744], "text": "no-reply@accounts.google.com", "type": "sender", "module_number": 0}, {"node_index": 1905, "embedding": [1.7850903272628784, 35.26359176635742, -19.18946647644043, 4.207516193389893, -40.808101654052734, 24.687891006469727], "text": "Google Drive for desktop was granted access to your Google Account\nadastruct@gmail.com\n\nIf you did not grant access, you should check this activity and secure your account.\nCheck activity\nYou can also see security activity at\nhttps://myaccount.google.com/notifications\nYou received this email to let you know about important changes to your Google Account and services.\n\u00a9 2024 Google Ireland Ltd., Gordon House, Barrow Street, Dublin 4, Ireland", "type": "body", "module_number": 0}, {"node_index": 1906, "embedding": [18.94366455078125, -36.839385986328125, -21.868785858154297, -0.08421538025140762, 28.9234561920166, 0.3867805004119873], "text": "adastruct@gmail.com", "type": "recipient", "module_number": 0}, {"node_index": 1907, "embedding": [3.78901743888855, -7.6923418045043945, -16.988916397094727, 17.4007625579834, -12.817045211791992, 9.568721771240234], "text": "Jun 26, 2024, 12:21\u202fPM", "type": "date", "module_number": 0}, {"node_index": 1908, "embedding": [3.462352752685547, 8.858227729797363, -12.239566802978516, 4.76744270324707, -17.0391902923584, 12.271138191223145], "text": "[0A0-2E0D7D1C-0093] Upgrading to Professional GPU VPS - A4000 for the rest of the plan", "type": "subject", "module_number": 0}, {"node_index": 1909, "embedding": [13.786012649536133, -19.76930809020996, -18.013635635375977, 1.5813301801681519, 11.272041320800781, 4.716512203216553], "text": "support@databasemart.com", "type": "sender", "module_number": 0}, {"node_index": 1910, "embedding": [-1.1486963033676147, 40.33174133300781, -15.85709285736084, 5.722145080566406, -46.30128479003906, 25.303178787231445], "text": "Hey,\n\n1) Now you are using our Basic Dedicated GPU Server-K40, its GPU module is M40, and the RAM is 64GB.\nOk. Thanks for the heads-up. I checked again and we are not really limited by RAM, so 32G RAM would be ok.\n\n2) Would you still would like to change the plan from the current Basic Dedicated GPU Server-K40 to our Professional GPU VPS - A4000 and keep the new plan until July 2025? If yes, we will help you place a new Professional GPU VPS - A4000 order with Ubuntu 20 OS. Is that alfight for you? \nYes, perfect. Thank you so much.\n\nBest,\nDamien", "type": "body", "module_number": 0}, {"node_index": 1911, "embedding": [14.742301940917969, -25.169719696044922, -18.079463958740234, 1.2036595344543457, 17.68792152404785, 2.853154420852661], "text": "support@databasemart.com", "type": "recipient", "module_number": 0}, {"node_index": 1912, "embedding": [2.0004372596740723, -3.9094181060791016, -14.296184539794922, 18.019987106323242, -17.473407745361328, 10.179338455200195], "text": "Jun 26, 2024, 3:39\u202fAM", "type": "date", "module_number": 0}, {"node_index": 1913, "embedding": [5.780661106109619, 1.7580536603927612, -13.09611701965332, 4.148922920227051, -13.539080619812012, 10.464933395385742], "text": "Upgrading to Professional GPU VPS - A4000 for the rest of the plan", "type": "subject", "module_number": 0}, {"node_index": 1914, "embedding": [16.700782775878906, -29.65633201599121, -19.727304458618164, 1.7703509330749512, 15.393646240234375, 3.003533124923706], "text": "adastruct@gmail.com", "type": "sender", "module_number": 0}, {"node_index": 1915, "embedding": [2.2145020961761475, 30.191390991210938, -17.399168014526367, 5.033918380737305, -40.40199279785156, 22.65694236755371], "text": "Hi,\nThanks for reaching us.\nYes if you would like to upgrade the performance of current server, the GPU VPS A4000 seems not being a good choice for you.  First of all, GPU VPS servers shares the resources on the same hosts, moreover, the GPU VPS server comes with less RAM and disk resources. Advanced dedicated GPU server A4000 should fit your request better than VPS.\nPlease let us know if you are interested or you insist to upgrade the server to GPU VPS A4000.\n  Sincerely,\n\nJonathan L\nDatabase Mart Support Department\nhttp://www.databasemart.com\n  From: Ada Struct <adastruct@gmail.com>\nSent: Tue, 25 Jun 2024 08:05:32 -0500\nTo: Database Mart LLC <support@databasemart.com>\nSubject: Upgrading to Professional GPU VPS - A4000 for the rest of the plan", "type": "body", "module_number": 0}, {"node_index": 1916, "embedding": [17.08565330505371, -31.999351501464844, -19.692947387695312, 1.5579400062561035, 18.986083984375, 2.120443820953369], "text": "adastruct@gmail.com", "type": "recipient", "module_number": 0}, {"node_index": 1917, "embedding": [16.30571174621582, -30.591943740844727, -18.87364387512207, 1.3070363998413086, 18.588253021240234, 1.9214359521865845], "text": "support@databasemart.com", "type": "recipient", "module_number": 0}, {"node_index": 1918, "embedding": [4.787155628204346, -11.589923858642578, -15.444416999816895, 16.633699417114258, -12.43045425415039, 8.22756290435791], "text": "Jun 25, 2024, 3:01\u202fPM", "type": "date", "module_number": 0}, {"node_index": 1919, "embedding": [5.909665107727051, 3.42453670501709, -14.125934600830078, 3.9641687870025635, -12.272905349731445, 11.301592826843262], "text": "Critical security alert", "type": "subject", "module_number": 0}, {"node_index": 1920, "embedding": [13.452495574951172, -15.234749794006348, -20.013999938964844, 2.8855855464935303, 2.873426914215088, 7.937228679656982], "text": "no-reply@accounts.google.com", "type": "sender", "module_number": 0}, {"node_index": 1921, "embedding": [2.1532599925994873, 33.25666809082031, -18.450551986694336, 4.766345024108887, -40.41633605957031, 24.185047149658203], "text": "Sign-in attempt was blocked\nadastruct@gmail.com\nSomeone just used your password to try to sign in to your account. Google blocked them, but you should check what happened.\nCheck activity\nYou can also see security activity at\nhttps://myaccount.google.com/notifications\nYou received this email to let you know about important changes to your Google Account and services.\n\u00a9 2024 Google Ireland Ltd., Gordon House, Barrow Street, Dublin 4, Ireland", "type": "body", "module_number": 0}, {"node_index": 1922, "embedding": [18.53432846069336, -35.308509826660156, -20.978822708129883, 0.6686646342277527, 25.76494026184082, 1.1117610931396484], "text": "adastruct@gmail.com", "type": "recipient", "module_number": 0}, {"node_index": 1923, "embedding": [3.93160343170166, -6.799826145172119, -16.275005340576172, 17.1683292388916, -14.655889511108398, 10.131271362304688], "text": "Jun 25, 2024, 3:50\u202fPM", "type": "date", "module_number": 0}, {"node_index": 1924, "embedding": [5.613945960998535, 3.8973095417022705, -14.905106544494629, 3.789445161819458, -11.297012329101562, 11.324041366577148], "text": "Security alert", "type": "subject", "module_number": 0}, {"node_index": 1925, "embedding": [13.61390495300293, -14.790281295776367, -20.99931526184082, 2.003628969192505, 4.341452598571777, 7.881521701812744], "text": "no-reply@accounts.google.com", "type": "sender", "module_number": 0}, {"node_index": 1926, "embedding": [1.7850903272628784, 35.26359176635742, -19.18946647644043, 4.207516193389893, -40.808101654052734, 24.687891006469727], "text": "Google Drive for desktop was granted access to your Google Account\nadastruct@gmail.com\n\nIf you did not grant access, you should check this activity and secure your account.\nCheck activity\nYou can also see security activity at\nhttps://myaccount.google.com/notifications\nYou received this email to let you know about important changes to your Google Account and services.\n\u00a9 2024 Google Ireland Ltd., Gordon House, Barrow Street, Dublin 4, Ireland", "type": "body", "module_number": 0}, {"node_index": 1927, "embedding": [18.94366455078125, -36.839385986328125, -21.868785858154297, -0.08421538025140762, 28.9234561920166, 0.3867805004119873], "text": "adastruct@gmail.com", "type": "recipient", "module_number": 0}, {"node_index": 1928, "embedding": [3.7569079399108887, -7.122787952423096, -16.951879501342773, 17.2497615814209, -13.24075984954834, 9.784404754638672], "text": "Jun 24, 2024, 7:12\u202fPM", "type": "date", "module_number": 0}, {"node_index": 1929, "embedding": [4.96303129196167, 4.701374530792236, -12.391755104064941, 3.559567928314209, -12.261053085327148, 10.869378089904785], "text": "Hi Ada, we noticed a new sign in to your Dropbox account", "type": "subject", "module_number": 0}, {"node_index": 1930, "embedding": [13.12296199798584, -16.58163833618164, -18.242572784423828, 2.240633487701416, 5.715152740478516, 6.650875091552734], "text": "no-reply@dropbox.com", "type": "sender", "module_number": 0}, {"node_index": 1931, "embedding": [1.8231688737869263, 28.417118072509766, -16.210081100463867, 5.015458106994629, -34.85198974609375, 21.30634117126465], "text": "Hi Ada,\n\nA new web browser just signed in to your Dropbox account. To help keep your account secure, let us know if this is you.\n\nIs this you?\nWhen: Jun 24, 2024 at 6:53 pm (CEST)\nWhat: Firefox on Ubuntu\nYes\nNo\n\n\n\nI'm not sure\n\nLearn more on how to protect your account.\n\nThanks,\n- The Dropbox Team\n\u00a9 2024 Dropbox", "type": "body", "module_number": 0}, {"node_index": 1932, "embedding": [17.014890670776367, -32.01225662231445, -19.070154190063477, 0.5926711559295654, 23.665210723876953, 1.4298560619354248], "text": "adastruct@gmail.com", "type": "recipient", "module_number": 0}, {"node_index": 1933, "embedding": [4.183853626251221, -9.096049308776855, -14.833288192749023, 16.021669387817383, -10.823944091796875, 8.391179084777832], "text": "Jun 24, 2024, 6:53\u202fPM", "type": "date", "module_number": 0}, {"node_index": 1934, "embedding": [5.051392555236816, 4.506109714508057, -12.81260871887207, 3.811891555786133, -12.235292434692383, 11.096038818359375], "text": "Hi Ada, finish login with your Dropbox security code", "type": "subject", "module_number": 0}, {"node_index": 1935, "embedding": [13.488454818725586, -17.40225601196289, -18.7072811126709, 2.309992551803589, 6.575150489807129, 6.600994110107422], "text": "no-reply@dropbox.com", "type": "sender", "module_number": 0}, {"node_index": 1936, "embedding": [1.5809377431869507, 30.817289352416992, -16.881778717041016, 5.174404144287109, -37.37117004394531, 22.646162033081055], "text": "Hi Ada,\n\nFinish signing in to Dropbox with this one-time security code:\n\n775908\n\nWe noticed there was an attempt of signing in to your Dropbox account.\n\nSign-In details:\nDevice: Firefox unter Ubuntu\nTime: Jun 24, 2024 at 6:51 pm (CEST)\nLocation: In der N\u00e4he von Berlin, Land Berlin, Germany\nIP: 2003:f9:8725:8c00:33d4:7cec:5000:df95\n\nWe encourage you to download the latest Dropbox mobile app and Dropbox desktop app so you can use them to receive the one-time security code in a safe and convenient way.\n\nIf you didn\u2019t try to sign in, you can report this suspicious login by clicking this link.\n\u00a9 2024 Dropbox", "type": "body", "module_number": 0}, {"node_index": 1937, "embedding": [17.433706283569336, -33.470481872558594, -19.586328506469727, 0.6487530469894409, 25.142024993896484, 1.1626842021942139], "text": "adastruct@gmail.com", "type": "recipient", "module_number": 0}, {"node_index": 1938, "embedding": [4.185725688934326, -10.297629356384277, -15.104501724243164, 16.807313919067383, -10.375207901000977, 8.354924201965332], "text": "Jun 24, 2024, 6:51\u202fPM", "type": "date", "module_number": 0}, {"node_index": 1939, "embedding": [5.053056716918945, 2.9717907905578613, -8.223203659057617, 2.991804599761963, -10.970338821411133, 8.985418319702148], "text": "Best\u00e4tigungs-Code f\u00fcr Slack: YTD-ADI", "type": "subject", "module_number": 0}, {"node_index": 1940, "embedding": [11.03105354309082, -9.345769882202148, -12.955329895019531, 2.0065689086914062, -1.0908232927322388, 7.214881896972656], "text": "no-reply-k4JOhHnaAIHB1TJGX6pqGAcz@slack.com", "type": "sender", "module_number": 0}, {"node_index": 1941, "embedding": [2.0459465980529785, 21.939022064208984, -9.654284477233887, 4.54384708404541, -29.369579315185547, 16.943647384643555], "text": "Best\u00e4tige deine E-Mail-Adresse\nDu findest deinen Best\u00e4tigungscode unten \u2013 gib ihn in deinem ge\u00f6ffneten Browser-Fenster ein und wir helfen dir bei der Anmeldung.\nYTD-ADI\nWenn du diese E-Mail nicht angefordert hast, gibt es keinen Grund zur Sorge \u2013 du kannst sie getrost ignorieren.\nUnser Blog   |   Richtlinien   |   Support-Center   |   Slack-Community\n\n\u00a92024 Slack Technologies LLC, ein Salesforce-Unternehmen.\n415 Mission Street, San Francisco, CA 94105\n\nAlle Rechte vorbehalten.", "type": "body", "module_number": 0}, {"node_index": 1942, "embedding": [17.155550003051758, -33.80406188964844, -15.595198631286621, -0.15560120344161987, 25.728670120239258, -0.3541872501373291], "text": "adastruct@gmail.com", "type": "recipient", "module_number": 0}, {"node_index": 1943, "embedding": [2.9191982746124268, -6.07366418838501, -9.586090087890625, 15.879682540893555, -14.400701522827148, 7.770538330078125], "text": "Jun 24, 2024, 1:29\u202fPM", "type": "date", "module_number": 0}, {"node_index": 1944, "embedding": [5.613945960998535, 3.8973095417022705, -14.905106544494629, 3.789445161819458, -11.297012329101562, 11.324041366577148], "text": "Security alert", "type": "subject", "module_number": 0}, {"node_index": 1945, "embedding": [13.61390495300293, -14.790281295776367, -20.99931526184082, 2.003628969192505, 4.341452598571777, 7.881521701812744], "text": "no-reply@accounts.google.com", "type": "sender", "module_number": 0}, {"node_index": 1946, "embedding": [1.7850903272628784, 35.26359176635742, -19.18946647644043, 4.207516193389893, -40.808101654052734, 24.687891006469727], "text": "Google Drive for desktop was granted access to your Google Account\nadastruct@gmail.com\n\nIf you did not grant access, you should check this activity and secure your account.\nCheck activity\nYou can also see security activity at\nhttps://myaccount.google.com/notifications\nYou received this email to let you know about important changes to your Google Account and services.\n\u00a9 2024 Google Ireland Ltd., Gordon House, Barrow Street, Dublin 4, Ireland", "type": "body", "module_number": 0}, {"node_index": 1947, "embedding": [18.94366455078125, -36.839385986328125, -21.868785858154297, -0.08421538025140762, 28.9234561920166, 0.3867805004119873], "text": "adastruct@gmail.com", "type": "recipient", "module_number": 0}, {"node_index": 1948, "embedding": [3.602372407913208, -6.828498363494873, -16.85605812072754, 17.40288734436035, -13.505526542663574, 9.85270881652832], "text": "Jun 23, 2024, 2:30\u202fPM", "type": "date", "module_number": 0}, {"node_index": 1949, "embedding": [4.753817081451416, 4.332765102386475, -8.48050308227539, 3.124953269958496, -10.995044708251953, 9.328506469726562], "text": "Best\u00e4tigungs-Code f\u00fcr Slack: MJQ-3DA", "type": "subject", "module_number": 0}, {"node_index": 1950, "embedding": [11.494307518005371, -11.689488410949707, -12.940258026123047, 1.8178551197052002, 2.760979413986206, 6.003998279571533], "text": "no-reply-AFxbgqzqdjidVZaUCw2txTBh@slack.com", "type": "sender", "module_number": 0}, {"node_index": 1951, "embedding": [1.6198927164077759, 23.706050872802734, -9.949503898620605, 4.746603965759277, -29.890153884887695, 17.450801849365234], "text": "Best\u00e4tige deine E-Mail-Adresse\nDu findest deinen Best\u00e4tigungscode unten \u2013 gib ihn in deinem ge\u00f6ffneten Browser-Fenster ein und wir helfen dir bei der Anmeldung.\nMJQ-3DA\nWenn du diese E-Mail nicht angefordert hast, gibt es keinen Grund zur Sorge \u2013 du kannst sie getrost ignorieren.\nUnser Blog   |   Richtlinien   |   Support-Center   |   Slack-Community\n\n\u00a92024 Slack Technologies LLC, ein Salesforce-Unternehmen.\n415 Mission Street, San Francisco, CA 94105\n\nAlle Rechte vorbehalten.", "type": "body", "module_number": 0}, {"node_index": 1952, "embedding": [17.2455997467041, -34.202484130859375, -15.999600410461426, -0.056841619312763214, 27.300674438476562, -0.5338535308837891], "text": "adastruct@gmail.com", "type": "recipient", "module_number": 0}, {"node_index": 1953, "embedding": [2.6191623210906982, -6.5136284828186035, -10.061074256896973, 16.776124954223633, -13.392484664916992, 7.649301052093506], "text": "Jun 23, 2024, 12:28\u202fAM", "type": "date", "module_number": 0}, {"node_index": 1954, "embedding": [5.909665107727051, 3.42453670501709, -14.125934600830078, 3.9641687870025635, -12.272905349731445, 11.301592826843262], "text": "Critical security alert", "type": "subject", "module_number": 0}, {"node_index": 1955, "embedding": [13.452495574951172, -15.234749794006348, -20.013999938964844, 2.8855855464935303, 2.873426914215088, 7.937228679656982], "text": "no-reply@accounts.google.com", "type": "sender", "module_number": 0}, {"node_index": 1956, "embedding": [2.1532599925994873, 33.25666809082031, -18.450551986694336, 4.766345024108887, -40.41633605957031, 24.185047149658203], "text": "Sign-in attempt was blocked\nadastruct@gmail.com\nSomeone just used your password to try to sign in to your account. Google blocked them, but you should check what happened.\nCheck activity\nYou can also see security activity at\nhttps://myaccount.google.com/notifications\nYou received this email to let you know about important changes to your Google Account and services.\n\u00a9 2024 Google Ireland Ltd., Gordon House, Barrow Street, Dublin 4, Ireland", "type": "body", "module_number": 0}, {"node_index": 1957, "embedding": [18.53432846069336, -35.308509826660156, -20.978822708129883, 0.6686646342277527, 25.76494026184082, 1.1117610931396484], "text": "adastruct@gmail.com", "type": "recipient", "module_number": 0}, {"node_index": 1958, "embedding": [5.162890434265137, -13.000903129577637, -16.292543411254883, 17.18671989440918, -8.970580101013184, 7.973998546600342], "text": "Jun 22, 2024, 10:59\u202fAM", "type": "date", "module_number": 0}, {"node_index": 1959, "embedding": [5.613945960998535, 3.8973095417022705, -14.905106544494629, 3.789445161819458, -11.297012329101562, 11.324041366577148], "text": "Security alert", "type": "subject", "module_number": 0}, {"node_index": 1960, "embedding": [13.61390495300293, -14.790281295776367, -20.99931526184082, 2.003628969192505, 4.341452598571777, 7.881521701812744], "text": "no-reply@accounts.google.com", "type": "sender", "module_number": 0}, {"node_index": 1961, "embedding": [-0.3489919900894165, 15.7989501953125, 0.8259349465370178, 5.620759963989258, -19.940093994140625, 9.858896255493164], "text": "", "type": "body", "module_number": 0}, {"node_index": 1962, "embedding": [18.94366455078125, -36.839385986328125, -21.868785858154297, -0.08421538025140762, 28.9234561920166, 0.3867805004119873], "text": "adastruct@gmail.com", "type": "recipient", "module_number": 0}, {"node_index": 1963, "embedding": [4.097898960113525, -9.001529693603516, -17.116052627563477, 17.389448165893555, -11.669493675231934, 9.198749542236328], "text": "Jun 22, 2024, 12:17\u202fAM", "type": "date", "module_number": 0}, {"node_index": 1964, "embedding": [4.96303129196167, 4.701374530792236, -12.391755104064941, 3.559567928314209, -12.261053085327148, 10.869378089904785], "text": "Hi Ada, we noticed a new sign in to your Dropbox account", "type": "subject", "module_number": 0}, {"node_index": 1965, "embedding": [13.12296199798584, -16.58163833618164, -18.242572784423828, 2.240633487701416, 5.715152740478516, 6.650875091552734], "text": "no-reply@dropbox.com", "type": "sender", "module_number": 0}, {"node_index": 1966, "embedding": [1.8731297254562378, 28.425811767578125, -16.284326553344727, 5.000339031219482, -34.86117172241211, 21.36070442199707], "text": "Hi Ada,\n\nA new web browser just signed in to your Dropbox account. To help keep your account secure, let us know if this is you.\n\nIs this you?\nWhen: Jun 21, 2024 at 11:25 am (CEST)\nWhat: Chrome on Mac OS X\nYes\nNo\n\n\n\nI'm not sure\n\nLearn more on how to protect your account.\n\nThanks,\n- The Dropbox Team\n\u00a9 2024 Dropbox", "type": "body", "module_number": 0}, {"node_index": 1967, "embedding": [17.014890670776367, -32.01225662231445, -19.070154190063477, 0.5926711559295654, 23.665210723876953, 1.4298560619354248], "text": "adastruct@gmail.com", "type": "recipient", "module_number": 0}, {"node_index": 1968, "embedding": [4.8803582191467285, -13.22329044342041, -14.712882995605469, 16.18294906616211, -6.939986228942871, 6.951568603515625], "text": "Jun 21, 2024, 11:25\u202fAM", "type": "date", "module_number": 0}, {"node_index": 1969, "embedding": [5.051392555236816, 4.506109714508057, -12.81260871887207, 3.811891555786133, -12.235292434692383, 11.096038818359375], "text": "Hi Ada, finish login with your Dropbox security code", "type": "subject", "module_number": 0}, {"node_index": 1970, "embedding": [13.488454818725586, -17.40225601196289, -18.7072811126709, 2.309992551803589, 6.575150489807129, 6.600994110107422], "text": "no-reply@dropbox.com", "type": "sender", "module_number": 0}, {"node_index": 1971, "embedding": [1.5645078420639038, 30.756654739379883, -16.867952346801758, 5.2285614013671875, -37.3555908203125, 22.609079360961914], "text": "Hi Ada,\n\nFinish signing in to Dropbox with this one-time security code:\n\n152431\n\nWe noticed there was an attempt of signing in to your Dropbox account.\n\nSign-In details:\nDevice: Chrome unter Mac OS X\nTime: Jun 21, 2024 at 11:23 am (CEST)\nLocation: In der N\u00e4he von Berlin, Land Berlin, Germany\nIP: 2003:d4:7713:5230:8825:3fb1:5eaa:e17f\n\nWe encourage you to download the latest Dropbox mobile app and Dropbox desktop app so you can use them to receive the one-time security code in a safe and convenient way.\n\nIf you didn\u2019t try to sign in, you can report this suspicious login by clicking this link.\n\u00a9 2024 Dropbox", "type": "body", "module_number": 0}, {"node_index": 1972, "embedding": [17.433706283569336, -33.470481872558594, -19.586328506469727, 0.6487530469894409, 25.142024993896484, 1.1626842021942139], "text": "adastruct@gmail.com", "type": "recipient", "module_number": 0}, {"node_index": 1973, "embedding": [4.494280815124512, -11.847824096679688, -15.108518600463867, 16.853612899780273, -8.91900634765625, 7.794950485229492], "text": "Jun 21, 2024, 11:24\u202fAM", "type": "date", "module_number": 0}, {"node_index": 1974, "embedding": [5.613945960998535, 3.8973095417022705, -14.905106544494629, 3.789445161819458, -11.297012329101562, 11.324041366577148], "text": "Security alert", "type": "subject", "module_number": 0}, {"node_index": 1975, "embedding": [13.61390495300293, -14.790281295776367, -20.99931526184082, 2.003628969192505, 4.341452598571777, 7.881521701812744], "text": "no-reply@accounts.google.com", "type": "sender", "module_number": 0}, {"node_index": 1976, "embedding": [1.7850903272628784, 35.26359176635742, -19.18946647644043, 4.207516193389893, -40.808101654052734, 24.687891006469727], "text": "Google Drive for desktop was granted access to your Google Account\nadastruct@gmail.com\n\nIf you did not grant access, you should check this activity and secure your account.\nCheck activity\nYou can also see security activity at\nhttps://myaccount.google.com/notifications\nYou received this email to let you know about important changes to your Google Account and services.\n\u00a9 2024 Google Ireland Ltd., Gordon House, Barrow Street, Dublin 4, Ireland", "type": "body", "module_number": 0}, {"node_index": 1977, "embedding": [18.94366455078125, -36.839385986328125, -21.868785858154297, -0.08421538025140762, 28.9234561920166, 0.3867805004119873], "text": "adastruct@gmail.com", "type": "recipient", "module_number": 0}, {"node_index": 1978, "embedding": [3.7168235778808594, -7.065602779388428, -16.954113006591797, 17.205671310424805, -13.148927688598633, 9.778799057006836], "text": "Jun 20, 2024, 10:52\u202fAM", "type": "date", "module_number": 0}, {"node_index": 1979, "embedding": [5.613945960998535, 3.8973095417022705, -14.905106544494629, 3.789445161819458, -11.297012329101562, 11.324041366577148], "text": "Security alert", "type": "subject", "module_number": 0}, {"node_index": 1980, "embedding": [13.61390495300293, -14.790281295776367, -20.99931526184082, 2.003628969192505, 4.341452598571777, 7.881521701812744], "text": "no-reply@accounts.google.com", "type": "sender", "module_number": 0}, {"node_index": 1981, "embedding": [1.7850903272628784, 35.26359176635742, -19.18946647644043, 4.207516193389893, -40.808101654052734, 24.687891006469727], "text": "Google Drive for desktop was granted access to your Google Account\nadastruct@gmail.com\n\nIf you did not grant access, you should check this activity and secure your account.\nCheck activity\nYou can also see security activity at\nhttps://myaccount.google.com/notifications\nYou received this email to let you know about important changes to your Google Account and services.\n\u00a9 2024 Google Ireland Ltd., Gordon House, Barrow Street, Dublin 4, Ireland", "type": "body", "module_number": 0}, {"node_index": 1982, "embedding": [18.94366455078125, -36.839385986328125, -21.868785858154297, -0.08421538025140762, 28.9234561920166, 0.3867805004119873], "text": "adastruct@gmail.com", "type": "recipient", "module_number": 0}, {"node_index": 1983, "embedding": [4.1653361320495605, -8.980045318603516, -17.086992263793945, 17.27520751953125, -11.697988510131836, 9.206796646118164], "text": "Jun 19, 2024, 4:37\u202fPM", "type": "date", "module_number": 0}, {"node_index": 1984, "embedding": [5.613945960998535, 3.8973095417022705, -14.905106544494629, 3.789445161819458, -11.297012329101562, 11.324041366577148], "text": "Security alert", "type": "subject", "module_number": 0}, {"node_index": 1985, "embedding": [13.61390495300293, -14.790281295776367, -20.99931526184082, 2.003628969192505, 4.341452598571777, 7.881521701812744], "text": "no-reply@accounts.google.com", "type": "sender", "module_number": 0}, {"node_index": 1986, "embedding": [1.7850903272628784, 35.26359176635742, -19.18946647644043, 4.207516193389893, -40.808101654052734, 24.687891006469727], "text": "Google Drive for desktop was granted access to your Google Account\nadastruct@gmail.com\n\nIf you did not grant access, you should check this activity and secure your account.\nCheck activity\nYou can also see security activity at\nhttps://myaccount.google.com/notifications\nYou received this email to let you know about important changes to your Google Account and services.\n\u00a9 2024 Google Ireland Ltd., Gordon House, Barrow Street, Dublin 4, Ireland", "type": "body", "module_number": 0}, {"node_index": 1987, "embedding": [18.94366455078125, -36.839385986328125, -21.868785858154297, -0.08421538025140762, 28.9234561920166, 0.3867805004119873], "text": "adastruct@gmail.com", "type": "recipient", "module_number": 0}, {"node_index": 1988, "embedding": [3.9075980186462402, -8.093506813049316, -17.166006088256836, 17.537151336669922, -12.462499618530273, 9.518622398376465], "text": "Jun 18, 2024, 6:18\u202fPM", "type": "date", "module_number": 0}, {"node_index": 1989, "embedding": [4.633361339569092, 5.5574631690979, -12.263568878173828, 3.725336790084839, -13.207884788513184, 11.091280937194824], "text": "You've connected a new app to Dropbox", "type": "subject", "module_number": 0}, {"node_index": 1990, "embedding": [12.530525207519531, -14.877670288085938, -18.006616592407227, 2.5936262607574463, 3.657029628753662, 7.216871738433838], "text": "no-reply@dropbox.com", "type": "sender", "module_number": 0}, {"node_index": 1991, "embedding": [2.2703564167022705, 26.053699493408203, -15.923039436340332, 4.635247707366943, -32.59223937988281, 20.419530868530273], "text": "Hi Ada,\n\nYou've connected a new app, ProgPrak, to your Dropbox account.\n\nYou can manage this and any other apps you've connected by visiting your account page.\n\nDiscover and connect more new apps that work with Dropbox on App Center!\n\n\u2014The Dropbox Team\n\u00a9 2024 Dropbox", "type": "body", "module_number": 0}, {"node_index": 1992, "embedding": [16.45067024230957, -30.466705322265625, -18.837730407714844, 0.9397153258323669, 21.744306564331055, 1.9443126916885376], "text": "adastruct@gmail.com", "type": "recipient", "module_number": 0}, {"node_index": 1993, "embedding": [4.816103935241699, -13.556203842163086, -14.567055702209473, 16.253921508789062, -6.933994293212891, 6.822420120239258], "text": "Jun 18, 2024, 12:54\u202fAM", "type": "date", "module_number": 0}, {"node_index": 1994, "embedding": [4.96303129196167, 4.701374530792236, -12.391755104064941, 3.559567928314209, -12.261053085327148, 10.869378089904785], "text": "Hi Ada, we noticed a new sign in to your Dropbox account", "type": "subject", "module_number": 0}, {"node_index": 1995, "embedding": [13.12296199798584, -16.58163833618164, -18.242572784423828, 2.240633487701416, 5.715152740478516, 6.650875091552734], "text": "no-reply@dropbox.com", "type": "sender", "module_number": 0}, {"node_index": 1996, "embedding": [1.991263747215271, 28.25704002380371, -16.340309143066406, 4.876053810119629, -34.6660270690918, 21.352811813354492], "text": "Hi Ada,\n\nA new web browser just signed in to your Dropbox account. To help keep your account secure, let us know if this is you.\n\nIs this you?\nWhen: Jun 17, 2024 at 9:38 pm (CEST)\nWhat: Chrome on Windows\nYes\nNo\n\n\n\nI'm not sure\n\nLearn more on how to protect your account.\n\nThanks,\n- The Dropbox Team\n\u00a9 2024 Dropbox", "type": "body", "module_number": 0}, {"node_index": 1997, "embedding": [17.014890670776367, -32.01225662231445, -19.070154190063477, 0.5926711559295654, 23.665210723876953, 1.4298560619354248], "text": "adastruct@gmail.com", "type": "recipient", "module_number": 0}, {"node_index": 1998, "embedding": [4.059493064880371, -7.580833911895752, -14.858338356018066, 15.614710807800293, -11.9766845703125, 8.854527473449707], "text": "Jun 17, 2024, 9:39\u202fPM", "type": "date", "module_number": 0}, {"node_index": 1999, "embedding": [5.051392555236816, 4.506109714508057, -12.81260871887207, 3.811891555786133, -12.235292434692383, 11.096038818359375], "text": "Hi Ada, finish login with your Dropbox security code", "type": "subject", "module_number": 0}, {"node_index": 2000, "embedding": [13.488454818725586, -17.40225601196289, -18.7072811126709, 2.309992551803589, 6.575150489807129, 6.600994110107422], "text": "no-reply@dropbox.com", "type": "sender", "module_number": 0}, {"node_index": 2001, "embedding": [1.5380240678787231, 31.179336547851562, -16.882360458374023, 5.094032287597656, -37.598018646240234, 22.776458740234375], "text": "Hi Ada,\n\nFinish signing in to Dropbox with this one-time security code:\n\n797590\n\nWe noticed there was an attempt of signing in to your Dropbox account.\n\nSign-In details:\nDevice: Chrome unter Windows\nTime: Jun 17, 2024 at 9:33 pm (CEST)\nLocation: In der N\u00e4he von Berlin, Land Berlin, Germany\nIP: 2001:9e8:1d4:9000:7071:692b:fde2:aa6a\n\nWe encourage you to download the latest Dropbox mobile app and Dropbox desktop app so you can use them to receive the one-time security code in a safe and convenient way.\n\nIf you didn\u2019t try to sign in, you can report this suspicious login by clicking this link.\n\u00a9 2024 Dropbox", "type": "body", "module_number": 0}, {"node_index": 2002, "embedding": [17.433706283569336, -33.470481872558594, -19.586328506469727, 0.6487530469894409, 25.142024993896484, 1.1626842021942139], "text": "adastruct@gmail.com", "type": "recipient", "module_number": 0}, {"node_index": 2003, "embedding": [3.814521312713623, -7.415140628814697, -15.150267601013184, 16.351083755493164, -12.731344223022461, 9.285987854003906], "text": "Jun 17, 2024, 9:33\u202fPM", "type": "date", "module_number": 0}, {"node_index": 2004, "embedding": [4.0411176681518555, 4.186790943145752, -9.9467134475708, 3.379088878631592, -10.516902923583984, 10.293237686157227], "text": "Colab: Thank you", "type": "subject", "module_number": 0}, {"node_index": 2005, "embedding": [11.621481895446777, -15.092317581176758, -15.281294822692871, 2.1274657249450684, 5.350565433502197, 6.680444240570068], "text": "payments-noreply@google.com", "type": "sender", "module_number": 0}, {"node_index": 2006, "embedding": [-0.9340208172798157, 39.41402053833008, -14.222668647766113, 3.915825843811035, -42.43223190307617, 24.68802833557129], "text": "Thank you\nYou've made a purchase associated with Colab.\n\nIf you purchased a subscription, you can cancel or manage that subscription by signing in to payments.google.com and selecting Subscriptions & services. If you experience any problems canceling or managing your subscription, you can email colab-billing@google.com.\n\nAny compute units associated with this purchase will expire after 90 days.\n\nTo learn how to make the most of your purchase, please see our guide. To better understand the amount you have been charged, please see our frequently asked questions.\n\nFor additional information, please see the terms of service which are applicable to this purchase.\n\n\u2013The Colab team\n\nColab\nJune 17, 2024 at 9:41:45\u202fAM PDT\nITEM QUANTITY PRICE\nColab Pro+ 1 \u20ac42.25\nYou will be automatically charged the subscription cost (currently \u20ac42.25 plus any applicable tax every month) until you cancel your subscription. Auto-renews on July 17, 2024.\nVAT (19%)   \u20ac8.03\nTotal\u20ac50.28\nPayment method\nVisa  \u2022\u2006\u2022\u2006\u2022\u2006\u2022\u20069641\nOrder number\nCOLSUB.7158-2819-5836-58605.55\n View Online \nBy subscribing, you authorize us to charge you the subscription cost automatically each billing period (as described above) to the payment method provided above until canceled. Learn how to cancel. Keep this for your records.\nYou've made this purchase from:\nGoogle Commerce Limited\nGordon House\nBarrow Street\nDublin 4\nIreland\nWithdrawal Rights for Services: If you're an EEA-based consumer, you have the right to withdraw from this contract within 14 days without giving any reason. The withdrawal period will expire after 14 days from the day of the conclusion of the contract. Please see the attached Terms of Service for more information.\nLegal Guarantee: If you're an EEA-based consumer of digital content, services, or goods, and you've agreed to the Colab Terms of Service, then EEA consumer laws provide you with a legal guarantee. Under this guarantee, we're liable for any lack of conformity that you discover:\n\u2022 Within two years of the delivery of goods (such as a phone) or the one-time supply of digital content or services (such as purchasing a movie)\n\u2022 At any time during the \"continuous\" supply of digital content or services (such as Maps or Gmail)\nYour national laws may provide an even longer guarantee. Your rights under these legal guarantees aren't limited by any other commercial guarantees that we provide. If you want to make a guarantee claim, please contact us. You can find more information in the attached Terms of Service.\nNeed help? Contact us at +49 800 6279909 or colab-eu-support@google.com\n  Help center\n   Contact us\nPayments profile ID: 6153-4609-2122\nGoogle Commerce Limited Gordon House Barrow Street Dublin 4 Ireland\nYou have received this mandatory service announcement to update you about important changes to Colab or your account.\nGoogle Pay is the faster, simpler way to pay with Google. It keeps your payment info safe in your Google Account until you're ready to pay. Learn more", "type": "body", "module_number": 0}, {"node_index": 2007, "embedding": [15.00354290008545, -28.613265991210938, -16.46214485168457, 0.6998703479766846, 21.40822982788086, 2.2891101837158203], "text": "adastruct@gmail.com", "type": "recipient", "module_number": 0}, {"node_index": 2008, "embedding": [2.9231796264648438, -9.033184051513672, -11.837875366210938, 15.737076759338379, -9.683921813964844, 7.7288007736206055], "text": "Jun 17, 2024, 6:41\u202fPM", "type": "date", "module_number": 0}, {"node_index": 2009, "embedding": [5.613945960998535, 3.8973095417022705, -14.905106544494629, 3.789445161819458, -11.297012329101562, 11.324041366577148], "text": "Security alert", "type": "subject", "module_number": 0}, {"node_index": 2010, "embedding": [13.61390495300293, -14.790281295776367, -20.99931526184082, 2.003628969192505, 4.341452598571777, 7.881521701812744], "text": "no-reply@accounts.google.com", "type": "sender", "module_number": 0}, {"node_index": 2011, "embedding": [1.7850903272628784, 35.26359176635742, -19.18946647644043, 4.207516193389893, -40.808101654052734, 24.687891006469727], "text": "Google Drive for desktop was granted access to your Google Account\nadastruct@gmail.com\n\nIf you did not grant access, you should check this activity and secure your account.\nCheck activity\nYou can also see security activity at\nhttps://myaccount.google.com/notifications\nYou received this email to let you know about important changes to your Google Account and services.\n\u00a9 2024 Google Ireland Ltd., Gordon House, Barrow Street, Dublin 4, Ireland", "type": "body", "module_number": 0}, {"node_index": 2012, "embedding": [18.94366455078125, -36.839385986328125, -21.868785858154297, -0.08421538025140762, 28.9234561920166, 0.3867805004119873], "text": "adastruct@gmail.com", "type": "recipient", "module_number": 0}, {"node_index": 2013, "embedding": [4.423759937286377, -10.872563362121582, -17.02530860900879, 17.34881019592285, -9.527694702148438, 8.493057250976562], "text": "Jun 15, 2024, 11:18\u202fAM", "type": "date", "module_number": 0}, {"node_index": 2014, "embedding": [5.613945960998535, 3.8973095417022705, -14.905106544494629, 3.789445161819458, -11.297012329101562, 11.324041366577148], "text": "Security alert", "type": "subject", "module_number": 0}, {"node_index": 2015, "embedding": [13.61390495300293, -14.790281295776367, -20.99931526184082, 2.003628969192505, 4.341452598571777, 7.881521701812744], "text": "no-reply@accounts.google.com", "type": "sender", "module_number": 0}, {"node_index": 2016, "embedding": [1.7850903272628784, 35.26359176635742, -19.18946647644043, 4.207516193389893, -40.808101654052734, 24.687891006469727], "text": "Google Drive for desktop was granted access to your Google Account\nadastruct@gmail.com\n\nIf you did not grant access, you should check this activity and secure your account.\nCheck activity\nYou can also see security activity at\nhttps://myaccount.google.com/notifications\nYou received this email to let you know about important changes to your Google Account and services.\n\u00a9 2024 Google Ireland Ltd., Gordon House, Barrow Street, Dublin 4, Ireland", "type": "body", "module_number": 0}, {"node_index": 2017, "embedding": [18.94366455078125, -36.839385986328125, -21.868785858154297, -0.08421538025140762, 28.9234561920166, 0.3867805004119873], "text": "adastruct@gmail.com", "type": "recipient", "module_number": 0}, {"node_index": 2018, "embedding": [3.939548969268799, -7.797865390777588, -16.89202880859375, 17.043134689331055, -12.652063369750977, 9.512174606323242], "text": "Jun 14, 2024, 7:37\u202fPM", "type": "date", "module_number": 0}, {"node_index": 2019, "embedding": [5.613945960998535, 3.8973095417022705, -14.905106544494629, 3.789445161819458, -11.297012329101562, 11.324041366577148], "text": "Security alert", "type": "subject", "module_number": 0}, {"node_index": 2020, "embedding": [13.61390495300293, -14.790281295776367, -20.99931526184082, 2.003628969192505, 4.341452598571777, 7.881521701812744], "text": "no-reply@accounts.google.com", "type": "sender", "module_number": 0}, {"node_index": 2021, "embedding": [1.7850903272628784, 35.26359176635742, -19.18946647644043, 4.207516193389893, -40.808101654052734, 24.687891006469727], "text": "Google Drive for desktop was granted access to your Google Account\nadastruct@gmail.com\n\nIf you did not grant access, you should check this activity and secure your account.\nCheck activity\nYou can also see security activity at\nhttps://myaccount.google.com/notifications\nYou received this email to let you know about important changes to your Google Account and services.\n\u00a9 2024 Google Ireland Ltd., Gordon House, Barrow Street, Dublin 4, Ireland", "type": "body", "module_number": 0}, {"node_index": 2022, "embedding": [18.94366455078125, -36.839385986328125, -21.868785858154297, -0.08421538025140762, 28.9234561920166, 0.3867805004119873], "text": "adastruct@gmail.com", "type": "recipient", "module_number": 0}, {"node_index": 2023, "embedding": [4.698155403137207, -11.222317695617676, -17.141183853149414, 16.958271026611328, -8.793292045593262, 8.303925514221191], "text": "Jun 13, 2024, 5:03\u202fPM", "type": "date", "module_number": 0}, {"node_index": 2024, "embedding": [5.909665107727051, 3.42453670501709, -14.125934600830078, 3.9641687870025635, -12.272905349731445, 11.301592826843262], "text": "Critical security alert", "type": "subject", "module_number": 0}, {"node_index": 2025, "embedding": [13.452495574951172, -15.234749794006348, -20.013999938964844, 2.8855855464935303, 2.873426914215088, 7.937228679656982], "text": "no-reply@accounts.google.com", "type": "sender", "module_number": 0}, {"node_index": 2026, "embedding": [2.1532599925994873, 33.25666809082031, -18.450551986694336, 4.766345024108887, -40.41633605957031, 24.185047149658203], "text": "Sign-in attempt was blocked\nadastruct@gmail.com\nSomeone just used your password to try to sign in to your account. Google blocked them, but you should check what happened.\nCheck activity\nYou can also see security activity at\nhttps://myaccount.google.com/notifications\nYou received this email to let you know about important changes to your Google Account and services.\n\u00a9 2024 Google Ireland Ltd., Gordon House, Barrow Street, Dublin 4, Ireland", "type": "body", "module_number": 0}, {"node_index": 2027, "embedding": [18.53432846069336, -35.308509826660156, -20.978822708129883, 0.6686646342277527, 25.76494026184082, 1.1117610931396484], "text": "adastruct@gmail.com", "type": "recipient", "module_number": 0}, {"node_index": 2028, "embedding": [4.395001411437988, -8.93355941772461, -16.328413009643555, 17.165681838989258, -12.947996139526367, 9.39785385131836], "text": "Jun 13, 2024, 7:17\u202fAM", "type": "date", "module_number": 0}, {"node_index": 2029, "embedding": [4.01972770690918, 3.762194871902466, -8.505731582641602, 4.342446804046631, -13.26536750793457, 10.494087219238281], "text": "Ihre Einladung: AWS Summit EMEA - On-Demand Hub", "type": "subject", "module_number": 0}, {"node_index": 2030, "embedding": [12.867422103881836, -18.9650821685791, -14.664198875427246, 2.0960140228271484, 7.094815254211426, 5.7465009689331055], "text": "aws-marketing-email-replies@amazon.com", "type": "sender", "module_number": 0}, {"node_index": 2031, "embedding": [-0.765322744846344, 33.27458190917969, -10.507369041442871, 5.380259037017822, -39.939308166503906, 22.031383514404297], "text": "  Erleben Sie die AWS Summits jederzeit und \u00fcberall\n    Wir freuen uns, Sie zum AWS Summit EMEA On-Demand Hub einzuladen, f\u00fcr alles Wissenswerte rund um Cloud, Daten und KI. Sie erhalten unbegrenzten Zugriff auf \u00fcber 100 spannende Sessions, darunter technische Pr\u00e4sentationen, Kundenbeispielen und Demos.\n\nErkunden Sie die Zukunft der Cloud-Technologie jetzt bequem wann und wo Sie m\u00f6chten.\n    Jetzt ansehen\n\n    Verf\u00fcgbare Inhalte\n    Wir freuen uns, Ihnen mitteilen zu k\u00f6nnen, dass die neuesten Sessions des AWS Summit Berlin 2024 jetzt auf dem AWS Summit On-Demand Hub verf\u00fcgbar sind. Sie erhalten zus\u00e4tzlich auch Zugang zu den Vortr\u00e4gen der AWS Summits in London, Amsterdam und Paris. Zu den Inhalten geh\u00f6ren unter anderem:\n      Keynotes\nIn diesen inspirierenden Sessions k\u00f6nnen Sie die neuesten AWS-Innovationen und wichtigsten Technologietrends anhand von Anwendungsf\u00e4llen von Kunden kennenlernen.\n      Generative KI\nEntdecken Sie die revolution\u00e4ren F\u00e4higkeiten von generativer KI und lernen Sie, wie Sie Produkte wie Amazon Q, Amazon SageMaker und Amazon Bedrock nutzen k\u00f6nnen.\n      Daten und Analysen\nOptimieren Sie die Verwaltung und Analyse Ihrer Daten mit Best Practices und spezialisierten AWS-Services.\n      Sicherheit\nErh\u00f6hen Sie die Sicherheit Ihrer Anwendungen und Infrastruktur mit branchenf\u00fchrenden Cybersicherheitsl\u00f6sungen von AWS.\n    Mehr erfahren\n    Freundliche Gr\u00fc\u00dfe\nIhr AWS-Team\n                          Eigenes Konto | Jetzt loslegen | Produkte | L\u00f6sungen | Preise | Partner | Dokumentation | Training | Veranstaltungen & Webinare | AWS Activate | Marketplace | Neuigkeiten | Blog | Berichte von Analysten\nOnline ansehen\n  Wenn Sie zuk\u00fcnftig keine E-Mails mehr von Amazon Web Services erhalten m\u00f6chten, k\u00f6nnen Sie sich hier abmelden.\nAmazon Web Services, Inc. ist eine Tochtergesellschaft von Amazon.com, Inc. Amazon.com ist eine eingetragene Marke von Amazon.com.\nDiese Nachricht wurde von Amazon Web Services, Inc. bzw. Tochtergesellschaften des Unternehmens, 410 Terry Ave. North, Seattle, WA 98109 erstellt und verteilt.\n\u00a9 2023 Amazon Web Services, Inc. bzw. Tochtergesellschaften des Unternehmens. Alle Rechte vorbehalten. Lesen Sie unsere Datenschutzbestimmungen.\n ", "type": "body", "module_number": 0}, {"node_index": 2032, "embedding": [15.693094253540039, -31.329256057739258, -16.00273323059082, 1.6892240047454834, 21.00708770751953, 1.957857370376587], "text": "adastruct@gmail.com", "type": "recipient", "module_number": 0}, {"node_index": 2033, "embedding": [2.8742246627807617, -11.51527214050293, -10.1672945022583, 17.879446029663086, -11.042343139648438, 7.185896873474121], "text": "Jun 12, 2024, 10:21\u202fAM", "type": "date", "module_number": 0}, {"node_index": 2034, "embedding": [5.613945960998535, 3.8973095417022705, -14.905106544494629, 3.789445161819458, -11.297012329101562, 11.324041366577148], "text": "Security alert", "type": "subject", "module_number": 0}, {"node_index": 2035, "embedding": [13.61390495300293, -14.790281295776367, -20.99931526184082, 2.003628969192505, 4.341452598571777, 7.881521701812744], "text": "no-reply@accounts.google.com", "type": "sender", "module_number": 0}, {"node_index": 2036, "embedding": [-0.3489919900894165, 15.7989501953125, 0.8259349465370178, 5.620759963989258, -19.940093994140625, 9.858896255493164], "text": "", "type": "body", "module_number": 0}, {"node_index": 2037, "embedding": [18.94366455078125, -36.839385986328125, -21.868785858154297, -0.08421538025140762, 28.9234561920166, 0.3867805004119873], "text": "adastruct@gmail.com", "type": "recipient", "module_number": 0}, {"node_index": 2038, "embedding": [3.4831104278564453, -6.069738388061523, -16.92845344543457, 17.3399600982666, -13.951801300048828, 10.081378936767578], "text": "Jun 12, 2024, 12:20\u202fAM", "type": "date", "module_number": 0}, {"node_index": 2039, "embedding": [5.613945960998535, 3.8973095417022705, -14.905106544494629, 3.789445161819458, -11.297012329101562, 11.324041366577148], "text": "Security alert", "type": "subject", "module_number": 0}, {"node_index": 2040, "embedding": [13.61390495300293, -14.790281295776367, -20.99931526184082, 2.003628969192505, 4.341452598571777, 7.881521701812744], "text": "no-reply@accounts.google.com", "type": "sender", "module_number": 0}, {"node_index": 2041, "embedding": [1.7850903272628784, 35.26359176635742, -19.18946647644043, 4.207516193389893, -40.808101654052734, 24.687891006469727], "text": "Google Drive for desktop was granted access to your Google Account\nadastruct@gmail.com\n\nIf you did not grant access, you should check this activity and secure your account.\nCheck activity\nYou can also see security activity at\nhttps://myaccount.google.com/notifications\nYou received this email to let you know about important changes to your Google Account and services.\n\u00a9 2024 Google Ireland Ltd., Gordon House, Barrow Street, Dublin 4, Ireland", "type": "body", "module_number": 0}, {"node_index": 2042, "embedding": [18.94366455078125, -36.839385986328125, -21.868785858154297, -0.08421538025140762, 28.9234561920166, 0.3867805004119873], "text": "adastruct@gmail.com", "type": "recipient", "module_number": 0}, {"node_index": 2043, "embedding": [3.487441062927246, -4.61702299118042, -16.761362075805664, 16.613527297973633, -14.757881164550781, 10.612527847290039], "text": "Jun 10, 2024, 1:25\u202fPM", "type": "date", "module_number": 0}, {"node_index": 2044, "embedding": [6.527429103851318, 4.60546350479126, -16.136442184448242, 4.502185821533203, -13.64750862121582, 12.479564666748047], "text": "June admin update", "type": "subject", "module_number": 0}, {"node_index": 2045, "embedding": [16.34416961669922, -22.49789047241211, -22.357275009155273, 2.548313856124878, 10.790121078491211, 6.116445541381836], "text": "no-reply@email.slackhq.com", "type": "sender", "module_number": 0}, {"node_index": 2046, "embedding": [1.1307655572891235, 41.15378189086914, -20.136486053466797, 5.546136856079102, -47.977298736572266, 27.56662940979004], "text": "JUNE 2024\nSlack Admin Updates\n\nRead on to prepare yourselves and your members for new capabilities, changes and deprecations.\nWHAT'S NEW\nWhat\u2019s new or currently rolling out:\n  Channel manager invitation restrictions (Enterprise Grid)\nChannel managers can restrict members and guests from inviting others to private channels, making it so that only channel managers and admins will be able to invite users to the channel.\nLearn more \u200c \u2192\n  Integrate Google Calendar and Microsoft Outlook with Slack OOO\nA new option allows members to automatically set their Slack status to \u201cout of office\u201d when set in Google Calendar or Microsoft Outlook.\nLearn more \u200c \u2192\n  New channel audit report export type (Enterprise Grid, Business+)\nThe channel audit and channel membership audit is available for eligible customers to self-serve via the Exports page in Slack. This additional export type will be available to primary owners and owners. Enterprise Grid customers can also assign additional members the Export Admin system role.\nLearn more \u200c \u2192\n  Corporate email restrictions (Enterprise Grid)\nA new setting allows org owners to block members from joining external workspaces with their corporate email address.\nLearn more \u200c \u2192\n  Trigger curation for Workflow Builder admins (Enterprise Grid)\nOwners and admins can now control which triggers can be used to build workflows. This functionality mirrors the existing controls for managing Workflow Builder steps.\nLearn more \u200c \u2192\n  New setting to require org owners to log in with SSO (Enterprise Grid)\nAny Org Owner can enable a new setting to require that all Org Owners always sign in to Slack via SSO (rather than bypassing SSO to sign in with their email address and password).\nLearn more \u200c \u2192\n  Custom DLP messaging (Enterprise Grid)\nDLP admins have the option to set up custom text for tombstone rules and \u201cShow a warning\u201d rules. Text can be customized on a rule-by-rule basis.\nLearn more \u200c \u2192\n  Audit Logs dashboard enhancements (Enterprise Grid)\nThe Audit Logs dashboard has a new Security Detections tab that centralizes all anomaly audit logs so that admins and Audit Log Admins can easily filter and analyze their anomaly audit logs. The existing view Full Log Details modal will now also include anomaly \u201creason\u201d definitions.\nLearn more \u200c \u2192\n  Legacy permissions migration\nSlack\u2019s 20 existing legacy permissions will be migrating to the Account Types dashboard to streamline permissions administration.\nLearn more \u200c \u2192\n  Request to join a huddle\nWhen a member uses a huddle link to join a huddle in a conversation they don\u2019t have access to, they can request to join.\nCOMING SOON\n  Slack lists\nLists is a new surface where teams can manage tasks, requests, issues and more in Slack.\n  Monthly active user data\nThe overview dashboard displays data showing monthly active users\u2014the number of people who have read or sent a message in at least one channel or direct message at least once in the past 28 days within a given workspace. Enterprise Grid organizations will also be able to access this data at the org level.\n  Shared sidebar sections, powered by user groups\nA new option will allow a user group\u2019s default channels to automatically appear as a shared section in all group members\u2019 sidebars instead of the channels showing in the catchall \u201cChannels\u201d section.\n  Important changes to legacy workflows\nFollowing the release of the new version of Workflow Builder in September 2023, we announced the deprecation of the legacy version of Workflow Builder. As part of this deprecation, you will no longer be able to create legacy workflows, use legacy templates, or copy existing legacy workflows as of June 24, 2024.\nLearn more \u200c \u2192\n  Visibility into channel canvas edits\nMembers will have the option to share canvas updates within the channel. Channel members will see a message indicating that changes have been made to the canvas.\n  Custom roles (Enterprise Grid)\nAdmins will have the ability to select from a menu of permissions, then name and assign that role to individual members or IDP groups.\nUpcoming deprecations\n  32-bit Slack desktop app for Windows\nStarting with the release of desktop app version 4.39 in June 2024, Slack will no longer release a 32-bit app for Windows. Users on version 4.38 and below can continue using the 32-bit client until their app version reaches the end of its support lifecycle.\nLearn more \u200c \u2192\n\nEmail link to sign in on mobile functionality is retiring on July 24, 2024\nThe option to sign in on mobile with a link emailed to your device will be retired in July. Users can instead scan a QR code with their mobile device when logged in on desktop.\n\nOS, app and browser versions reaching end of support on September 1, 2024\nIn accordance with our support lifecycle policy, we have discontinued support for a number of operating systems, app versions and browsers.\nLearn more \u200c \u2192\n\nGoogle Calendar for Team Events app will be retired on September 10, 2024\nWith the launch of a newer Google Calendar app, we will be retiring support for the legacy Google Calendar for Team Events app. The newer app offers enhanced features, including the ability to send calendar notifications to channels.\nLearn more \u200c \u2192\n\nLegacy desktop configurations will be deprecated on September 17, 2024\nWith the introduction of a streamlined desktop app configuration, the following legacy configurations are redundant and will be deprecated.\nSlack default sign-in on all platforms. See the default sign-in file\nEnvironment-variable SLACK_NO_AUTO_UPDATES on Mac and Windows\nThe user preference SlackNoAutoUpdates on Mac. See disable automatic updates\n\n\nDesignated channels for flagged messages will be retired on September 17, 2024\nDesignated channels for flagged message review are being retired, and flagged messages will instead be reviewed from the admin dashboard. Organizations currently using a designated channel can view and take action on outstanding messages from the channel, but newly flagged messages will be sent to the dashboard.\nLearn more \u200c \u2192\n\nFiles.upload API will be retired on March 11, 2025\nAny new applications created on or after this date will be prevented from invoking the files.upload API. Full deprecation will take place on March 11, 2025. To prepare for this change, we recommend migrating away from files.upload and instead using the combination of files.getUploadURLExternal and files.completeUploadExternal. More information on how to use these two APIs together can be found on our Uploading files documentation.\n\nUpcoming changes to legacy bots and classic apps\nBeginning on June 4, 2024, you will no longer be able to create legacy custom integration bot users or classic Slack apps.\nLearn more \u200c \u2192\n\nHELP CENTER\n\u00a92024 Slack Technologies, LLC, a Salesforce company.\nSalesforce Tower, 415 Mission Street, 3rd Floor,\nSan Francisco, CA 94105, United States\nslack.com\nOur Blog   |   Policies\nHelp Center   |   Slack Community\nAll rights reserved. Various trademarks held by their respective owners.\nView in browser", "type": "body", "module_number": 0}, {"node_index": 2047, "embedding": [18.44593048095703, -33.88573455810547, -22.289859771728516, 1.8841840028762817, 24.132484436035156, 2.096280813217163], "text": "AdaStruct@gmail.com", "type": "recipient", "module_number": 0}, {"node_index": 2048, "embedding": [5.554962635040283, -10.419775009155273, -18.404882431030273, 17.839113235473633, -11.904029846191406, 9.725814819335938], "text": "Jun 10, 2024, 2:51\u202fAM", "type": "date", "module_number": 0}]
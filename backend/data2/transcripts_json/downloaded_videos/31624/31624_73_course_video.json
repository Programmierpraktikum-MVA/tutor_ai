[{"lecture": "31624_73_course_video", "Timestamps": [{"text": "  Dieses Video bietet eine Einfuehrung in heuristischer Algorithmen.  Eine Heuristik ist ein Ansatz zur Loesung eines Problems, der auf Intuition bzw. begrenzten  Wissen basiert.  Heuristische Algorithmen basieren auf Heuristiken.  Der Begriff heuristischer Algorithmen ist recht unscharf definiert.", "start": 0.0, "end": 29.6}, {"text": " Heuristische Algorithmen werden meist entwickelt und benutzt, um eine schnellere Laufzeit fuer  konkrete Anwendungsfaelle zu erzielen.  Bei Optimierungsproblemen werden oft Abstriche bei der Optimalitaet in Kaufernung.  Das heisst, viele heuristische Algorithmen bestimmen Loesungen, die gar nicht den optimalen  Wert erzielen.", "start": 29.6, "end": 47.92}, {"text": "  Dabei ist oft auch nicht bekannt, wie weit die bestimmte Loesung vom Optimum entfernt  sein kann.  Verfahren, die zumindest eine Garantie fuer diese Abweichung vom Optimum geben, heissen  approximative Algorithmen.  Sie werden in einem separaten Video besprochen.", "start": 47.92, "end": 71.75999999999999}, {"text": " Heuristische Algorithmen, die garantiert eine optimale Loesung finden, bieten bei der  Laufzeit im Worst Case fast nie einen Vorteil gegenueber dem ueblichen nicht heuristischen  Ansatz fuer das Problem.  Daher werden hierzu Laufzeitanalyse meist empirische Werte fuer spezielle Typen von  Aufgaben benutzt.", "start": 71.75999999999999, "end": 88.52000000000001}, {"text": " Analytische Laufzeitanalysen werden manchmal durchgefuehrt, um zu zeigen, dass ein heuristischer  Algorithmus im Worst Case zumindest nicht langsamer ist.  Heuristische Algorithmus ist also ein Schwammiger Begriff.  Und der Vorteil dieser Algorithmen ist meist nicht handfest.  Eine positive Ausnahme macht der sogenannte Asternalgorithmus.", "start": 88.52000000000001, "end": 107.84}, {"text": "  Man kann ihn als eine spezielle Variante des Branch & Bound Ansatz auffassen, bei der  eine Heuristik sowohl als Bound zum Abschneiden aussichtloser Teilloesungen benutzt wird,  als auch fuer eine geschickte Reihenfolge der Exploration.  Da diesem Algorithmus eine besondere Rolle unter den heuristischen Verfahren zukommt,  ist ihm ein eigenes Video gewidmet.", "start": 107.84, "end": 131.76}, {"text": "  Hier gebe ich ein Beispiel fuer einen intuitiven Ansatz eines heuristischen Verfahrens zum  finden einer Tour des Handlungsreisenden.  Also eine Loesung des NP-vollstaendigen Traveling Salesman Problems, das allerdings nicht zu  einer Optimalloesung fuehrt.  Gegeben ist eine Menge von Knoten und die Distanzen zwischen allen Paaren von Knoten.", "start": 131.76, "end": 157.28}, {"text": "  Die sind hier nicht als Kanten-Expeziele eingezeichnet, da sonst der Graf unuebersichtlich sein wuerde.  Soll die kuerzeste Tour gefunden werden, die jeden Knoten genau einmal besucht.  Ein intuitiver Ansatz ist es, moeglichst kurze Kanten zu benutzen.", "start": 157.88, "end": 179.76}, {"text": " Man startet mit einem beliebigen Knoten und geht dann immer zu denjenigen, der noch nicht  besuchten Knoten zu dem man ueber die kuerzeste Kante gelangt.  In diesem Beispielgrafen sieht das folgendermassen aus.  Wir starten bei diesem Knoten und gucken, welcher der anderen Knoten am naechsten dran ist.", "start": 180.76, "end": 203.39999999999998}, {"text": " Das ist dieser Knoten, von diesem Knoten gelangt zu dem Knoten, der den kuerzesten Abstand  hat und da hierhin, von dort hierhin.  Wir sehen also, es ist ein greedy Verfahren und passt auf die eingangsgegebene Definition,  dass eine Horistik auf begrenztem Wissen beruht.  Es werden nur die Kanten, die vom aktuellen Knoten ausgehen, beruecksichtigt.", "start": 203.39999999999998, "end": 222.16000000000003}, {"text": "  Hier sehen wir auch die Grenzen des Verfahrens, wenn wir hier weitermachen.  Kommen wir hierhin und dann zu diesem Knoten und nun muss der letzte Knoten ueber recht  lange Kanten eingebunden werden.  Zu einem frueheren Zeitpunkt haette der Knoten mit einem deutlich kuerzeren Atemsteller  eingebunden werden koennen.", "start": 222.16000000000003, "end": 246.52}, {"text": "  Fuer einige Problemstellungen ist diese Horistik gut genug, aber fuer bestimmte Grafen kann  die Loesung beliebig weit vom Optimum entfernt sein und fuer viele Grafen ist die Loesung  zumindest nicht besonders gut.  Um bessere Loesungen zu erhalten, muss man bei der Horistik also kreativer werden.  In der Praxis funktioniert fuer viele Grafen folgende Ansatzgut.", "start": 246.52, "end": 272.28000000000003}, {"text": "  Man waehlt zufaellig einen Startknoten S aus und bildet V-1 viele Minitouren, die nur jeweils  die Kante von S zu einem anderen Knoten und zurueckbeinhalten.  Von diesen Touren werden dann schrittweise immer zwei zu einer zusammengefuegt bis am  Ende eine Tour uebrig bleibt, die alle Knoten verbindet.", "start": 272.28000000000003, "end": 309.52}, {"text": " Nehmen wir uns also zwei Touren vor, zum Beispiel diese hier und diese hier und die sollen nun  so zusammengefuegt werden, dass diese zwei aeusseren Knoten, die mit S verbunden sind,  nun direkt verbunden werden.  Dann werden also die Verbindungen von diesen Knoten zu S geloescht.", "start": 309.52, "end": 328.47999999999996}, {"text": " Dies macht man nun iterativ, zum Beispiel auch fuer diese beiden Touren und stellt sich  die Frage, wie die Touren bzw. die Kanten fuer die Zusammenlegungen ausgewaehlt werden.  Dies macht man so, dass die Zusammenlegungen die Touren moeglichst viel Weg einsparen.  In diesem Fall fuegen wir also eine Kante von V nach V ein und loeschen die Kanten von S  nach V und S nach W.", "start": 328.48, "end": 357.12}, {"text": "  Das Kriterium sollte also sein, dass die Gewichtseinsparung moeglichst gross ist.  Also das Gewicht der geloeschten Kante E1 plus das Gewicht der geloeschten Kante E2 minus  den Gewicht der eingefuegten Kante E3 soll maximal sein.  Wir fuehren das Verfahren fort und nun legen wir die schon vergroesserte Tour unten links  mit dieser Tour zusammen.", "start": 363.36, "end": 392.16}, {"text": "  Damit fuegen wir also diese Kante ein und die entsprechenden Kanten werden geloescht.  Und ich fuehre das Verfahren zu Ende.  Und damit haben wir eine schoene TSP-Tour gefunden.  Schauen wir uns noch kurz die Laufzeit an.  Die Schleife geht hier ueber O von V viele Iterationen.  Und im Schleifen Rumpf werden im Wesentlichen Paare von Kanten ausgesucht mit der maximalen  Gewichtseinsparung.", "start": 392.16, "end": 428.71999999999997}, {"text": "  Und wenn man sich da geschickt anstellt, kann man das in O von V Quadrat implementieren,  so dass wir insgesamt bei O von V hoch 3 auskommen.  Eine optimale Loesung erhaelt man natuerlich nicht unbedingt.  Das TSP ist der NP vollstaendig.  Insofern kann es interessant sein, wenn man eine recht gute Loesung in vergleichsweise  schneller Laufzeit, also wie hier O von V hoch 3 bekommt.", "start": 428.71999999999997, "end": 456.48}, {"text": "  Eine Garantie wie gut die Loesung ist, also wie klein die Abweichung von der kuerzesten  Tour ist, gibt es auch hier nicht.  In dem Kapitel ueber approximative Algorithmen wird ein einfacher Ansatz beschrieben, mit  dem man effizient eine Tour bekommt, die hoechstens doppelt so lang ist wie die optimale Tour.  Das gilt allerdings nur fuer das sogenannte metrische TSP.", "start": 456.48, "end": 476.88}, {"text": "  Dabei muessen die Kantengewichte die Dreiecksung gleichum erfuellen.  Genaues finden Sie im Algodatskript.", "start": 476.88, "end": 479.2}]}]
[{"lecture": "31624_78_course_video", "Timestamps": [{"text": "  Diese Woche beschaeftigen wir uns mit der Herausforderung kuerzeste Wege in gewichteten Grafen zu finden.  Dabei ist das Wort kuerzeste nicht unbedingt woertlich zu nehmen.  Hier ist die Laenge eines Weges als die Summe der Kantengewichte definiert.  Man koennte also auch von leichtesten Wegen sprechen.  Allerdings koennen die Kantengewichte sowieso ganz unterschiedliches modulieren.", "start": 0.0, "end": 29.0}, {"text": "  Weglaengen, Fahrzeit, Baukosten, Kontrastuebergaenge in einem Bild, was auch immer.  Also laden wir bei dem Begriff der kuerzesten Wege und behalten im Hinterkopf,  dass die Bedeutung je nach Anwendung variiert.  Das konkrete Problem, den wir uns widmen, besteht darin,  in einem gewichteten Digrafen, die kuerzesten Wege von einem Startknoten zu allen anderen Knoten zu finden.", "start": 29.0, "end": 55.0}, {"text": "  Auf Englisch wird das Single Source Shortest Path Problem genannt.  Das Grundprinzip aller Algorithmen, die hier besprochen werden, ist sehr einfach.  Du suche den Grafen, wenn du dabei einen kuerzeren Weg zu einem Knoten findest, nur 10.  Dieses Prinzip wird Relaxierung genannt.  Die Bezeichnung ist vielleicht etwas gewoehnungsbeduerftig.  Es ist aber etwas ganz Naheligenes.  Schauen wir es uns an.", "start": 55.0, "end": 84.0}, {"text": "  Wir bezeichnen fuer jeden Knoten V mit Dist von V die Laenge eines bisher kuerzesten der bekannten Wege  von S nach V.  Der Distwert des Startknotens ist 0.  Sehen wir uns an, wie wir zu den anderen Knoten kommen.  Zu dem Knoten U kommen wir ueber die Kante mit Gewicht 3.  Das heisst, wir wissen, der kuerzeste Weg hat maximal die Laenge 3.  Gehen wir weiter ueber die Kante von U nach V.", "start": 84.0, "end": 118.0}, {"text": "  Dann sehen wir, dass diese Weglaenge dieses Weges von S ueber U nach V die Laenge 3 plus 8, also 11 hat.  Das ist unsere bisherige Schaetzung fuer den kuerzesten Weg von S nach V.  Nun schauen wir die Wege unten lang an.  Von S nach V hat die Kante des Gewichts 5.  Und nun kommt der interessante Teil.  Jetzt betrachten wir die Kante von V nach V mit Gewicht 4.", "start": 118.0, "end": 157.0}, {"text": "  Ueber diesen Weg nach V von S ueber V erhalten wir die Weglaenge 5 fuer die Strecke bis V plus das Gewicht der Kante von V nach V, also 4, 5 plus 4 ist 9.  Dies ist nun ein geringeres Gewicht oder eine geringere Laenge als die bisher beste Schaetzung, die wir fuer den Knoten W hatten.  Wir haben also einen kuerzeren Weg von S nach V gefunden, naemlich den, der ueber den Knoten V fuehrt.", "start": 157.0, "end": 193.0}, {"text": "  Dies wird durch die Relation ausgedrueckt, dass die alte Schaetzung des Dieswerts von W groesser ist, als die Schaetzung ueber den neuen Weg, der hier angeschaut wird, ueber V plus die neue Kante von V nach V.  Man sagt, wenn dieser neue Wert kuerzer ist, als der alte Wert besteht Relaxierungsbedarf fuer diese Kante von V nach V.", "start": 193.0, "end": 211.0}, {"text": "  Das bedeutet also inhaltlich, die Kante erschliesst einen kuerzeren Weg nach V.  Was man in diesem Fall macht, ist, dass man den alten Weg nach V streicht aus dem Baum und die neue Kante dem Baum der kuerzesten Fahde hinzufuegt.  Und natuerlich wird der Dieswert aktualisiert.  Hier kann man nun auch erklaeren, wie es zu dem Begriff Relaxierung kommt.", "start": 211.0, "end": 243.0}, {"text": "  Das kommt von der Vorstellung eines Gummibandes, was zunaechst von S ueber U nach W relativ straff gespannt ist, weil die Weglaenge relativ gross ist, haelf.  Und dann wird das Gummiband entspannt, also relaxiert, wenn es nun den neuen Weg ueber die kuerzere Strecke ueber V geleitet wird.  Wir koennen also das Relaxieren einer Kante durch den folgenden Teutokot ausdruecken.", "start": 243.0, "end": 271.0}, {"text": "  Der Dieswert von W wird gesetzt auf die Laenge des neuen gefundenen Weges, was die Weglaenge nach V ist plus die Kante von V nach W.  Ausserdem wollen wir nicht nur die Laenge der kuerzesten Wege kennen, sondern auch die Wege selbst.  Dafuer benutzen wir das ArrayNumSparent in dem zu jedem Knoten V der Vorgaengerknoten auf dem kuerzesten Weg nach V gespeichert wird.", "start": 271.0, "end": 294.0}, {"text": "  Dieses wird dann auch in der Relax-Pozidur entsprechend gesetzt.  Dies ist die algorithmische Umsetzung des einfachen Grundprinzips, wenn du einen kuerzeren Weg findest, nur 10.  Nun kommt die erfreuliche Botschaft, dass dieses Grundprinzip eigentlich schon ausreicht, um kuerzeste Wege zu finden.  Es gilt die folgende Bedingung fuer kuerzeste Wege.", "start": 294.0, "end": 322.0}, {"text": "  Fuer jeden Knoten V ist ein Diss von V die Laenge eines kuerzesten Weges von S nach V gespeichert, das was wir Distanz nehmen.  Dies gilt genau dann, wenn es keine Kante mit Relaxierungsbedarf gibt.  Das heisst, es muss fuer alle Kanten gelten, die Distanz zum Zielknoten ist kleiner oder gleich, der Distanz zum Anfangsknoten plus Kantengewicht.", "start": 322.0, "end": 345.0}, {"text": "  Wenn also fuer keine Kante mehr Relaxierungsbedarf steht, sind die kuerzesten Wege gefunden.  Hier wird also ein Zusammenhang zwischen einem lokalen Kriterium hergestellt.  Fuer keine Kante gilt lokal der Relaxierungsbedarf zu einer globalen Eigenschaft, dass alle kuerzesten Wege gefunden sind.  Dies riecht schon nach einem Redial-Verfahren.", "start": 345.0, "end": 370.0}, {"text": "  Das werden wir dann auch spaeter bei der Besprechung des Dyxtra Algorithmus sehen.  Der allgemeine Ansatz zum finden kuerzester Wege kann also durch den folgenden Troideokot ausgedruckt werden.  Zu Beginn werden die Distwerte mit unendlich initialisiert und der Distwert fuer den Startknoten mit null.  Dann iteriert man, solange man noch eine Kante mit Relaxierungsbedarf findet und relaxiert sie.", "start": 370.0, "end": 396.0}, {"text": "  Die Korrektheit dieses Algorithmus folgt aus der obigen Bedingung.  Wenn es keine Kante mehr mit Relaxierungsbedarf gibt, wissen wir nach dieser Bedingung, sind alle kuerzesten Wege gefunden.  Die Frage ist nur, ob dieser Verfahren auch terminiert und das ist in der Tat der Fall.  Denn bei jedem Schritt wird ein Distwert verringert durch Relaxierung.", "start": 396.0, "end": 421.0}, {"text": "  Ein Distwert entspricht immer der Laenge eines einfachen Weges.  Da es nur endlich viele einfache Wege im Grafen gibt, kann es nur endlich viele Schritte mit einer Verringerung geben.  Dabei ist allerdings noch ein Spezialfall zu besprechen.  Hier ist der Zyklus ABC und die Summe der Kantengewichte ist minus 1.", "start": 421.0, "end": 449.0}, {"text": "  Ist ein solcher Zyklus von dem Startknoten S aus erreichbar, dann ist die Frage nach kuerzesten Wegen nicht gut gestellt.  Jedes zusaetzliche Durchlaufen des Zyklus verringert das Gewicht des Weges.  Betrachten wir zum Beispiel die Laenge von Wegen von S nach A.  Der direkte Weg hat das Gewicht 4.  Wenn wir einmal um den Zyklus laufen, erhalten wir einen Weg mit Gewicht 4 minus 1, also 3.", "start": 449.0, "end": 480.0}, {"text": "  Wenn wir zweimal um den Zyklus laufen, ist das Gewicht nur noch 2, bei 3 mal 1 und so weiter.  Wir finden also Wege von S nach A mit beliebig kleinem Gewicht, indem wir den Zyklus immer oefter durchlaufen.  Es ist also nicht definiert, was der kuerzeste Weg von S nach A ist, wenn man auf dem Weg negative Zyklen benutzen kann.", "start": 481.0, "end": 505.0}, {"text": "  Daher nehmen wir als Voraussetzung fuer alle Probleme mit kuerzesten Wegen, dass es keine negativen Zyklen gibt.  Dann sind kuerzeste Wege tatsaechlich immer einfache Wege.  Somit ist also die Terminierung und Korrektheit des allgemeinen Ansatzes gesichert.  Nun geht es nur noch darum zu konkretisieren, wie in jedem Durchlauf die Kante ausgewaehlt wird, die redaktiert werden soll.", "start": 506.0, "end": 526.0}, {"text": "  Am bekanntesten sind die beiden folgenden Algorithmen.  Der Bellmann-Ford-Algorithmus verlaeuft die Knoten in der Reihenfolge der Breitensuche und redaktiert jeweils alle ausgehenden Kanten.  Dabei muessen allerdings unter Umstaenden mehrerer Durchlaeufe durch den Grafen gemacht werden,  der im Verlauf der Suche ein kuerzerer Weg zu einem schon bearbeiteten Knoten gefunden werden kann.", "start": 526.0, "end": 550.0}, {"text": "  Unter dieser Mehrfachbearbeitung leidet die Effizienz, zumindest im Wolf's Gaze.  Wenn man die Aufgabe auf Grafen mit nicht negativen Gewichten einschraenkt, kann der Dyxtralgorithmus punkten.  Er funktioniert bei dieser Einschraenkung als ein Reliefverfahren, bei dem jede Kante nur einmal relaxiert wird.  Diese beiden Algorithmen sind fuer viele Anwendungen wichtig und auch fuer die Algoda Tlazor.", "start": 550.0, "end": 573.0}, {"text": "  Daher werden Sie in eigenen Videos genauer besprochen.", "start": null, "end": 573.0}]}]